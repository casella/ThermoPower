package PowerPlants "Models of thermoelectrical power plants components" 
  import SI = Modelica.SIunits;
  import ThermoPower.Choices.Init.Options;
annotation (uses(ThermoPower(version="2"), Modelica(version="3.0-development")));
  
  package GasTurbine 
    package Interfaces 
      
      partial model GasTurbine "Base class for Gas Turbine" 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package AirMedium = ThermoPower.Media.Air extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FuelMedium = ThermoPower.Media.NaturalGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        ThermoPower.Gas.FlangeA FuelInlet(redeclare package Medium = FuelMedium)
          annotation (extent=[-20,180; 20,220]);
        ThermoPower.Gas.FlangeA AirInlet(redeclare package Medium = AirMedium) 
          annotation (extent=[-220,140; -180,180]);
        ThermoPower.Gas.FlangeB FlueGasOutlet(redeclare package Medium = 
              FlueGasMedium) 
          annotation (extent=[180,140; 220,180]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        annotation (Diagram,                 Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=76,
                rgbcolor={170,170,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-200,12; 200,-12],style(
                color=76,
                rgbcolor={170,170,255},
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Ellipse(extent=[-30,150; 30,90],style(
                color=9,
                rgbcolor={175,175,175},
                gradient=3,
                fillColor=1,
                rgbfillColor={255,0,0})),
            Polygon(points=[-30,30; -40,30; -40,120; -30,120; -30,30],
                                                                     style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[30,30; 40,30; 40,120; 30,120; 30,30],
                                                                style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[-130,112; -120,106; -120,166; -200,166; -200,154;
                  -130,154; -130,112],
                style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[130,112; 120,108; 120,166; 200,166; 200,154; 130,
                  154; 130,112],                                                style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[-130,120; -30,40; -30,-40; -130,-120; -130,120],
                                                                       style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[130,120; 30,40; 30,-40; 130,-120; 130,-120; 130,120],
                                                                          style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[4,150; -4,150; -8,200; 8,200; 4,150],    style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255}))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        ThermoPower.PowerPlants.Buses.Sensors SensorsBus 
                                 annotation (extent=[180,-120; 220,-80]);
        ThermoPower.PowerPlants.Buses.Actuators ActuatorsBus 
                                     annotation (extent=[220,-180; 180,-140]);
      end GasTurbine;
      
      partial model GasTurbineSimplified 
        replaceable package FlueGas = ThermoPower.Media.FlueGas 
          extends Modelica.Media.Interfaces.PartialMedium;
        ThermoPower.Gas.FlangeB flueGasOut(redeclare package Medium = FlueGas) 
                                           annotation (extent=[90,70; 110,90]);
        annotation (Diagram, Icon(
                            Rectangle(extent=[-100,100; 100,-100], style(
                color=76,
                rgbcolor={170,170,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-44,8; 38,-6],    style(
                color=76,
                rgbcolor={170,170,255},
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Ellipse(extent=[-20,80; 20,40], style(
                color=9,
                rgbcolor={175,175,175},
                gradient=3,
                fillColor=1,
                rgbfillColor={255,0,0})),
            Polygon(points=[-20,18; -24,24; -24,64; -20,64; -20,18], style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[20,18; 24,24; 24,64; 20,64; 20,18], style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[80,60; 76,56; 76,82; 100,82; 100,78; 80,78; 80,60], style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[-80,70; -20,30; -20,-30; -80,-70; -80,70], style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255})),
            Polygon(points=[80,70; 20,30; 20,-30; 80,-70; 80,-70; 80,70], style(
                color=10,
                rgbcolor={135,135,135},
                gradient=3,
                fillColor=76,
                rgbfillColor={170,170,255}))));
        Modelica.Blocks.Interfaces.RealInput GTLoad "GT unit load in p.u." 
          annotation (extent=[-112,-12; -88,12],
                                               rotation=0);
      end GasTurbineSimplified;
    end Interfaces;
    
    package Components 
      
    end Components;
    
    package Examples 
      
      model GasTurbineSimplified 
        extends 
          ThermoPower.PowerPlants.GasTurbine.Interfaces.GasTurbineSimplified;
        parameter Modelica.SIunits.Power maxPower=235e6;
        parameter Modelica.SIunits.MassFlowRate flueGasNomFlowRate=614 
          "Nominal flue gas flow rate";
        parameter Modelica.SIunits.MassFlowRate flueGasMinFlowRate=454 
          "Minimum flue gas flow rate";
        parameter Modelica.SIunits.MassFlowRate flueGasOffFlowRate=
            flueGasMinFlowRate/100 "Flue gas flow rate with GT switched off";
        parameter Modelica.SIunits.MassFlowRate fuelNomFlowRate=12.1 
          "Nominal fuel flow rate";
        parameter Modelica.SIunits.MassFlowRate fuelIntFlowRate=7.08 
          "Intermediate fuel flow rate";
        parameter Modelica.SIunits.MassFlowRate fuelMinFlowRate=4.58 
          "Minimum fuel flow rate";
        parameter Modelica.SIunits.MassFlowRate fuelOffFlowRate=0.1 
          "Flue gas flow rate with GT switched off";
        parameter Real constTempLoad = 0.60 
          "Fraction of load from which the temperature is kept constant";
        parameter Real intLoad = 0.42 
          "Intermediate load for fuel consumption computations";
        parameter Modelica.SIunits.Temperature flueGasNomTemp=843 
          "Maximum flue gas temperature";
        parameter Modelica.SIunits.Temperature flueGasMinTemp=548 
          "Minimum flue gas temperature (zero electrical load)";
        parameter Modelica.SIunits.Temperature flueGasOffTemp=363.15 
          "Flue gas temperature with GT switched off";
        parameter Modelica.SIunits.SpecificEnthalpy fuel_LHV=49e6 
          "Fuel Lower Heating Value";
        parameter Modelica.SIunits.SpecificEnthalpy fuel_HHV=55e6 
          "Fuel Higher Heating Value";
        FlueGas.BaseProperties gas;
        Modelica.SIunits.MassFlowRate w;
        Modelica.SIunits.Power P_el=noEvent(if GTLoad > 0 then GTLoad*maxPower else 
                  0) "Electrical power output";
        Modelica.SIunits.MassFlowRate fuelFlowRate "Fuel flow rate";
      equation 
        gas.p = flueGasOut.p;
        gas.Xi = FlueGas.reference_X[1:FlueGas.nXi];
        gas.T = noEvent(
          if GTLoad > constTempLoad then flueGasNomTemp else 
          if GTLoad > 0 then flueGasMinTemp +
            GTLoad/constTempLoad*(flueGasNomTemp-flueGasMinTemp) else 
          flueGasMinTemp * (1+GTLoad) - flueGasOffTemp * GTLoad);
        w = noEvent(
          if GTLoad > constTempLoad then flueGasMinFlowRate + (GTLoad-constTempLoad)/
            (1-constTempLoad)*(flueGasNomFlowRate-flueGasMinFlowRate) else 
          if GTLoad > 0 then flueGasMinFlowRate else 
          flueGasMinFlowRate * (1+GTLoad) - flueGasOffFlowRate * GTLoad);
        fuelFlowRate = noEvent(
          if GTLoad > intLoad then fuelIntFlowRate + (GTLoad-intLoad)/
            (1-intLoad)*(fuelNomFlowRate-fuelIntFlowRate) else 
          if GTLoad > 0 then fuelMinFlowRate + GTLoad/intLoad *
            (fuelIntFlowRate-fuelMinFlowRate) else 
          fuelMinFlowRate * (1+GTLoad) - fuelOffFlowRate * GTLoad);
        
        flueGasOut.w = -w;
        flueGasOut.hBA = gas.h;
        flueGasOut.XBA = gas.Xi;
      end GasTurbineSimplified;
    end Examples;
    
    package Tests 
      model TestGasTurbine 
        
        Examples.GasTurbineSimplified gasTurbine 
          annotation (extent=[-40,-40; 0,0]);
        ThermoPower.Gas.SinkP sinkP(redeclare package Medium = 
              Media.FlueGasSingle) 
          annotation (extent=[62,-14; 82,6]);
        annotation (Diagram);
        Modelica.Blocks.Sources.Constant const 
          annotation (extent=[-90,-30; -70,-10]);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateReader_gas(
            redeclare package Medium = Media.FlueGasSingle) 
          annotation (extent=[20,-14; 40,6]);
      equation 
        connect(const.y, gasTurbine.GTLoad) annotation (points=[-69,-20; -40,-20],
                         style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReader_gas.inlet, gasTurbine.flueGasOut) annotation (points=
              [24,-4; 0,-4], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateReader_gas.outlet, sinkP.flange) annotation (points=[36,-4;
              62,-4], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
      end TestGasTurbine;
    end Tests;
  end GasTurbine;
  
  package HRSG 
    package Interfaces 
      partial model HeatExchanger "Base class for heat exchanger fluid - gas" 
        
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium "Flue gas model";
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance "Fluid model";
        
        parameter Integer N_G=2 "Number of node of the gas side";
        parameter Integer N_F=2 "Number of node of the fluid side";
        
        //Nominal parameter
        parameter SI.MassFlowRate gasNomFlowRate 
          "Nominal flow rate through the gas side";
        parameter SI.MassFlowRate fluidNomFlowRate 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure gasNomPressure 
          "Nominal pressure in the gas side inlet";
        parameter SI.Pressure fluidNomPressure 
          "Nominal pressure in the fluid side inlet";
        
        //Physical Parameter
        parameter SI.Area exchSurface_G 
          "Exchange surface between gas - metal tube";
        parameter SI.Area exchSurface_F 
          "Exchange surface between metal tube - fluid";
        parameter SI.Area extSurfaceTub "Total external surface of the tubes";
        parameter SI.Volume gasVol "Gas volume";
        parameter SI.Volume fluidVol "Fluid volume";
        parameter SI.Volume metalVol "Volume of the metal part in the tubes";
        parameter Real rhomcm "Metal heat capacity per unit volume [J/m^3.K]";
        parameter SI.ThermalConductivity lambda 
          "Thermal conductivity of the metal (density by specific heat capacity)";
        
        //Start value
        parameter Boolean use_T = true 
          "Select: -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        
        parameter SI.Temperature Tstart_G_In 
          "Inlet gas temperature start value"            annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_G_Out 
          "Outlet gas temperature start value"           annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_G[N_G]=linspace(Tstart_G_In,Tstart_G_Out,N_G) 
          "Start value of gas temperature vector (initialized by default)" annotation(Dialog(tab = "Initialization"));
        parameter SI.Pressure pstart_G=gasNomPressure 
          "Pressure start value, gas side" 
                                          annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M_In 
          "Inlet metal wall temperature start value"       annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M_Out 
          "Outlet metal wall temperature start value"      annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M[N_F]=linspace(Tstart_M_In,Tstart_M_Out,N_F) 
          "Start value of metal wall temperature vector (initialized by default)"
                                                                                  annotation(Dialog(tab = "Initialization"));
        
        parameter SI.Temperature Tstart_F_In=FluidMedium.temperature_ph(fluidNomPressure,hstart_F_In) 
          "Inlet fluid temperature start value"             annotation(Dialog(enable = use_T,
                                                                              tab = "Initialization"));
        parameter SI.Temperature Tstart_F_Out=FluidMedium.temperature_ph(fluidNomPressure,hstart_F_Out) 
          "Outlet fluid temperature start value"            annotation(Dialog(enable = use_T,
                                                                              tab = "Initialization"));
        parameter SI.Temperature Tstart_F[N_F]=linspace(Tstart_F_In,Tstart_F_Out,N_F) 
          "Start value of fluid temperature vector (initialized by default)" 
                                                                          annotation(Dialog(tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_In) 
          "Inlet fluid specific enthalpy start value"                   annotation(Dialog(enable = not use_T,
                                                                                          tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value"                  annotation(Dialog(enable = not use_T,
                                                                                          tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_F[N_F]=linspace(hstart_F_In,hstart_F_Out,N_F) 
          "Start value of fluid enthalpy vector (initialized by default)" annotation(Dialog(tab = "Initialization"));
        parameter SI.Pressure pstartin_F=fluidNomPressure 
          "Inlet fluid pressure start value"                annotation(Dialog(tab = "Initialization"));
        parameter SI.Pressure pstartout_F=fluidNomPressure 
          "Outlet fluid pressure start value"                annotation(Dialog(tab = "Initialization"));
        
        annotation (Diagram, Icon(Rectangle(extent=[-100,100; 100,-100],
                                                                      style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})), Line(points=[0,-80; 0,-40; 40,-20; -40,
                  20; 0,40; 0,80],           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Text(
              extent=[-100,-115; 100,-145],
              string="%name",
              style(color=71, rgbcolor={85,170,255}))));
        Gas.FlangeA gasIn(redeclare package Medium = FlueGasMedium) 
                            annotation (extent=[-120,-20; -80,20]);
        Gas.FlangeB gasOut(redeclare package Medium = FlueGasMedium) 
                            annotation (extent=[80,-20; 120,20]);
        Water.FlangeA waterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-20,80; 20,120]);
        Water.FlangeB waterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-20,-120; 20,-80]);
        
      end HeatExchanger;
      
      partial model ParallelHE 
        "Base class for Parallel Heat Exchanger (two fluid with one gas)" 
        
        annotation (Diagram, Icon(
            Rectangle(extent=[-100,100; 100,-100],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[-40,80; -40,60; -10,60; -10,42; -42,20; 20,-20; -10,
                  -40; -10,-60; -40,-60; -40,-80],  style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[40,80; 40,60; 10,60; 10,40; -20,20; 42,-20; 10,-40; 10,-60;
                  40,-60; 40,-80],          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Text(
              extent=[-100,-115; 100,-145],
              string="%name",
              style(color=71, rgbcolor={85,170,255}))));
        ThermoPower.Gas.FlangeA gasIn(redeclare package Medium = FlueGasMedium)
                            annotation (extent=[-120,-20; -80,20]);
        ThermoPower.Gas.FlangeB gasOut(redeclare package Medium = FlueGasMedium)
                            annotation (extent=[80,-20; 120,20]);
        ThermoPower.Water.FlangeA waterInA(redeclare package Medium = 
              FluidMedium) "water/steam first inlet" 
          annotation (extent=[-60,80; -20,120]);
        ThermoPower.Water.FlangeB waterOutA(redeclare package Medium = 
              FluidMedium) "water/steam first outlet" 
          annotation (extent=[-60,-120; -20,-80]);
        ThermoPower.Water.FlangeA waterInB(redeclare package Medium = 
              FluidMedium) "water/steam second inlet" 
          annotation (extent=[20,80; 60,120]);
        ThermoPower.Water.FlangeB waterOutB(redeclare package Medium = 
              FluidMedium) "water/steam second outlet" 
          annotation (extent=[20,-120; 60,-80]);
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        parameter Integer N_G=2 "Number of node of the gas side";
        parameter Integer N_F_A=2 "Number of node of the fluid side"   annotation (Dialog(group = "side A"));
        parameter Integer N_F_B=2 "Number of node of the fluid side"   annotation (Dialog(group = "side B"));
        
        //Nominal parameter
        parameter SI.MassFlowRate gasNomFlowRate 
          "Nominal flow rate through the gas side";
        parameter SI.MassFlowRate fluidNomFlowRate_A 
          "Nominal flow rate through the fluid side"     annotation (Dialog(group = "side A"));
        parameter SI.MassFlowRate fluidNomFlowRate_B 
          "Nominal flow rate through the fluid side"     annotation (Dialog(group = "side B"));
        parameter SI.Pressure gasNomPressure 
          "Nominal pressure in the gas side inlet";
        parameter SI.Pressure fluidNomPressure_A 
          "Nominal pressure in the fluid side inlet"     annotation (Dialog(group = "side A"));
        parameter SI.Pressure fluidNomPressure_B 
          "Nominal pressure in the fluid side inlet"     annotation (Dialog(group = "side B"));
        
        //Physical Parameter
        parameter SI.Area exchSurface_G_A 
          "Exchange surface between gas - metal tube,"     annotation (Dialog(group = "side A"));
        parameter SI.Area exchSurface_G_B 
          "Exchange surface between gas - metal tube,"     annotation (Dialog(group = "side B"));
        parameter SI.Area exchSurface_F_A 
          "Exchange surface between metal tube - fluid,"     annotation (Dialog(group = "side A"));
        parameter SI.Area exchSurface_F_B 
          "Exchange surface between metal tube - fluid,"     annotation (Dialog(group = "side B"));
        parameter SI.Area extSurfaceTub_A "Total external surface of the tubes"
                                                             annotation (Dialog(group = "side A"));
        parameter SI.Area extSurfaceTub_B "Total external surface of the tubes"
                                                             annotation (Dialog(group = "side B"));
        parameter SI.Volume gasVol "Gas volume";
        parameter SI.Volume fluidVol_A "Fluid volume"     annotation (Dialog(group = "side A"));
        parameter SI.Volume fluidVol_B "Fluid volume"     annotation (Dialog(group = "side B"));
        parameter SI.Volume metalVol_A "Volume of the metal part in the tube"     annotation (Dialog(group = "side A"));
        parameter SI.Volume metalVol_B "Volume of the metal part in the tube"     annotation (Dialog(group = "side B"));
        parameter Real rhomcm_A "Metal heat capacity per unit volume [J/m^3.K]"
                                                                                annotation (Dialog(group = "side A"));
        parameter Real rhomcm_B "Metal heat capacity per unit volume [J/m^3.K]"
                                                                                annotation (Dialog(group = "side B"));
        parameter SI.ThermalConductivity lambda 
          "Thermal conductivity of the metal (density by specific heat capacity)";
        
        //Initialization conditions
        parameter Boolean use_T = true 
          "Select: -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy"
             annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        //Start value
        parameter SI.Temperature Tstart_G_In 
          "Inlet gas temperature start value" 
            annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_G_Out 
          "Outlet gas temperature start value" 
            annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_G[N_G]=linspace(
                  Tstart_G_In,
                  Tstart_G_Out,
                  N_G) 
          "Start value of gas temperature vector (initialized by default)" annotation(Dialog(tab = "Initialization"));
        parameter SI.Pressure pstart_G=gasNomPressure 
          "Pressure start value, gas side" 
            annotation(Dialog(tab = "Initialization"));
        //A
        parameter SI.Temperature Tstart_M_A_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization",
                              group = "side A"));
        parameter SI.Temperature Tstart_M_A_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization",
                              group = "side A"));
        parameter SI.Temperature Tstart_M_A[N_F_A]=linspace(
                  Tstart_M_A_In,
                  Tstart_M_A_Out,
                  N_F_A) 
          "Start value of metal wall temperature vector (initialized by default)"
            annotation(Dialog(tab = "Initialization",
                              group = "side A"));
        parameter SI.Temperature Tstart_F_A_In=FluidMedium.temperature_ph(
            fluidNomPressure_A, hstart_F_A_In) 
          "Inlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization",
                                                                         group = "side A"));
        parameter SI.Temperature Tstart_F_A_Out=FluidMedium.temperature_ph(
            fluidNomPressure_A, hstart_F_A_Out) 
          "Outlet fluid temperature start value"       annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization",
                                                                         group = "side A"));
        parameter SI.Temperature Tstart_F_A[N_F_A]=linspace(
                  Tstart_F_A_In,
                  Tstart_F_A_Out,
                  N_F_A) 
          "Start value of fluid temperature vector (initialized by default)"     annotation(Dialog(tab = "Initialization",
                                                                                                   group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A_In=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_A, Tstart_F_A_In) 
          "Inlet fluid specific enthalpy start value"        annotation(Dialog(enable = not use_T,
                                                                               tab = "Initialization",
                                                                               group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A_Out=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_A, Tstart_F_A_Out) 
          "Outlet fluid specific enthalpy start value"        annotation(Dialog(enable = not use_T,
                                                                                tab = "Initialization",
                                                                                group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A[N_F_A]=linspace(
                  hstart_F_A_In,
                  hstart_F_A_Out,
                  N_F_A) 
          "Start value of fluid enthalpy vector (initialized by default)"     annotation(Dialog(tab = "Initialization",
                                                                                                group = "side A"));
        parameter SI.Pressure pstartin_F_A=fluidNomPressure_A 
          "Inlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization",
                              group = "side A"));
        parameter SI.Pressure pstartout_F_A=fluidNomPressure_A 
          "Outlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization",
                              group = "side A"));
        //B
        parameter SI.Temperature Tstart_M_B_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization",
                              group = "side B"));
        parameter SI.Temperature Tstart_M_B_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization",
                              group = "side B"));
        parameter SI.Temperature Tstart_M_B[N_F_B]=linspace(
                  Tstart_M_B_In,
                  Tstart_M_B_Out,
                  N_F_B) 
          "Start value of metal wall temperature vector (initialized by default)"
            annotation(Dialog(tab = "Initialization",
                              group = "side B"));
        parameter SI.Temperature Tstart_F_B_In=FluidMedium.temperature_ph(
            fluidNomPressure_B, hstart_F_B_In) 
          "Inlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization",
                                                                         group = "side B"));
        parameter SI.Temperature Tstart_F_B_Out=FluidMedium.temperature_ph(
            fluidNomPressure_B, hstart_F_B_Out) 
          "Outlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                          tab = "Initialization",
                                                                          group = "side B"));
        parameter SI.Temperature Tstart_F_B[N_F_B]=linspace(
                  Tstart_F_B_In,
                  Tstart_F_B_Out,
                  N_F_B) 
          "Start value of fluid temperature vector (initialized by default)"     annotation(Dialog(tab = "Initialization",
                                                                                                   group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B_In=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_B, Tstart_F_B_In) 
          "Inlet fluid specific enthalpy start value"        annotation(Dialog(enable = not use_T,
                                                                               tab = "Initialization",
                                                                               group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B_Out=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_B, Tstart_F_B_Out) 
          "Outlet fluid specific enthalpy start value"        annotation(Dialog(enable = not use_T,
                                                                                tab = "Initialization",
                                                                                group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B[N_F_B]=linspace(
                  hstart_F_B_In,
                  hstart_F_B_Out,
                  N_F_B) 
          "Start value of fluid enthalpy vector (initialized by default)"     annotation(Dialog(tab = "Initialization",
                                                                                                group = "side B"));
        parameter SI.Pressure pstartin_F_B=fluidNomPressure_B 
          "Inlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization",
                              group = "side B"));
        parameter SI.Pressure pstartout_F_B=fluidNomPressure_B 
          "Outlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization",
                              group = "side B"));
        
      end ParallelHE;
      
      partial model ParallelHE_Att 
        "Base class for parallel Heat Exchanger (two fluid with one gas) with attemperation" 
        
        annotation (Diagram, Icon(
            Rectangle(extent=[-100,100; 100,-100],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[-40,80; -40,60; -10,60; -10,42; -42,20; 20,-20; -10,-40; -10,
                  -60; -40,-60; -40,-80],           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[40,80; 40,60; 10,60; 10,40; -20,20; 42,-20; 10,-40; 10,-60;
                  40,-60; 40,-80],          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Text(
              extent=[-100,-115; 100,-145],
              string="%name",
              style(color=71, rgbcolor={85,170,255})),
            Polygon(points=[-34,-38; -44,-30; -22,-24; -32,-16; -34,-38],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[-40,-34; -48,-42; -100,-42],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                fillPattern=1)),
            Line(points=[-4,2; -26,-20],
                                       style(
                color=3,
                rgbcolor={0,0,255},
                fillPattern=1))));
        ThermoPower.Gas.FlangeA gasIn(redeclare package Medium = FlueGasMedium)
                            annotation (extent=[-120,-20; -80,20]);
        ThermoPower.Gas.FlangeB gasOut(redeclare package Medium = FlueGasMedium)
                            annotation (extent=[80,-20; 120,20]);
        ThermoPower.Water.FlangeA waterInA(redeclare package Medium = 
              FluidMedium) "water/steam first inlet" 
          annotation (extent=[-60,80; -20,120]);
        ThermoPower.Water.FlangeB waterOutA(redeclare package Medium = 
              FluidMedium) "water/steam first outlet" 
          annotation (extent=[-60,-120; -20,-80]);
        ThermoPower.Water.FlangeA waterInB(redeclare package Medium = 
              FluidMedium) "water/steam second inlet " 
          annotation (extent=[20,80; 60,120]);
        ThermoPower.Water.FlangeB waterOutB(redeclare package Medium = 
              FluidMedium) "water/steam second outlet" 
          annotation (extent=[20,-120; 60,-80]);
        ThermoPower.Water.FlangeA LiquidWaterIn(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-110,-52; -90,-32]);
        Modelica.Blocks.Interfaces.RealOutput T_intermedA 
          "Intermediate temperature of the HE_A" 
          annotation (extent=[94,52; 108,66]);
        Modelica.Blocks.Interfaces.RealOutput T_intermedB 
          "Intermediate temperature of the HE_B" 
          annotation (extent=[94,32; 108,46]);
        Modelica.Blocks.Interfaces.RealInput theta_valveA 
          annotation (extent=[108,-50; 94,-34]);
        Modelica.Blocks.Interfaces.RealInput theta_valveB 
          annotation (extent=[108,-70; 94,-56]);
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Nominal parameter
        parameter SI.MassFlowRate gasNomFlowRate 
          "Nominal flow rate through the gas side";
        parameter SI.MassFlowRate fluidNomFlowRate_A 
          "Nominal flow rate through the fluid side "    annotation (Dialog(group = "side A"));
        parameter SI.MassFlowRate fluidNomFlowRate_B 
          "Nominal flow rate through the fluid side"     annotation (Dialog(group = "side B"));
        parameter SI.Pressure gasNomPressure 
          "Nominal pressure in the gas side inlet";
        parameter SI.Pressure fluidNomPressure_A 
          "Nominal pressure in the fluid side inlet"     annotation (Dialog(group = "side A"));
        parameter SI.Pressure fluidNomPressure_B 
          "Nominal pressure in the fluid side inlet"     annotation (Dialog(group = "side B"));
        
        //Other common parameter
        parameter SI.ThermalConductivity lambda 
          "Thermal conductivity of the metal (density by specific heat capacity)";
        
        //Parameter for first parallel heat exchangers
        parameter Integer N_G_p1=2 "Number of node of the gas side" 
                                                                  annotation (Dialog(tab = "pHE-1"));
        parameter Integer N_F_A_p1=2 "Number of node of the fluid side"   annotation (Dialog(tab = "pHE-1",
                                                                                             group = "side A"));
        parameter Integer N_F_B_p1=2 "Number of node of the fluid side"   annotation (Dialog(tab = "pHE-1",
                                                                                             group = "side B"));
        //Physical Parameter
        parameter SI.Area exchSurface_G_A_p1 
          "Exchange surface between gas - metal tube,"     annotation (Dialog(tab = "pHE-1",
                                                                              group = "side A"));
        parameter SI.Area exchSurface_G_B_p1 
          "Exchange surface between gas - metal tube,"     annotation (Dialog(tab = "pHE-1",
                                                                              group = "side B"));
        parameter SI.Area exchSurface_F_A_p1 
          "Exchange surface between metal tube - fluid,"     annotation (Dialog(tab = "pHE-1",
                                                                                group = "side A"));
        parameter SI.Area exchSurface_F_B_p1 
          "Exchange surface between metal tube - fluid,"     annotation (Dialog(tab = "pHE-1",
                                                                                group = "side B"));
        parameter SI.Area extSurfaceTub_A_p1 
          "Total external surface of the tubes"                                        annotation (Dialog(tab = "pHE-1",
                                                                                                    group = "side A"));
        parameter SI.Area extSurfaceTub_B_p1 
          "Total external surface of the tubes"                                        annotation (Dialog(tab = "pHE-1",
                                                                                                    group = "side B"));
        parameter SI.Volume gasVol_p1 "Gas volume" annotation (Dialog(tab = "pHE-1"));
        parameter SI.Volume fluidVol_A_p1 "Fluid volume"     annotation (Dialog(tab = "pHE-1",
                                                                                group = "side A"));
        parameter SI.Volume fluidVol_B_p1 "Fluid volume"     annotation (Dialog(tab = "pHE-1",
                                                                                group = "side B"));
        parameter SI.Volume metalVol_A_p1 
          "Volume of the metal part in the tube"                                     annotation (Dialog(tab = "pHE-1",
                                                                                                    group = "side A"));
        parameter SI.Volume metalVol_B_p1 
          "Volume of the metal part in the tube"                                     annotation (Dialog(tab = "pHE-1",
                                                                                                    group = "side B"));
        parameter Real rhomcm_A_p1 
          "Metal heat capacity per unit volume [J/m^3.K]"                          annotation (Dialog(tab = "pHE-1",
                                                                                                    group = "side A"));
        parameter Real rhomcm_B_p1 
          "Metal heat capacity per unit volume [J/m^3.K]"                          annotation (Dialog(tab = "pHE-1",
                                                                                                    group = "side B"));
        
        //Parameter for second parallel heat exchangers
        parameter Integer N_G_p2=2 "Number of node of the gas side" 
                                                                  annotation (Dialog(tab = "pHE-2"));
        parameter Integer N_F_A_p2=2 "Number of node of the fluid side"   annotation (Dialog(tab = "pHE-2",
                                                                                             group = "side A"));
        parameter Integer N_F_B_p2=2 "Number of node of the fluid side"   annotation (Dialog(tab = "pHE-2",
                                                                                             group = "side B"));
        //Physical Parameter
        parameter SI.Area exchSurface_G_A_p2 
          "Exchange surface between gas - metal tube,"     annotation (Dialog(tab = "pHE-2",
                                                                              group = "side A"));
        parameter SI.Area exchSurface_G_B_p2 
          "Exchange surface between gas - metal tube,"     annotation (Dialog(tab = "pHE-2",
                                                                              group = "side B"));
        parameter SI.Area exchSurface_F_A_p2 
          "Exchange surface between metal tube - fluid,"     annotation (Dialog(tab = "pHE-2",
                                                                                group = "side A"));
        parameter SI.Area exchSurface_F_B_p2 
          "Exchange surface between metal tube - fluid,"     annotation (Dialog(tab = "pHE-2",
                                                                                group = "side B"));
        parameter SI.Area extSurfaceTub_A_p2 
          "Total external surface of the tubes"                                        annotation (Dialog(tab = "pHE-2",
                                                                                                    group = "side A"));
        parameter SI.Area extSurfaceTub_B_p2 
          "Total external surface of the tubes"                                        annotation (Dialog(tab = "pHE-2",
                                                                                                    group = "side B"));
        parameter SI.Volume gasVol_p2 "Gas volume" annotation (Dialog(tab = "pHE-2"));
        parameter SI.Volume fluidVol_A_p2 "Fluid volume"     annotation (Dialog(tab = "pHE-2",
                                                                                group = "side A"));
        parameter SI.Volume fluidVol_B_p2 "Fluid volume"     annotation (Dialog(tab = "pHE-2",
                                                                                group = "side B"));
        parameter SI.Volume metalVol_A_p2 
          "Volume of the metal part in the tube"                                     annotation (Dialog(tab = "pHE-2",
                                                                                                    group = "side A"));
        parameter SI.Volume metalVol_B_p2 
          "Volume of the metal part in the tube"                                     annotation (Dialog(tab = "pHE-2",
                                                                                                    group = "side B"));
        parameter Real rhomcm_A_p2 
          "Metal heat capacity per unit volume [J/m^3.K]"                          annotation (Dialog(tab = "pHE-2",
                                                                                                    group = "side A"));
        parameter Real rhomcm_B_p2 
          "Metal heat capacity per unit volume [J/m^3.K]"                          annotation (Dialog(tab = "pHE-2",
                                                                                                    group = "side B"));
        
        //Initialization conditions
        parameter Boolean use_T = true 
          "Select: -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        //Start value pHE1
        parameter SI.Temperature Tstart_G_In_p1 
          "Inlet gas temperature start value"    annotation(Dialog(tab = "Initialization (pHE-1)"));
        parameter SI.Temperature Tstart_G_Out_p1 
          "Outlet gas temperature start value"    annotation(Dialog(tab = "Initialization (pHE-1)"));
        parameter SI.Temperature Tstart_G_p1[N_G_p1]=linspace(
                  Tstart_G_In_p1,
                  Tstart_G_Out_p1,
                  N_G_p1) 
          "Start value of gas temperature vector (initialized by default)" annotation(Dialog(tab = "Initialization (pHE-1)"));
        parameter SI.Pressure pstart_G_p1=gasNomPressure 
          "Pressure start value, gas side" annotation(Dialog(tab = "Initialization (pHE-1)"));
        //A
        parameter SI.Temperature Tstart_M_A_In_p1 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side A"));
        parameter SI.Temperature Tstart_M_A_Out_p1 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side A"));
        parameter SI.Temperature Tstart_M_A_p1[N_F_A_p1]=linspace(
                  Tstart_M_A_In_p1,
                  Tstart_M_A_Out_p1,
                  N_F_A_p1) 
          "Start value of metal wall temperature vector (initialized by default)"
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side A"));
        parameter SI.Temperature Tstart_F_A_In_p1=FluidMedium.temperature_ph(fluidNomPressure_A, hstart_F_A_In_p1) 
          "Inlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization (pHE-1)",
                                                                         group = "side A"));
        parameter SI.Temperature Tstart_F_A_Out_p1=FluidMedium.temperature_ph(fluidNomPressure_A, hstart_F_A_Out_p1) 
          "Outlet fluid temperature start value"       annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization (pHE-1)",
                                                                         group = "side A"));
        parameter SI.Temperature Tstart_F_A_p1[N_F_A_p1]=linspace(
                  Tstart_F_A_In_p1,
                  Tstart_F_A_Out_p1,
                  N_F_A_p1) 
          "Start value of fluid temperature vector (initialized by default)"     annotation(Dialog(tab = "Initialization (pHE-1)",
                                                                                                   group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A_In_p1=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,Tstart_F_A_In_p1) 
          "Inlet fluid specific enthalpy start value"        annotation(Dialog(enable = not use_T,
                                                                               tab = "Initialization (pHE-1)",
                                                                               group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A_Out_p1=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,Tstart_F_A_Out_p1) 
          "Outlet fluid specific enthalpy start value"        annotation(Dialog(enable = not use_T,
                                                                                tab = "Initialization (pHE-1)",
                                                                                group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A_p1[N_F_A_p1]=linspace(
                  hstart_F_A_In_p1,
                  hstart_F_A_Out_p1,
                  N_F_A_p1) 
          "Start value of fluid enthalpy vector (initialized by default)"     annotation(Dialog(tab = "Initialization (pHE-1)",
                                                                                                group = "side A"));
        parameter SI.Pressure pstartin_F_A_p1=fluidNomPressure_A 
          "Inlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side A"));
        parameter SI.Pressure pstartout_F_A_p1=fluidNomPressure_A 
          "Outlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side A"));
        //B
        parameter SI.Temperature Tstart_M_B_In_p1 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side B"));
        parameter SI.Temperature Tstart_M_B_Out_p1 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side B"));
        parameter SI.Temperature Tstart_M_B_p1[N_F_B_p1]=linspace(
                  Tstart_M_B_In_p1,
                  Tstart_M_B_Out_p1,
                  N_F_B_p1) 
          "Start value of metal wall temperature vector (initialized by default)"
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side B"));
        parameter SI.Temperature Tstart_F_B_In_p1=FluidMedium.temperature_ph(
            fluidNomPressure_B, hstart_F_B_In_p1) 
          "Inlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization (pHE-1)",
                                                                         group = "side B"));
        parameter SI.Temperature Tstart_F_B_Out_p1=FluidMedium.temperature_ph(
            fluidNomPressure_B, hstart_F_B_Out_p1) 
          "Outlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                          tab = "Initialization (pHE-1)",
                                                                          group = "side B"));
        parameter SI.Temperature Tstart_F_B_p1[N_F_B_p1]=linspace(
                  Tstart_F_B_In_p1,
                  Tstart_F_B_Out_p1,
                  N_F_B_p1) 
          "Start value of fluid temperature vector (initialized by default)"     annotation(Dialog(tab = "Initialization (pHE-1)",
                                                                                                   group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B_In_p1=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,
            Tstart_F_B_In_p1) "Inlet fluid specific enthalpy start value" 
                                                             annotation(Dialog(enable = not use_T,
                                                                               tab = "Initialization (pHE-1)",
                                                                               group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B_Out_p1=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,
            Tstart_F_B_Out_p1) "Outlet fluid specific enthalpy start value" 
                                                              annotation(Dialog(enable = not use_T,
                                                                                tab = "Initialization (pHE-1)",
                                                                                group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B_p1[N_F_B_p1]=linspace(
                  hstart_F_B_In_p1,
                  hstart_F_B_Out_p1,
                  N_F_B_p1) 
          "Start value of fluid enthalpy vector (initialized by default)"     annotation(Dialog(tab = "Initialization (pHE-1)",
                                                                                                group = "side B"));
        parameter SI.Pressure pstartin_F_B_p1=fluidNomPressure_B 
          "Inlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side B"));
        parameter SI.Pressure pstartout_F_B_p1=fluidNomPressure_B 
          "Outlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization (pHE-1)",
                              group = "side B"));
        
        //Start value pHE2
        parameter SI.Temperature Tstart_G_In_p2 
          "Inlet gas temperature start value"    annotation(Dialog(tab = "Initialization (pHE-2)"));
        parameter SI.Temperature Tstart_G_Out_p2 
          "Outlet gas temperature start value"    annotation(Dialog(tab = "Initialization (pHE-2)"));
        parameter SI.Temperature Tstart_G_p2[N_G_p2]=linspace(
                  Tstart_G_In_p2,
                  Tstart_G_Out_p2,
                  N_G_p2) 
          "Start value of gas temperature vector (initialized by default)" annotation(Dialog(tab = "Initialization (pHE-2)"));
        parameter SI.Pressure pstart_G_p2=gasNomPressure 
          "Pressure start value, gas side" annotation(Dialog(tab = "Initialization (pHE-2)"));
        //A
        parameter SI.Temperature Tstart_M_A_In_p2 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side A"));
        parameter SI.Temperature Tstart_M_A_Out_p2 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side A"));
        parameter SI.Temperature Tstart_M_A_p2[N_F_A_p2]=linspace(
                  Tstart_M_A_In_p2,
                  Tstart_M_A_Out_p2,
                  N_F_A_p2) 
          "Start value of metal wall temperature vector (initialized by default)"
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side A"));
        parameter SI.Temperature Tstart_F_A_In_p2=FluidMedium.temperature_ph(
            fluidNomPressure_A, hstart_F_A_In_p1) 
          "Inlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization (pHE-2)",
                                                                         group = "side A"));
        parameter SI.Temperature Tstart_F_A_Out_p2=FluidMedium.temperature_ph(
            fluidNomPressure_A, hstart_F_A_Out_p2) 
          "Outlet fluid temperature start value"       annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization (pHE-2)",
                                                                         group = "side A"));
        parameter SI.Temperature Tstart_F_A_p2[N_F_A_p2]=linspace(
                  Tstart_F_A_In_p2,
                  Tstart_F_A_Out_p2,
                  N_F_A_p2) 
          "Start value of fluid temperature vector (initialized by default)"     annotation(Dialog(tab = "Initialization (pHE-2)",
                                                                                                   group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A_In_p2=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,
            Tstart_F_A_In_p2) "Inlet fluid specific enthalpy start value" 
                                                             annotation(Dialog(enable = not use_T,
                                                                               tab = "Initialization (pHE-2)",
                                                                               group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A_Out_p2=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,
            Tstart_F_A_Out_p2) "Outlet fluid specific enthalpy start value" 
                                                              annotation(Dialog(enable = not use_T,
                                                                                tab = "Initialization (pHE-2)",
                                                                                group = "side A"));
        parameter SI.SpecificEnthalpy hstart_F_A_p2[N_F_A_p2]=linspace(
                  hstart_F_A_In_p2,
                  hstart_F_A_Out_p2,
                  N_F_A_p2) 
          "Start value of fluid enthalpy vector (initialized by default)"     annotation(Dialog(tab = "Initialization (pHE-2)",
                                                                                                group = "side A"));
        parameter SI.Pressure pstartin_F_A_p2=fluidNomPressure_A 
          "Inlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side A"));
        parameter SI.Pressure pstartout_F_A_p2=fluidNomPressure_A 
          "Outlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side A"));
        //B
        parameter SI.Temperature Tstart_M_B_In_p2 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side B"));
        parameter SI.Temperature Tstart_M_B_Out_p2 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side B"));
        parameter SI.Temperature Tstart_M_B_p2[N_F_B_p2]=linspace(
                  Tstart_M_B_In_p2,
                  Tstart_M_B_Out_p2,
                  N_F_B_p2) 
          "Start value of metal wall temperature vector (initialized by default)"
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side B"));
        parameter SI.Temperature Tstart_F_B_In_p2=FluidMedium.temperature_ph(
            fluidNomPressure_B, hstart_F_B_In_p2) 
          "Inlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                         tab = "Initialization (pHE-2)",
                                                                         group = "side B"));
        parameter SI.Temperature Tstart_F_B_Out_p2=FluidMedium.temperature_ph(
            fluidNomPressure_B, hstart_F_B_Out_p2) 
          "Outlet fluid temperature start value"        annotation(Dialog(enable = use_T,
                                                                          tab = "Initialization (pHE-2)",
                                                                          group = "side B"));
        parameter SI.Temperature Tstart_F_B_p2[N_F_B_p2]=linspace(
                  Tstart_F_B_In_p2,
                  Tstart_F_B_Out_p2,
                  N_F_B_p2) 
          "Start value of fluid temperature vector (initialized by default)"     annotation(Dialog(tab = "Initialization (pHE-2)",
                                                                                                   group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B_In_p2=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,
            Tstart_F_B_In_p2) "Inlet fluid specific enthalpy start value" 
                                                             annotation(Dialog(enable = not use_T,
                                                                               tab = "Initialization (pHE-2)",
                                                                               group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B_Out_p2=
            FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,
            Tstart_F_B_Out_p2) "Outlet fluid specific enthalpy start value" 
                                                              annotation(Dialog(enable = not use_T,
                                                                                tab = "Initialization (pHE-2)",
                                                                                group = "side B"));
        parameter SI.SpecificEnthalpy hstart_F_B_p2[N_F_B_p2]=linspace(
                  hstart_F_B_In_p2,
                  hstart_F_B_Out_p2,
                  N_F_B_p2) 
          "Start value of fluid enthalpy vector (initialized by default)"     annotation(Dialog(tab = "Initialization (pHE-2)",
                                                                                                group = "side B"));
        parameter SI.Pressure pstartin_F_B_p2=fluidNomPressure_B 
          "Inlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side B"));
        parameter SI.Pressure pstartout_F_B_p2=fluidNomPressure_B 
          "Outlet fluid pressure start value" 
            annotation(Dialog(tab = "Initialization (pHE-2)",
                              group = "side B"));
        
      end ParallelHE_Att;
      
      partial model HEG_2L 
        "Base class for Heat Exchangers Group with two pressure levels" 
        
        Water.FlangeA LiquidWaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-210,50; -190,70]);
        Water.FlangeA Sh_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-170,90; -150,110]);
        Water.FlangeB Ev_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-140,90; -120,110]);
        Water.FlangeA Ev_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-110,90; -90,110]);
        Water.FlangeB Ec_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-80,90; -60,110]);
        Water.FlangeA Ec_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-50,90; -30,110]);
        Water.FlangeA Sh_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[30,90; 50,110]);
        Water.FlangeB Ev_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[58,90; 78,110]);
        Water.FlangeA Ev_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[90,90; 110,110]);
        Water.FlangeB Ec_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[120,90; 140,110]);
        Water.FlangeA Ec_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[150,90; 170,110]);
        Water.FlangeB Sh_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-110,-110; -90,-90]);
        Water.FlangeB Sh_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[90,-110; 110,-90]);
        Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium) 
                          annotation (extent=[-214,-14; -186,14]);
        Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium) 
                           annotation (extent=[186,-14; 214,14]);
        Buses.Sensors SensorsBus annotation (extent=[190,-50; 210,-30]);
        Buses.Actuators ActuatorsBus annotation (extent=[210,-80; 190,-60]);
        annotation (Icon(
            Rectangle(extent=[-200,100; 200,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[-100,60; -100,40; -60,30; -140,0; -60,-30; -100,-40;
                  -100,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[100,60; 100,40; 140,30; 60,0; 140,-30; 100,-40; 100,
                  -60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2))),
                             Diagram,
          Coordsys(extent=[-200,-100; 200,100], scale=0.1));
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Common Parameter
        parameter SI.MassFlowRate gasNomFlowRate 
          "Nominal flow rate through the gas side";
        parameter SI.Pressure gasNomPressure 
          "Nominal pressure in the gas side inlet";
        
        //Nominal parameter
        parameter SI.MassFlowRate fluidHPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Pressure fluidHPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab = "HP", group= "Sh"));
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Pressure fluidHPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Pressure fluidHPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab = "HP", group= "Ec"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab = "LP", group= "Sh"));
        parameter SI.Pressure fluidLPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab = "LP", group= "Sh"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab = "LP", group= "Ev"));
        parameter SI.Pressure fluidLPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Pressure fluidLPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab = "LP", group = "Ec"));
        
        //Physical Parameter
        //Sh2_HP
        parameter Integer Sh2_HP_N_G=2 "Number of node of the gas side, Sh2" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter Integer Sh2_HP_N_F=2 "Number of node of the fluid side, Sh2" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_extSurfaceTub 
          "Total external surface of the tubes, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_gasVol "Gas volume, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_fluidVol "Fluid volume, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_metalVol 
          "Volume of the metal part in the tube, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        //Sh1_HP
        parameter Integer Sh1_HP_N_G=2 "Number of node of the gas side, Sh1" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter Integer Sh1_HP_N_F=2 "Number of node of the fluid side, Sh1" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_extSurfaceTub 
          "Total external surface of the tubes, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_gasVol "Gas volume, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_fluidVol "Fluid volume, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_metalVol 
          "Volume of the metal part in the tube, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        //Ev_HP
        parameter Integer Ev_HP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "HP",group = "Ev"));
        parameter Integer Ev_HP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_gasVol "Gas volume" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_fluidVol "Fluid volume" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab= "HP", group= "Ev"));
        //Ec_HP
        parameter Integer Ec_HP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab= "HP", group= "Ec"));
        parameter Integer Ec_HP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Area Ec_HP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Area Ec_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Area Ec_HP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Volume Ec_HP_gasVol "Gas volume" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Volume Ec_HP_fluidVol "Fluid volume" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Volume Ec_HP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab= "HP", group= "Ec"));
        //Sh_LP
        parameter Integer Sh_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Sh"));
        parameter Integer Sh_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Sh"));
        //Ev_LP
        parameter Integer Ev_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Ev"));
        parameter Integer Ev_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Ev"));
        //Ec_LP
        parameter Integer Ec_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Ec"));
        parameter Integer Ec_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Ec"));
        
        //Initialization conditions
        parameter Boolean use_T_Sh = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Superheaters (Reheater)"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean use_T_Ev = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Evaporators"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean use_T_Ec = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Economizers"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        
        //Start values
        //Sh2_HP
        parameter SI.Temperature Sh2_HP_Tstart_G_In 
          "Intlet gas temperature start value of Sh2" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Sh2" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Sh2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Sh2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh2_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Sh2" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh2_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Sh2" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh2_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh2_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Sh2" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh2_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh2_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Sh2" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (HP)", group = "Sh"));
        //Sh1_HP
        parameter SI.Temperature Sh1_HP_Tstart_G_In 
          "Intlet gas temperature start value of Sh1" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Sh1" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Sh1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Sh1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh1_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Sh1" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh1_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Sh1" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh1_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Sh1" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh1_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Sh1" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (HP)", group = "Sh"));
        //Ev_HP
        parameter SI.Temperature Ev_HP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,Ev_HP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                           tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,Ev_HP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                            tab = "Initialization (HP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ev,Ev_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (HP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ev,Ev_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (HP)", group = "Ev"));
        
        //Ec_HP
        parameter SI.Temperature Ec_HP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec_HP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                           tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec_HP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                            tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                 tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                  tab = "Initialization (HP)", group = "Ec"));
        
        //Sh_LP
        parameter SI.Temperature Sh_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Sh,Sh_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                           tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Sh,Sh_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                            tab = "Initialization (LP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Sh,Sh_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                 tab = "Initialization (LP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Sh,Sh_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                  tab = "Initialization (LP)", group = "Sh"));
        //Ev_LP
        parameter SI.Temperature Ev_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,Ev_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                                 tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,Ev_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                            tab = "Initialization (LP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ev,Ev_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (LP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ev,Ev_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (LP)", group = "Ev"));
        //Ec_LP
        parameter SI.Temperature Ec_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ec,Ec_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                           tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ec,Ec_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                            tab = "Initialization (LP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ec,Ec_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                 tab = "Initialization (LP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ec,Ec_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                  tab = "Initialization (LP)", group = "Ec"));
        
      end HEG_2L;
      
      partial model HEG_2LRh 
        "Base class for Heat Exchangers Group with two pressure levels and reheat" 
        
        annotation (Icon(
            Rectangle(extent=[-200,100; 200,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[-100,60; -100,40; -60,30; -140,0; -60,-30; -100,-40;
                  -100,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[100,60; 100,40; 140,30; 60,0; 140,-30; 100,-40; 100,
                  -60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2))),
                             Diagram,
          Coordsys(extent=[-200,-100; 200,100], scale=0.1));
        Water.FlangeA Rh_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-60,-110; -40,-90]);
        Water.FlangeB Rh_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-10,-110; 10,-90]);
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Common Parameter
        parameter SI.MassFlowRate gasNomFlowRate 
          "Nominal flow rate through the gas side";
        parameter SI.Pressure gasNomPressure 
          "Nominal pressure in the gas side inlet";
        
        //Nominal parameter
        parameter SI.MassFlowRate fluidHPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Sh"));
        parameter SI.Pressure fluidHPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab= "HP", group = "Sh"));
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Ev"));
        parameter SI.Pressure fluidHPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab= "HP", group = "Ev"));
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Ec"));
        parameter SI.Pressure fluidHPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab= "HP", group = "Ec"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Rh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Rh"));
        parameter SI.Pressure fluidIPNomPressure_Rh "Nominal pressure" annotation (Dialog(tab= "IP", group = "Rh"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Sh"));
        parameter SI.Pressure fluidLPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab= "LP", group = "Sh"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Ev"));
        parameter SI.Pressure fluidLPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab= "LP", group = "Ev"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Ec"));
        parameter SI.Pressure fluidLPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab= "LP", group = "Ec"));
        
        //Physical Parameter
        //Sh2_HP
        parameter Integer Sh2_HP_N_G=2 "Number of node of the gas side, Sh2" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter Integer Sh2_HP_N_F=2 "Number of node of the fluid side, Sh2" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_extSurfaceTub 
          "Total external surface of the tubes, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_gasVol "Gas volume, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_fluidVol "Fluid volume, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_metalVol 
          "Volume of the metal part in the tube, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        //Sh1_HP
        parameter Integer Sh1_HP_N_G=2 "Number of node of the gas side, Sh1" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter Integer Sh1_HP_N_F=2 "Number of node of the fluid side, Sh1" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_extSurfaceTub 
          "Total external surface of the tubes, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_gasVol "Gas volume, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_fluidVol "Fluid volume, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_metalVol 
          "Volume of the metal part in the tube, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        //Ev_HP
        parameter Integer Ev_HP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "HP",group = "Ev"));
        parameter Integer Ev_HP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_gasVol "Gas volume" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_fluidVol "Fluid volume" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab= "HP", group= "Ev"));
        //Ec_HP
        parameter Integer Ec_HP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab= "HP", group= "Ec"));
        parameter Integer Ec_HP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Area Ec_HP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Area Ec_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Area Ec_HP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Volume Ec_HP_gasVol "Gas volume" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Volume Ec_HP_fluidVol "Fluid volume" annotation (Dialog(tab= "HP", group= "Ec"));
        parameter SI.Volume Ec_HP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab= "HP", group= "Ec"));
        //Rh2_IP
        parameter Integer Rh2_IP_N_G=2 "Number of node of the gas side, Rh2" 
            annotation (Dialog(tab = "IP", group = "Rh"));
        parameter Integer Rh2_IP_N_F=2 "Number of node of the fluid side, Rh2" 
            annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_exchSurface_G 
          "Exchange surface between gas - metal tube, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_extSurfaceTub 
          "Total external surface of the tubes, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_gasVol "Gas volume, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_fluidVol "Fluid volume, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_metalVol 
          "Volume of the metal part in the tube, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        //Rh1_IP
        parameter Integer Rh1_IP_N_G=2 "Number of node of the gas side, Rh1"  annotation (Dialog(tab = "IP", group = "Rh"));
        parameter Integer Rh1_IP_N_F=2 "Number of node of the fluid side, Rh1"  annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_exchSurface_G 
          "Exchange surface between gas - metal tube, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_extSurfaceTub 
          "Total external surface of the tubes, Rh1"                                      annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_gasVol "Gas volume, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_fluidVol "Fluid volume, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_metalVol 
          "Volume of the metal part in the tube, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        //Sh_LP
        parameter Integer Sh_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Sh"));
        parameter Integer Sh_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Sh"));
        //Ev_LP
        parameter Integer Ev_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Ev"));
        parameter Integer Ev_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Ev"));
        //Ec_LP
        parameter Integer Ec_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Ec"));
        parameter Integer Ec_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Ec"));
        
        //Initialization conditions
        parameter Boolean use_T_Sh = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Superheaters (Reheater)"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean use_T_Ev = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Evaporators"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean use_T_Ec = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Economizers"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        
        //Start values
        //Sh2_HP
        parameter SI.Temperature Sh2_HP_Tstart_G_In 
          "Intlet gas temperature start value of Sh2" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Sh2" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Sh2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Sh2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh2_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Sh2" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh2_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Sh2" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh2_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh2_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Sh2" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh2_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh2_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Sh2" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (HP)", group = "Sh"));
        //Sh1_HP
        parameter SI.Temperature Sh1_HP_Tstart_G_In 
          "Intlet gas temperature start value of Sh1" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Sh1" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Sh1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Sh1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh1_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Sh1" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh1_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Sh1" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh1_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Sh1" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh1_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Sh1" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (HP)", group = "Sh"));
        //Ev_HP
        parameter SI.Temperature Ev_HP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,Ev_HP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                           tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,Ev_HP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                            tab = "Initialization (HP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ev,Ev_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (HP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ev,Ev_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (HP)", group = "Ev"));
        
        //Ec_HP
        parameter SI.Temperature Ec_HP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec_HP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                           tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec_HP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                            tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                 tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                  tab = "Initialization (HP)", group = "Ec"));
        //Rh2_IP
        parameter SI.Temperature Rh2_IP_Tstart_G_In 
          "Intlet gas temperature start value of Rh2" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_G_Out 
          "Outlet gas temperature start value of Rh2" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_M_In 
          "Inlet metal wall temperature start value of Rh2" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Rh2" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh2_IP_hstart_F_In) 
          "Inlet fluid temperature start value of Rh2" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh2_IP_hstart_F_Out) 
          "Outlet fluid temperature start value of Rh2" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh2_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh2_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Rh2" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh2_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh2_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Rh2" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (IP)", group = "Rh"));
        //Rh1_HP
        parameter SI.Temperature Rh1_IP_Tstart_G_In 
          "Intlet gas temperature start value of Rh1" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_G_Out 
          "Outlet gas temperature start value of Rh1" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_M_In 
          "Inlet metal wall temperature start value of Rh1" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Rh1" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh1_IP_hstart_F_In) 
          "Inlet fluid temperature start value of Rh1" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh1_IP_hstart_F_Out) 
          "Outlet fluid temperature start value of Rh1" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh1_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh1_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Rh1" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh1_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh1_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Rh1" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (IP)", group = "Rh"));
        
        //Sh_LP
        parameter SI.Temperature Sh_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Sh,Sh_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                           tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Sh,Sh_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                            tab = "Initialization (LP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Sh,Sh_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                 tab = "Initialization (LP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Sh,Sh_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                  tab = "Initialization (LP)", group = "Sh"));
        //Ev_LP
        parameter SI.Temperature Ev_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,Ev_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                                 tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,Ev_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                            tab = "Initialization (LP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ev,Ev_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (LP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ev,Ev_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (LP)", group = "Ev"));
        //Ec_LP
        parameter SI.Temperature Ec_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ec,Ec_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                           tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ec,Ec_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                            tab = "Initialization (LP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ec,Ec_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                 tab = "Initialization (LP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ec,Ec_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                  tab = "Initialization (LP)", group = "Ec"));
        Water.FlangeA LiquidWaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-210,50; -190,70]);
        Water.FlangeA Sh_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-170,90; -150,110]);
        Water.FlangeB Ev_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-140,90; -120,110]);
        Water.FlangeA Ev_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-110,90; -90,110]);
        Water.FlangeB Ec_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-80,90; -60,110]);
        Water.FlangeA Ec_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-50,90; -30,110]);
        Water.FlangeA Sh_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[30,90; 50,110]);
        Water.FlangeB Ev_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[58,90; 78,110]);
        Water.FlangeA Ev_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[90,90; 110,110]);
        Water.FlangeB Ec_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[120,90; 140,110]);
        Water.FlangeA Ec_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[150,90; 170,110]);
        Water.FlangeB Sh_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-110,-110; -90,-90]);
        Water.FlangeB Sh_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[90,-110; 110,-90]);
        Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium) 
                          annotation (extent=[-214,-14; -186,14]);
        Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium) 
                           annotation (extent=[186,-14; 214,14]);
        Buses.Sensors SensorsBus annotation (extent=[190,-50; 210,-30]);
        Buses.Actuators ActuatorsBus annotation (extent=[210,-80; 190,-60]);
      end HEG_2LRh;
      
      partial model HEG_3LRh 
        "Base class for Heat Exchangers Group with three pressure levels and reheat" 
        
        Water.FlangeA LiquidWaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-310,80; -290,100]);
        Water.FlangeA Sh_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-270,140; -250,160]);
        Water.FlangeB Ev_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-240,140; -220,160]);
        Water.FlangeA Ev_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-150,140; -130,160]);
        Water.FlangeB Ec_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-180,140; -160,160]);
        Water.FlangeA Ec_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-210,140; -190,160]);
        Water.FlangeA Sh_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-70,140; -50,160]);
        Water.FlangeB Ev_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-40,140; -20,160]);
        Water.FlangeA Ev_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-10,140; 10,160]);
        Water.FlangeB Ec_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[20,140; 40,160]);
        Water.FlangeA Ec_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[50,140; 70,160]);
        Water.FlangeB Sh_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-210,-160; -190,-140]);
        Water.FlangeB Sh_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-10,-160; 10,-140]);
        Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium) 
                          annotation (extent=[-314,-14; -286,14]);
        Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium) 
                           annotation (extent=[286,-14; 314,14]);
        annotation (Icon(
            Rectangle(extent=[-300,150; 300,-150], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[0,100; 0,60; 40,40; -40,0; 40,-40; 0,-60; 0,-100],
                              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[-200,100; -200,60; -160,40; -240,0; -160,-40; -200,-60;
                  -200,-100], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[200,100; 200,60; 240,40; 160,0; 240,-40; 200,-60; 200,
                  -100],      style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Text(
              extent=[-250,130; -150,110],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="HP"),
            Text(
              extent=[-50,130; 50,110],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="IP"),
            Text(
              extent=[150,130; 250,110],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="LP"),
            Text(
              extent=[-150,-110; -50,-130],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="Rh")),
            Diagram,
          Coordsys(extent=[-300,-150; 300,150], scale=0.1));
        Water.FlangeA Sh_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[130,140; 150,160]);
        Water.FlangeB Ev_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[160,140; 180,160]);
        Water.FlangeA Ev_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[190,140; 210,160]);
        Water.FlangeB Ec_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[220,140; 240,160]);
        Water.FlangeA Ec_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[250,140; 270,160]);
        Water.FlangeA Rh_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-140,-160; -120,-140]);
        Water.FlangeB Rh_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-80,-160; -60,-140]);
        Water.FlangeB Sh_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[190,-160; 210,-140]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[286,-76; 318,-44]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[318,-116; 286,-84]);
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Common Parameter
        parameter SI.MassFlowRate gasNomFlowRate 
          "Nominal flow rate through the gas side";
        parameter SI.Pressure gasNomPressure 
          "Nominal pressure in the gas side inlet";
        
        //Nominal parameter
        parameter SI.MassFlowRate fluidHPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Sh"));
        parameter SI.Pressure fluidHPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab= "HP", group = "Sh"));
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Ev"));
        parameter SI.Pressure fluidHPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab= "HP", group = "Ev"));
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Ec"));
        parameter SI.Pressure fluidHPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab= "HP", group = "Ec"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Rh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Rh"));
        parameter SI.Pressure fluidIPNomPressure_Rh "Nominal pressure" annotation (Dialog(tab= "IP", group = "Rh"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Sh"));
        parameter SI.Pressure fluidIPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab= "IP", group = "Sh"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Ev"));
        parameter SI.Pressure fluidIPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab= "IP", group = "Ev"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Ec"));
        parameter SI.Pressure fluidIPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab= "IP", group = "Ec"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Sh"));
        parameter SI.Pressure fluidLPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab= "LP", group = "Sh"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Ev"));
        parameter SI.Pressure fluidLPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab= "LP", group = "Ev"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Ec"));
        parameter SI.Pressure fluidLPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab= "LP", group = "Ec"));
        
        //Physical Parameter
        //Sh2_HP
        parameter Integer Sh2_HP_N_G=2 "Number of node of the gas side, Sh2" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter Integer Sh2_HP_N_F=2 "Number of node of the fluid side, Sh2" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_extSurfaceTub 
          "Total external surface of the tubes, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_gasVol "Gas volume, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_fluidVol "Fluid volume, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_metalVol 
          "Volume of the metal part in the tube, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        //Sh1_HP
        parameter Integer Sh1_HP_N_G=2 "Number of node of the gas side, Sh1" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter Integer Sh1_HP_N_F=2 "Number of node of the fluid side, Sh1" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_extSurfaceTub 
          "Total external surface of the tubes, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_gasVol "Gas volume, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_fluidVol "Fluid volume, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_metalVol 
          "Volume of the metal part in the tube, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        //Ev_HP
        parameter Integer Ev_HP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "HP",group = "Ev"));
        parameter Integer Ev_HP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_gasVol "Gas volume" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_fluidVol "Fluid volume" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab= "HP", group= "Ev"));
        //Ec2_HP
        parameter Integer Ec2_HP_N_G=2 "Number of node of the gas side, Ec2" 
            annotation (Dialog(tab = "HP", group = "Ec"));
        parameter Integer Ec2_HP_N_F=2 "Number of node of the fluid side, Ec2" 
            annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec2_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Ec2" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec2_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Ec2" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec2_HP_extSurfaceTub 
          "Total external surface of the tubes, Ec2" 
                                                annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec2_HP_gasVol "Gas volume, Ec2" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec2_HP_fluidVol "Fluid volume, Ec2" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec2_HP_metalVol 
          "Volume of the metal part in the tube, Ec2" 
                                                 annotation (Dialog(tab = "HP", group = "Ec"));
        //Ec1_HP
        parameter Integer Ec1_HP_N_G=2 "Number of node of the gas side, Ec1" 
            annotation (Dialog(tab = "HP", group = "Ec"));
        parameter Integer Ec1_HP_N_F=2 "Number of node of the fluid side, Ec1" 
            annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec1_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Ec1" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec1_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Ec1" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec1_HP_extSurfaceTub 
          "Total external surface of the tubes, Ec1" 
                                                annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec1_HP_gasVol "Gas volume, Ec1" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec1_HP_fluidVol "Fluid volume, Ec1" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec1_HP_metalVol 
          "Volume of the metal part in the tube, Ec1" 
                                                 annotation (Dialog(tab = "HP", group = "Ec"));
        //Rh2_IP
        parameter Integer Rh2_IP_N_G=2 "Number of node of the gas side, Rh2" 
            annotation (Dialog(tab = "IP", group = "Rh"));
        parameter Integer Rh2_IP_N_F=2 "Number of node of the fluid side, Rh2" 
            annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_exchSurface_G 
          "Exchange surface between gas - metal tube, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_extSurfaceTub 
          "Total external surface of the tubes, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_gasVol "Gas volume, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_fluidVol "Fluid volume, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_metalVol 
          "Volume of the metal part in the tube, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        //Rh1_IP
        parameter Integer Rh1_IP_N_G=2 "Number of node of the gas side, Rh1"  annotation (Dialog(tab = "IP", group = "Rh"));
        parameter Integer Rh1_IP_N_F=2 "Number of node of the fluid side, Rh1"  annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_exchSurface_G 
          "Exchange surface between gas - metal tube, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_extSurfaceTub 
          "Total external surface of the tubes, Rh1"                                      annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_gasVol "Gas volume, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_fluidVol "Fluid volume, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_metalVol 
          "Volume of the metal part in the tube, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        //Sh_IP
        parameter Integer Sh_IP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "IP", group = "Sh"));
        parameter Integer Sh_IP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Area Sh_IP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Area Sh_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Area Sh_IP_extSurfaceTub 
          "Total external surface of the tube" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Volume Sh_IP_gasVol "Gas volume" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Volume Sh_IP_fluidVol "Fluid volume" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Volume Sh_IP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "IP", group = "Sh"));
        //Ev_IP
        parameter Integer Ev_IP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "IP", group = "Ev"));
        parameter Integer Ev_IP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Area Ev_IP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Area Ev_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Area Ev_IP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Volume Ev_IP_gasVol "Gas volume" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Volume Ev_IP_fluidVol "Fluid volume" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Volume Ev_IP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "IP", group = "Ev"));
        //Ec_IP
        parameter Integer Ec_IP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "IP", group = "Ec"));
        parameter Integer Ec_IP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Area Ec_IP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Area Ec_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Area Ec_IP_extSurfaceTub 
          "Total external surface of the tube" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Volume Ec_IP_gasVol "Gas volume" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Volume Ec_IP_fluidVol "Fluid volume" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Volume Ec_IP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "IP", group = "Ec"));
        //Sh_LP
        parameter Integer Sh_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Sh"));
        parameter Integer Sh_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Sh"));
        //Ev_LP
        parameter Integer Ev_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Ev"));
        parameter Integer Ev_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Ev"));
        //Ec_LP
        parameter Integer Ec_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Ec"));
        parameter Integer Ec_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Ec"));
        
        //Initialization conditions
        parameter Boolean use_T_Sh = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Superheaters (Reheater)"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean use_T_Ev = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Evaporators"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean use_T_Ec = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Economizers"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        
        //Start values
        //Sh2_HP
        parameter SI.Temperature Sh2_HP_Tstart_G_In 
          "Intlet gas temperature start value of Sh2" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Sh2" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Sh2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Sh2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh2_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Sh2" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh2_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Sh2" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh2_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh2_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Sh2" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh2_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh2_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Sh2" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (HP)", group = "Sh"));
        //Sh1_HP
        parameter SI.Temperature Sh1_HP_Tstart_G_In 
          "Intlet gas temperature start value of Sh1" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Sh1" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Sh1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Sh1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh1_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Sh1" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh1_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Sh1" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh1_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Sh1" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh1_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Sh1" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (HP)", group = "Sh"));
        //Ev_HP
        parameter SI.Temperature Ev_HP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,Ev_HP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                           tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,Ev_HP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                            tab = "Initialization (HP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ev,Ev_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (HP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ev,Ev_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (HP)", group = "Ev"));
        //Ec2_HP
        parameter SI.Temperature Ec2_HP_Tstart_G_In 
          "Intlet gas temperature start value of Ec2" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Ec2" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Ec2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Ec2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec2_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Ec2" annotation(Dialog(enable = use_T_Ec,
                                                                  tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec2_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Ec2" annotation(Dialog(enable = use_T_Ec,
                                                                   tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec2_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec2_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Ec2" annotation(Dialog(enable = not use_T_Ec,
                                                                        tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec2_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec2_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Ec2" annotation(Dialog(enable = not use_T_Ec,
                                                                         tab = "Initialization (HP)", group = "Ec"));
        //Ec1_HP
        parameter SI.Temperature Ec1_HP_Tstart_G_In 
          "Intlet gas temperature start value of Ec1" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Ec1" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Ec1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Ec1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec1_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Ec1" annotation(Dialog(enable = use_T_Ec,
                                                                  tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec1_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Ec1" annotation(Dialog(enable = use_T_Ec,
                                                                   tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec1_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec1_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Ec1" annotation(Dialog(enable = not use_T_Ec,
                                                                        tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec1_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec1_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Ec1" annotation(Dialog(enable = not use_T_Ec,
                                                                         tab = "Initialization (HP)", group = "Ec"));
        //Rh2_IP
        parameter SI.Temperature Rh2_IP_Tstart_G_In 
          "Intlet gas temperature start value of Rh2" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_G_Out 
          "Outlet gas temperature start value of Rh2" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_M_In 
          "Inlet metal wall temperature start value of Rh2" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Rh2" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh2_IP_hstart_F_In) 
          "Inlet fluid temperature start value of Rh2" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh2_IP_hstart_F_Out) 
          "Outlet fluid temperature start value of Rh2" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh2_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh2_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Rh2" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh2_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh2_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Rh2" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (IP)", group = "Rh"));
        //Rh1_HP
        parameter SI.Temperature Rh1_IP_Tstart_G_In 
          "Intlet gas temperature start value of Rh1" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_G_Out 
          "Outlet gas temperature start value of Rh1" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_M_In 
          "Inlet metal wall temperature start value of Rh1" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Rh1" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh1_IP_hstart_F_In) 
          "Inlet fluid temperature start value of Rh1" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh1_IP_hstart_F_Out) 
          "Outlet fluid temperature start value of Rh1" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh1_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh1_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Rh1" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh1_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh1_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Rh1" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (IP)", group = "Rh"));
        //Sh_IP
        parameter SI.Temperature Sh_IP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Sh,Sh_IP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                           tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Sh,Sh_IP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                            tab = "Initialization (IP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Sh,Sh_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                 tab = "Initialization (IP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Sh,Sh_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                  tab = "Initialization (IP)", group = "Sh"));
        //Ev_IP
        parameter SI.Temperature Ev_IP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Ev,Ev_IP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                                 tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Ev,Ev_IP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                                  tab = "Initialization (IP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Ev,Ev_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (IP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Ev,Ev_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (IP)", group = "Ev"));
        //Ec_IP
        parameter SI.Temperature Ec_IP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Ec,Ec_IP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                           tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Ec,Ec_IP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                            tab = "Initialization (IP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Ec,Ec_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                 tab = "Initialization (IP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Ec,Ec_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                  tab = "Initialization (IP)", group = "Ec"));
        
        //Sh_LP
        parameter SI.Temperature Sh_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Sh,Sh_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                           tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Sh,Sh_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                            tab = "Initialization (LP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Sh,Sh_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                 tab = "Initialization (LP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Sh,Sh_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                  tab = "Initialization (LP)", group = "Sh"));
        //Ev_LP
        parameter SI.Temperature Ev_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,Ev_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                                 tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,Ev_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                            tab = "Initialization (LP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ev,Ev_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (LP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ev,Ev_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (LP)", group = "Ev"));
        //Ec_LP
        parameter SI.Temperature Ec_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ec,Ec_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                           tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ec,Ec_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                            tab = "Initialization (LP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ec,Ec_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                 tab = "Initialization (LP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ec,Ec_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                  tab = "Initialization (LP)", group = "Ec"));
        
      end HEG_3LRh;
      
      partial model HEG_3LRh_wa 
        "Base class for Heat Exchangers Group with three pressure levels and reheat, without attemperation" 
        
        annotation (Icon(
            Rectangle(extent=[-300,150; 300,-150], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[0,100; 0,60; 40,40; -40,0; 40,-40; 0,-60; 0,-100],
                              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[-200,100; -200,60; -160,40; -240,0; -160,-40; -200,-60;
                  -200,-100], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[200,100; 200,60; 240,40; 160,0; 240,-40; 200,-60; 200,
                  -100],      style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Text(
              extent=[-250,130; -150,110],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="HP"),
            Text(
              extent=[-50,130; 50,110],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="IP"),
            Text(
              extent=[150,130; 250,110],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="LP"),
            Text(
              extent=[-150,-110; -50,-130],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="Rh")),
            Diagram,
          Coordsys(extent=[-300,-150; 300,150], scale=0.1));
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Common Parameter
        parameter SI.MassFlowRate gasNomFlowRate 
          "Nominal flow rate through the gas side";
        parameter SI.Pressure gasNomPressure 
          "Nominal pressure in the gas side inlet";
        
        //Nominal parameter
        parameter SI.MassFlowRate fluidHPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Sh"));
        parameter SI.Pressure fluidHPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab= "HP", group = "Sh"));
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Ev"));
        parameter SI.Pressure fluidHPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab= "HP", group = "Ev"));
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "HP", group = "Ec"));
        parameter SI.Pressure fluidHPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab= "HP", group = "Ec"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Rh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Rh"));
        parameter SI.Pressure fluidIPNomPressure_Rh "Nominal pressure" annotation (Dialog(tab= "IP", group = "Rh"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Sh"));
        parameter SI.Pressure fluidIPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab= "IP", group = "Sh"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Ev"));
        parameter SI.Pressure fluidIPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab= "IP", group = "Ev"));
        parameter SI.MassFlowRate fluidIPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "IP", group = "Ec"));
        parameter SI.Pressure fluidIPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab= "IP", group = "Ec"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Sh "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Sh"));
        parameter SI.Pressure fluidLPNomPressure_Sh "Nominal pressure" annotation (Dialog(tab= "LP", group = "Sh"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ev "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Ev"));
        parameter SI.Pressure fluidLPNomPressure_Ev "Nominal pressure" annotation (Dialog(tab= "LP", group = "Ev"));
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ec "Nominal mass flowrate"
                                                                                annotation (Dialog(tab= "LP", group = "Ec"));
        parameter SI.Pressure fluidLPNomPressure_Ec "Nominal pressure" annotation (Dialog(tab= "LP", group = "Ec"));
        
        //Physical Parameter
        //Sh2_HP
        parameter Integer Sh2_HP_N_G=2 "Number of node of the gas side, Sh2" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter Integer Sh2_HP_N_F=2 "Number of node of the fluid side, Sh2" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh2_HP_extSurfaceTub 
          "Total external surface of the tubes, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_gasVol "Gas volume, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_fluidVol "Fluid volume, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh2_HP_metalVol 
          "Volume of the metal part in the tube, Sh2" annotation (Dialog(tab= "HP", group= "Sh"));
        //Sh1_HP
        parameter Integer Sh1_HP_N_G=2 "Number of node of the gas side, Sh1" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter Integer Sh1_HP_N_F=2 "Number of node of the fluid side, Sh1" 
            annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Area Sh1_HP_extSurfaceTub 
          "Total external surface of the tubes, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_gasVol "Gas volume, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_fluidVol "Fluid volume, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        parameter SI.Volume Sh1_HP_metalVol 
          "Volume of the metal part in the tube, Sh1" annotation (Dialog(tab= "HP", group= "Sh"));
        //Ev_HP
        parameter Integer Ev_HP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "HP",group = "Ev"));
        parameter Integer Ev_HP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Area Ev_HP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab= "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_gasVol "Gas volume" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_fluidVol "Fluid volume" annotation (Dialog(tab = "HP", group= "Ev"));
        parameter SI.Volume Ev_HP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab= "HP", group= "Ev"));
        //Ec2_HP
        parameter Integer Ec2_HP_N_G=2 "Number of node of the gas side, Ec2" 
            annotation (Dialog(tab = "HP", group = "Ec"));
        parameter Integer Ec2_HP_N_F=2 "Number of node of the fluid side, Ec2" 
            annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec2_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Ec2" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec2_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Ec2" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec2_HP_extSurfaceTub 
          "Total external surface of the tubes, Ec2" 
                                                annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec2_HP_gasVol "Gas volume, Ec2" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec2_HP_fluidVol "Fluid volume, Ec2" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec2_HP_metalVol 
          "Volume of the metal part in the tube, Ec2" 
                                                 annotation (Dialog(tab = "HP", group = "Ec"));
        //Ec1_HP
        parameter Integer Ec1_HP_N_G=2 "Number of node of the gas side, Ec1" 
            annotation (Dialog(tab = "HP", group = "Ec"));
        parameter Integer Ec1_HP_N_F=2 "Number of node of the fluid side, Ec1" 
            annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec1_HP_exchSurface_G 
          "Exchange surface between gas - metal tube, Ec1" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec1_HP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Ec1" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Area Ec1_HP_extSurfaceTub 
          "Total external surface of the tubes, Ec1" 
                                                annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec1_HP_gasVol "Gas volume, Ec1" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec1_HP_fluidVol "Fluid volume, Ec1" annotation (Dialog(tab = "HP", group = "Ec"));
        parameter SI.Volume Ec1_HP_metalVol 
          "Volume of the metal part in the tube, Ec1" 
                                                 annotation (Dialog(tab = "HP", group = "Ec"));
        //Rh2_IP
        parameter Integer Rh2_IP_N_G=2 "Number of node of the gas side, Rh2" 
            annotation (Dialog(tab = "IP", group = "Rh"));
        parameter Integer Rh2_IP_N_F=2 "Number of node of the fluid side, Rh2" 
            annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_exchSurface_G 
          "Exchange surface between gas - metal tube, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh2_IP_extSurfaceTub 
          "Total external surface of the tubes, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_gasVol "Gas volume, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_fluidVol "Fluid volume, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh2_IP_metalVol 
          "Volume of the metal part in the tube, Rh2" annotation (Dialog(tab = "IP", group = "Rh"));
        //Rh1_IP
        parameter Integer Rh1_IP_N_G=2 "Number of node of the gas side, Rh1"  annotation (Dialog(tab = "IP", group = "Rh"));
        parameter Integer Rh1_IP_N_F=2 "Number of node of the fluid side, Rh1"  annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_exchSurface_G 
          "Exchange surface between gas - metal tube, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Area Rh1_IP_extSurfaceTub 
          "Total external surface of the tubes, Rh1"                                      annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_gasVol "Gas volume, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_fluidVol "Fluid volume, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        parameter SI.Volume Rh1_IP_metalVol 
          "Volume of the metal part in the tube, Rh1" annotation (Dialog(tab = "IP", group = "Rh"));
        //Sh_IP
        parameter Integer Sh_IP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "IP", group = "Sh"));
        parameter Integer Sh_IP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Area Sh_IP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Area Sh_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Area Sh_IP_extSurfaceTub 
          "Total external surface of the tube" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Volume Sh_IP_gasVol "Gas volume" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Volume Sh_IP_fluidVol "Fluid volume" annotation (Dialog(tab = "IP", group = "Sh"));
        parameter SI.Volume Sh_IP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "IP", group = "Sh"));
        //Ev_IP
        parameter Integer Ev_IP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "IP", group = "Ev"));
        parameter Integer Ev_IP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Area Ev_IP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Area Ev_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Area Ev_IP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Volume Ev_IP_gasVol "Gas volume" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Volume Ev_IP_fluidVol "Fluid volume" annotation (Dialog(tab = "IP", group = "Ev"));
        parameter SI.Volume Ev_IP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "IP", group = "Ev"));
        //Ec_IP
        parameter Integer Ec_IP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "IP", group = "Ec"));
        parameter Integer Ec_IP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Area Ec_IP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Area Ec_IP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Area Ec_IP_extSurfaceTub 
          "Total external surface of the tube" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Volume Ec_IP_gasVol "Gas volume" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Volume Ec_IP_fluidVol "Fluid volume" annotation (Dialog(tab = "IP", group = "Ec"));
        parameter SI.Volume Ec_IP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "IP", group = "Ec"));
        //Sh_LP
        parameter Integer Sh_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Sh"));
        parameter Integer Sh_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Area Sh_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Sh"));
        parameter SI.Volume Sh_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Sh"));
        //Ev_LP
        parameter Integer Ev_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Ev"));
        parameter Integer Ev_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Area Ev_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Ev"));
        parameter SI.Volume Ev_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Ev"));
        //Ec_LP
        parameter Integer Ec_LP_N_G=2 "Number of node of the gas side" 
            annotation (Dialog(tab = "LP", group = "Ec"));
        parameter Integer Ec_LP_N_F=2 "Number of node of the fluid side" 
            annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_exchSurface_G 
          "Exchange surface between gas - metal tube" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_exchSurface_F 
          "Exchange surface between metal tube - fluid" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Area Ec_LP_extSurfaceTub 
          "Total external surface of the tubes" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_gasVol "Gas volume" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_fluidVol "Fluid volume" annotation (Dialog(tab = "LP", group = "Ec"));
        parameter SI.Volume Ec_LP_metalVol 
          "Volume of the metal part in the tube" annotation (Dialog(tab = "LP", group = "Ec"));
        
        //Initialization conditions
        parameter Boolean use_T_Sh = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Superheaters (Reheater)"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean use_T_Ev = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Evaporators"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean use_T_Ec = true 
          "Select -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the Economizers"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        
        //Start values
        //Sh2_HP
        parameter SI.Temperature Sh2_HP_Tstart_G_In 
          "Intlet gas temperature start value of Sh2" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Sh2" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Sh2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Sh2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh2_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Sh2" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh2_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh2_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Sh2" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh2_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh2_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Sh2" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh2_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh2_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Sh2" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (HP)", group = "Sh"));
        //Sh1_HP
        parameter SI.Temperature Sh1_HP_Tstart_G_In 
          "Intlet gas temperature start value of Sh1" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Sh1" annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Sh1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Sh1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh1_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Sh1" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (HP)", group = "Sh"));
        parameter SI.Temperature Sh1_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Sh,Sh1_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Sh1" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh1_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Sh1" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (HP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Sh,Sh1_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Sh1" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (HP)", group = "Sh"));
        //Ev_HP
        parameter SI.Temperature Ev_HP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,Ev_HP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                           tab = "Initialization (HP)", group = "Ev"));
        parameter SI.Temperature Ev_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,Ev_HP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                            tab = "Initialization (HP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ev,Ev_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (HP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ev,Ev_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (HP)", group = "Ev"));
        //Ec2_HP
        parameter SI.Temperature Ec2_HP_Tstart_G_In 
          "Intlet gas temperature start value of Ec2" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Ec2" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Ec2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Ec2" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec2_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Ec2" annotation(Dialog(enable = use_T_Ec,
                                                                  tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec2_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec2_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Ec2" annotation(Dialog(enable = use_T_Ec,
                                                                   tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec2_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec2_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Ec2" annotation(Dialog(enable = not use_T_Ec,
                                                                        tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec2_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec2_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Ec2" annotation(Dialog(enable = not use_T_Ec,
                                                                         tab = "Initialization (HP)", group = "Ec"));
        //Ec1_HP
        parameter SI.Temperature Ec1_HP_Tstart_G_In 
          "Intlet gas temperature start value of Ec1" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_G_Out 
          "Outlet gas temperature start value of Ec1" annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_M_In 
          "Inlet metal wall temperature start value of Ec1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Ec1" 
            annotation(Dialog(tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_F_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec1_HP_hstart_F_In) 
          "Inlet fluid temperature start value of Ec1" annotation(Dialog(enable = use_T_Ec,
                                                                  tab = "Initialization (HP)", group = "Ec"));
        parameter SI.Temperature Ec1_HP_Tstart_F_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ec,Ec1_HP_hstart_F_Out) 
          "Outlet fluid temperature start value of Ec1" annotation(Dialog(enable = use_T_Ec,
                                                                   tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec1_HP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec1_HP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Ec1" annotation(Dialog(enable = not use_T_Ec,
                                                                        tab = "Initialization (HP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec1_HP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidHPNomPressure_Ec,Ec1_HP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Ec1" annotation(Dialog(enable = not use_T_Ec,
                                                                         tab = "Initialization (HP)", group = "Ec"));
        //Rh2_IP
        parameter SI.Temperature Rh2_IP_Tstart_G_In 
          "Intlet gas temperature start value of Rh2" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_G_Out 
          "Outlet gas temperature start value of Rh2" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_M_In 
          "Inlet metal wall temperature start value of Rh2" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Rh2" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh2_IP_hstart_F_In) 
          "Inlet fluid temperature start value of Rh2" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh2_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh2_IP_hstart_F_Out) 
          "Outlet fluid temperature start value of Rh2" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh2_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh2_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Rh2" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh2_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh2_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Rh2" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (IP)", group = "Rh"));
        //Rh1_HP
        parameter SI.Temperature Rh1_IP_Tstart_G_In 
          "Intlet gas temperature start value of Rh1" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_G_Out 
          "Outlet gas temperature start value of Rh1" annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_M_In 
          "Inlet metal wall temperature start value of Rh1" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value of Rh1" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh1_IP_hstart_F_In) 
          "Inlet fluid temperature start value of Rh1" annotation(Dialog(enable = use_T_Sh,
                                                                  tab = "Initialization (IP)", group = "Rh"));
        parameter SI.Temperature Rh1_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Rh,Rh1_IP_hstart_F_Out) 
          "Outlet fluid temperature start value of Rh1" annotation(Dialog(enable = use_T_Sh,
                                                                   tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh1_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh1_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value of Rh1" annotation(Dialog(enable = not use_T_Sh,
                                                                        tab = "Initialization (IP)", group = "Rh"));
        parameter SI.SpecificEnthalpy Rh1_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Rh,Rh1_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value of Rh1" annotation(Dialog(enable = not use_T_Sh,
                                                                         tab = "Initialization (IP)", group = "Rh"));
        //Sh_IP
        parameter SI.Temperature Sh_IP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Sh,Sh_IP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                           tab = "Initialization (IP)", group = "Sh"));
        parameter SI.Temperature Sh_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Sh,Sh_IP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                            tab = "Initialization (IP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Sh,Sh_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                 tab = "Initialization (IP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Sh,Sh_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                  tab = "Initialization (IP)", group = "Sh"));
        //Ev_IP
        parameter SI.Temperature Ev_IP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Ev,Ev_IP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                                 tab = "Initialization (IP)", group = "Ev"));
        parameter SI.Temperature Ev_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Ev,Ev_IP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                                  tab = "Initialization (IP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Ev,Ev_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (IP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Ev,Ev_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (IP)", group = "Ev"));
        //Ec_IP
        parameter SI.Temperature Ec_IP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_F_In=FluidMedium.temperature_ph(fluidIPNomPressure_Ec,Ec_IP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                           tab = "Initialization (IP)", group = "Ec"));
        parameter SI.Temperature Ec_IP_Tstart_F_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Ec,Ec_IP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                            tab = "Initialization (IP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_IP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Ec,Ec_IP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                 tab = "Initialization (IP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_IP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidIPNomPressure_Ec,Ec_IP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                  tab = "Initialization (IP)", group = "Ec"));
        
        //Sh_LP
        parameter SI.Temperature Sh_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Sh,Sh_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                           tab = "Initialization (LP)", group = "Sh"));
        parameter SI.Temperature Sh_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Sh,Sh_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Sh,
                                                            tab = "Initialization (LP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Sh,Sh_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                 tab = "Initialization (LP)", group = "Sh"));
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Sh,Sh_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Sh,
                                                                  tab = "Initialization (LP)", group = "Sh"));
        //Ev_LP
        parameter SI.Temperature Ev_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,Ev_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                                 tab = "Initialization (LP)", group = "Ev"));
        parameter SI.Temperature Ev_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,Ev_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ev,
                                                            tab = "Initialization (LP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ev,Ev_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                 tab = "Initialization (LP)", group = "Ev"));
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ev,Ev_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ev,
                                                                  tab = "Initialization (LP)", group = "Ev"));
        //Ec_LP
        parameter SI.Temperature Ec_LP_Tstart_G_In 
          "Intlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_G_Out 
          "Outlet gas temperature start value" annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_M_In 
          "Inlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_M_Out 
          "Outlet metal wall temperature start value" 
            annotation(Dialog(tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_F_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ec,Ec_LP_hstart_F_In) 
          "Inlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                           tab = "Initialization (LP)", group = "Ec"));
        parameter SI.Temperature Ec_LP_Tstart_F_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ec,Ec_LP_hstart_F_Out) 
          "Outlet fluid temperature start value" annotation(Dialog(enable = use_T_Ec,
                                                            tab = "Initialization (LP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ec,Ec_LP_Tstart_F_In) 
          "Inlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                 tab = "Initialization (LP)", group = "Ec"));
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidLPNomPressure_Ec,Ec_LP_Tstart_F_Out) 
          "Outlet fluid specific enthalpy start value" annotation(Dialog(enable = not use_T_Ec,
                                                                  tab = "Initialization (LP)", group = "Ec"));
        
        Water.FlangeA Sh_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-270,140; -250,160]);
        Water.FlangeB Ev_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-240,140; -220,160]);
        Water.FlangeA Ev_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-150,140; -130,160]);
        Water.FlangeB Ec_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-180,140; -160,160]);
        Water.FlangeA Ec_HP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-210,140; -190,160]);
        Water.FlangeA Sh_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-70,140; -50,160]);
        Water.FlangeB Ev_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-40,140; -20,160]);
        Water.FlangeA Ev_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-10,140; 10,160]);
        Water.FlangeB Ec_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[20,140; 40,160]);
        Water.FlangeA Ec_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[50,140; 70,160]);
        Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium) 
                          annotation (extent=[-314,-14; -286,14]);
        Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium) 
                           annotation (extent=[286,-14; 314,14]);
        Water.FlangeA Sh_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[130,140; 150,160]);
        Water.FlangeB Ev_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[160,140; 180,160]);
        Water.FlangeA Ev_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[190,140; 210,160]);
        Water.FlangeB Ec_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[220,140; 240,160]);
        Water.FlangeA Ec_LP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[250,140; 270,160]);
        Water.FlangeB Sh_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-210,-160; -190,-140]);
        Water.FlangeB Sh_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-10,-160; 10,-140]);
        Water.FlangeA Rh_IP_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-140,-160; -120,-140]);
        Water.FlangeB Rh_IP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-80,-160; -60,-140]);
        Water.FlangeB Sh_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[190,-160; 210,-140]);
      end HEG_3LRh_wa;
      
      partial model DG_2L "Base class for Drums Group with two pressure levels" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Charateristics 
        //HP drum 
        parameter SI.Pressure fluidHPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_rint "Internal radius"                annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_rext "External radius"                annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_L "Length"                annotation (Dialog(group = "HP drum"));
        parameter SI.HeatCapacity HPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "HP drum"));
        //LP drum 
        parameter SI.Pressure fluidLPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_rint "Internal radius"                annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_rext "External radius"                annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_L "Length"                annotation (Dialog(group = "LP drum"));
        parameter SI.HeatCapacity LPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "LP drum"));
        
        //Initialization 
        parameter Boolean SSInit = false "Steady-state initialisation" annotation(Dialog(tab = "Initialisation"));
        //HP drum
        parameter SI.Pressure HPd_pstart=fluidHPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.SpecificEnthalpy HPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.SpecificEnthalpy HPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.Temperature HPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        //LP drum
        parameter SI.Pressure LPd_pstart=fluidLPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.SpecificEnthalpy LPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.SpecificEnthalpy LPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.Temperature LPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        
        constant Real g=Modelica.Constants.g_n;
        constant Real pi=Modelica.Constants.pi;
        
        Water.FlangeB LiquidWaterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-210,110; -190,130]);
        Water.FlangeB Steam_HP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-170,-210; -150,-190]);
        Water.FlangeA FromRiser_HP(redeclare package Medium = FluidMedium) 
          annotation (extent=[-140,-210; -120,-190]);
        Water.FlangeB ToRiser_HP(redeclare package Medium = FluidMedium) 
          annotation (extent=[-110,-210; -90,-190]);
        Water.FlangeA Feed_HP(redeclare package Medium = FluidMedium) 
          annotation (extent=[-80,-210; -60,-190]);
        Water.FlangeB WaterForHP(redeclare package Medium = FluidMedium) 
          annotation (extent=[-50,-210; -30,-190]);
        Water.FlangeB Steam_LP_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[30,-210; 50,-190]);
        Water.FlangeA FromRiser_LP(redeclare package Medium = FluidMedium) 
          annotation (extent=[60,-210; 80,-190]);
        Water.FlangeB ToRiser_LP(redeclare package Medium = FluidMedium) 
          annotation (extent=[90,-210; 110,-190]);
        Water.FlangeA Feed_LP(redeclare package Medium = FluidMedium) 
          annotation (extent=[120,-210; 140,-190]);
        Water.FlangeB WaterForLP(redeclare package Medium = FluidMedium) 
          annotation (extent=[150,-210; 170,-190]);
        Water.FlangeA WaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[190,110; 210,130]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[184,44; 216,76]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[216,4; 184,36]);
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-160,-20; -80,-100],  style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Ellipse(extent=[-56,36; -24,4],    style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-40,36; -40,4; -52,30; -40,4; -28,30],        style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-130,-200; -130,-90], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[-100,-200; -100,-84], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[-70,-200; -70,-80; -120,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[-160,-198; -160,-120; -180,-120; -180,-20; -160,-20;
                  -120,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Polygon(points=[-160,-60; -80,-60; -80,-54; -82,-44; -88,-34; -94,
                  -28; -100,-24; -106,-22; -114,-20; -120,-20; -126,-20; -134,
                  -22; -140,-24; -146,-28; -152,-34; -158,-44; -160,-54; -160,
                  -60; -160,-60],        style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-40,-198; -40,4], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[40,-20; 120,-100],    style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Ellipse(extent=[144,36; 176,4],    style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[160,36; 160,4; 148,30; 160,4; 172,30],        style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[70,-200; 70,-90], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[100,-200; 100,-84], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[130,-200; 130,-80; 80,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[40,-198; 40,-120; 20,-120; 20,-20; 40,-20; 80,-60],
                style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Polygon(points=[40,-60; 120,-60; 120,-54; 118,-44; 112,-34; 106,-28;
                  100,-24; 94,-22; 86,-20; 80,-20; 74,-20; 66,-22; 60,-24; 54,
                  -28; 48,-34; 42,-44; 40,-54; 40,-60; 40,-60],
                                         style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[160,-198; 160,4], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[-40,36; -40,120; 198,120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[160,36; 160,120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[-140,152; -100,112],  style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-140,132; -100,132; -100,136; -102,142; -106,146;
                  -110,150; -116,152; -118,152; -120,152; -122,152; -124,152;
                  -130,150; -134,146; -138,142; -140,136; -140,132; -140,132],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-132,120; -200,120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1))),
                             Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
      end DG_2L;
      
      partial model DG_3L 
        "Base class for Drums Group with three pressure levels" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Charateristics 
        //HP drum 
        parameter SI.Pressure fluidHPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_rint "Internal radius"                annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_rext "External radius"                annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_L "Length"                annotation (Dialog(group = "HP drum"));
        parameter SI.HeatCapacity HPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "HP drum"));
        //IP drum 
        parameter SI.Pressure fluidIPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_rint "Internal radius"                annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_rext "External radius"                annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_L "Length"                annotation (Dialog(group = "IP drum"));
        parameter SI.HeatCapacity IPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "IP drum"));
        //LP drum 
        parameter SI.Pressure fluidLPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_rint "Internal radius"                annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_rext "External radius"                annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_L "Length"                annotation (Dialog(group = "LP drum"));
        parameter SI.HeatCapacity LPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "LP drum"));
        
        //Initialization 
        parameter Boolean SSInit = false "Steady-state initialisation" annotation(Dialog(tab = "Initialisation"));
        //HP drum
        parameter SI.Pressure HPd_pstart=fluidHPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.SpecificEnthalpy HPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.SpecificEnthalpy HPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.Temperature HPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        //IP drum
        parameter SI.Pressure IPd_pstart=fluidIPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.SpecificEnthalpy IPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.SpecificEnthalpy IPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.Temperature IPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        //LP drum
        parameter SI.Pressure LPd_pstart=fluidLPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.SpecificEnthalpy LPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.SpecificEnthalpy LPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.Temperature LPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        
        constant Real g=Modelica.Constants.g_n;
        constant Real pi=Modelica.Constants.pi;
        
        Water.FlangeB LiquidWaterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-310,170; -290,190]);
        Water.FlangeA WaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[290,230; 310,250]);
        annotation (Icon(
            Rectangle(extent=[-300,300; 300,-300], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-270,-70; -170,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[-170,-302; -170,-160; -210,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-200,-300; -200,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-230,-302; -230,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-260,-304; -260,-200; -280,-200; -280,-70; -260,-70;
                  -220,-120; -220,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[-270,-120; -170,-120; -170,-112; -172,-102; -178,
                  -92; -184,-84; -192,-78; -202,-72; -212,-70; -220,-70; -228,
                  -70; -238,-72; -248,-78; -256,-84; -262,-92; -268,-102; -270,
                  -112; -270,-112; -270,-120],
                                         style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[240,60; 280,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[260,60; 260,20; 242,50; 260,20; 278,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[260,20; 260,-302], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[40,60; 80,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,60; 60,20; 42,50; 60,20; 78,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,20; 60,-300], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[-160,60; -120,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-140,60; -140,20; -158,50; -140,20; -124,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-140,18; -140,-302], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,60; 60,240], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[-70,-70; 30,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[30,-302; 30,-160; -10,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[0,-300; 0,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-30,-302; -30,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-60,-304; -60,-200; -80,-200; -80,-70; -60,-70; -20,
                  -120; -20,-120],
                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[-70,-120; 30,-120; 30,-112; 28,-102; 22,-92; 16,-84;
                  8,-78; -2,-72; -12,-70; -20,-70; -28,-70; -38,-72; -48,-78;
                  -56,-84; -62,-92; -68,-102; -70,-112; -70,-112; -70,-120],
                                                                         style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[130,-70; 230,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[230,-302; 230,-160; 190,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[200,-300; 200,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[170,-302; 170,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[140,-304; 140,-200; 120,-200; 120,-70; 140,-70; 180,
                  -120; 180,-120],
                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[130,-120; 230,-120; 230,-112; 228,-102; 222,-92;
                  216,-84; 208,-78; 198,-72; 188,-70; 180,-70; 172,-70; 162,-72;
                  152,-78; 144,-84; 138,-92; 132,-102; 130,-112; 130,-112; 130,
                  -120],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-140,60; -140,240; 260,240],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[260,60; 260,240; 298,240],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[-220,210; -180,170],  style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-220,190; -180,190; -180,194; -182,200; -186,204;
                  -190,208; -196,210; -198,210; -200,210; -202,210; -204,210;
                  -210,208; -214,204; -218,200; -220,194; -220,190; -220,190],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-210,180; -300,180], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1))),
                             Diagram,
          Coordsys(extent=[-300,-300; 300,300], scale=0.1));
        Water.FlangeB Steam_HP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-270,-310; -250,-290]);
        Water.FlangeA FromRiser_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-240,-310; -220,-290]);
        Water.FlangeB ToRiser_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-210,-310; -190,-290]);
        Water.FlangeA Feed_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-180,-310; -160,-290]);
        Water.FlangeB WaterForHP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-150,-310; -130,-290]);
        Water.FlangeB Steam_IP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-70,-310; -50,-290]);
        Water.FlangeA FromRiser_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-40,-310; -20,-290]);
        Water.FlangeB ToRiser_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-10,-310; 10,-290]);
        Water.FlangeA Feed_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[20,-310; 40,-290]);
        Water.FlangeB WaterForIP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[50,-310; 70,-290]);
        Water.FlangeB Steam_LP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[130,-310; 150,-290]);
        Water.FlangeA FromRiser_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[160,-310; 180,-290]);
        Water.FlangeB ToRiser_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[190,-310; 210,-290]);
        Water.FlangeA Feed_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[220,-310; 240,-290]);
        Water.FlangeB WaterForLP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[250,-310; 270,-290]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[280,140; 320,180]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[320,80; 280,120]);
      end DG_3L;
      
      partial model DG_3L_wa 
        "Base class for Drums Group with three pressure levels, without attemperation" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Charateristics 
        //HP drum 
        parameter SI.Pressure fluidHPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_rint "Internal radius"                annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_rext "External radius"                annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_L "Length"                annotation (Dialog(group = "HP drum"));
        parameter SI.HeatCapacity HPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "HP drum"));
        //IP drum 
        parameter SI.Pressure fluidIPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_rint "Internal radius"                annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_rext "External radius"                annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_L "Length"                annotation (Dialog(group = "IP drum"));
        parameter SI.HeatCapacity IPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "IP drum"));
        //LP drum 
        parameter SI.Pressure fluidLPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_rint "Internal radius"                annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_rext "External radius"                annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_L "Length"                annotation (Dialog(group = "LP drum"));
        parameter SI.HeatCapacity LPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "LP drum"));
        
        //Initialization 
        parameter Boolean SSInit = false "Steady-state initialisation" annotation(Dialog(tab = "Initialisation"));
        //HP drum
        parameter SI.Pressure HPd_pstart=fluidHPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.SpecificEnthalpy HPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.SpecificEnthalpy HPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.Temperature HPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        //IP drum
        parameter SI.Pressure IPd_pstart=fluidIPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.SpecificEnthalpy IPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.SpecificEnthalpy IPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.Temperature IPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        //LP drum
        parameter SI.Pressure LPd_pstart=fluidLPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.SpecificEnthalpy LPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.SpecificEnthalpy LPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.Temperature LPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        
        constant Real g=Modelica.Constants.g_n;
        constant Real pi=Modelica.Constants.pi;
        
        annotation (Icon(
            Rectangle(extent=[-300,300; 300,-300], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-270,-70; -170,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[-170,-302; -170,-160; -210,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-200,-300; -200,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-230,-302; -230,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-260,-304; -260,-200; -280,-200; -280,-70; -260,-70;
                  -220,-120; -220,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[-270,-120; -170,-120; -170,-112; -172,-102; -178,
                  -92; -184,-84; -192,-78; -202,-72; -212,-70; -220,-70; -228,
                  -70; -238,-72; -248,-78; -256,-84; -262,-92; -268,-102; -270,
                  -112; -270,-112; -270,-120],
                                         style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[240,60; 280,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[260,60; 260,20; 242,50; 260,20; 278,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[260,20; 260,-302], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[40,60; 80,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,60; 60,20; 42,50; 60,20; 78,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,20; 60,-300], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[-160,60; -120,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-140,60; -140,20; -158,50; -140,20; -124,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-140,18; -140,-302], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,60; 60,240], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[-70,-70; 30,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[30,-302; 30,-160; -10,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[0,-300; 0,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-30,-302; -30,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-60,-304; -60,-200; -80,-200; -80,-70; -60,-70; -20,
                  -120; -20,-120],
                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[-70,-120; 30,-120; 30,-112; 28,-102; 22,-92; 16,-84;
                  8,-78; -2,-72; -12,-70; -20,-70; -28,-70; -38,-72; -48,-78;
                  -56,-84; -62,-92; -68,-102; -70,-112; -70,-112; -70,-120],
                                                                         style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[130,-70; 230,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[230,-302; 230,-160; 190,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[200,-300; 200,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[170,-302; 170,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[140,-304; 140,-200; 120,-200; 120,-70; 140,-70; 180,
                  -120; 180,-120],
                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[130,-120; 230,-120; 230,-112; 228,-102; 222,-92;
                  216,-84; 208,-78; 198,-72; 188,-70; 180,-70; 172,-70; 162,-72;
                  152,-78; 144,-84; 138,-92; 132,-102; 130,-112; 130,-112; 130,
                  -120],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-140,60; -140,240; 260,240],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[260,60; 260,240; 298,240],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1))),
                             Diagram,
          Coordsys(extent=[-300,-300; 300,300], scale=0.1));
        Water.FlangeA WaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[290,230; 310,250]);
        Water.FlangeB Steam_HP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-270,-310; -250,-290]);
        Water.FlangeA FromRiser_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-240,-310; -220,-290]);
        Water.FlangeB ToRiser_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-210,-310; -190,-290]);
        Water.FlangeA Feed_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-180,-310; -160,-290]);
        Water.FlangeB WaterForHP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-150,-310; -130,-290]);
        Water.FlangeB Steam_IP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-70,-310; -50,-290]);
        Water.FlangeA FromRiser_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-40,-310; -20,-290]);
        Water.FlangeB ToRiser_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-10,-310; 10,-290]);
        Water.FlangeA Feed_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[20,-310; 40,-290]);
        Water.FlangeB WaterForIP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[50,-310; 70,-290]);
        Water.FlangeB Steam_LP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[130,-310; 150,-290]);
        Water.FlangeA FromRiser_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[160,-310; 180,-290]);
        Water.FlangeB ToRiser_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[190,-310; 210,-290]);
        Water.FlangeA Feed_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[220,-310; 240,-290]);
        Water.FlangeB WaterForLP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[250,-310; 270,-290]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[280,140; 320,180]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[320,80; 280,120]);
      end DG_3L_wa;
      
      partial model DG_3L_is 
        "Base class for Drums Group with three pressure levels, without attemperation and ideal sourge of water included" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Charateristics 
        //HP drum 
        parameter Modelica.SIunits.Pressure fluidHPNomPressure 
          "Nominal internal pressure"                annotation (Dialog(group = "HP drum"));
        parameter Modelica.SIunits.Length HPd_rint "Internal radius"  annotation (Dialog(group = "HP drum"));
        parameter Modelica.SIunits.Length HPd_rext "External radius"  annotation (Dialog(group = "HP drum"));
        parameter Modelica.SIunits.Length HPd_L "Length"  annotation (Dialog(group = "HP drum"));
        parameter Modelica.SIunits.HeatCapacity HPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "HP drum"));
        //IP drum 
        parameter Modelica.SIunits.Pressure fluidIPNomPressure 
          "Nominal internal pressure"                annotation (Dialog(group = "IP drum"));
        parameter Modelica.SIunits.Length IPd_rint "Internal radius"  annotation (Dialog(group = "IP drum"));
        parameter Modelica.SIunits.Length IPd_rext "External radius"  annotation (Dialog(group = "IP drum"));
        parameter Modelica.SIunits.Length IPd_L "Length"  annotation (Dialog(group = "IP drum"));
        parameter Modelica.SIunits.HeatCapacity IPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "IP drum"));
        //LP drum 
        parameter Modelica.SIunits.Pressure fluidLPNomPressure 
          "Nominal internal pressure"                annotation (Dialog(group = "LP drum"));
        parameter Modelica.SIunits.Length LPd_rint "Internal radius"  annotation (Dialog(group = "LP drum"));
        parameter Modelica.SIunits.Length LPd_rext "External radius"  annotation (Dialog(group = "LP drum"));
        parameter Modelica.SIunits.Length LPd_L "Length"  annotation (Dialog(group = "LP drum"));
        parameter Modelica.SIunits.HeatCapacity LPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "LP drum"));
        
        //Initialization 
        parameter Boolean SSInit = false "Steady-state initialisation" annotation(Dialog(tab = "Initialisation"));
        //HP drum
        parameter Modelica.SIunits.Pressure HPd_pstart=fluidHPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter Modelica.SIunits.SpecificEnthalpy HPd_hvstart 
          "Vapour enthalpy start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter Modelica.SIunits.SpecificEnthalpy HPd_hlstart 
          "Liquid enthalpy start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter Modelica.SIunits.Temperature HPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        //IP drum
        parameter Modelica.SIunits.Pressure IPd_pstart=fluidIPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter Modelica.SIunits.SpecificEnthalpy IPd_hvstart 
          "Vapour enthalpy start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter Modelica.SIunits.SpecificEnthalpy IPd_hlstart 
          "Liquid enthalpy start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter Modelica.SIunits.Temperature IPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        //LP drum
        parameter Modelica.SIunits.Pressure LPd_pstart=fluidLPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter Modelica.SIunits.SpecificEnthalpy LPd_hvstart 
          "Vapour enthalpy start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter Modelica.SIunits.SpecificEnthalpy LPd_hlstart 
          "Liquid enthalpy start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter Modelica.SIunits.Temperature LPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        
        constant Real g=Modelica.Constants.g_n;
        constant Real pi=Modelica.Constants.pi;
        
        ThermoPower.Water.FlangeB Steam_HP_Out(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-270,-310; -250,-290]);
        ThermoPower.Water.FlangeA FromRiser_HP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-240,-310; -220,-290]);
        ThermoPower.Water.FlangeB ToRiser_HP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-210,-310; -190,-290]);
        ThermoPower.Water.FlangeA Feed_HP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-180,-310; -160,-290]);
        ThermoPower.Water.FlangeB WaterForHP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-150,-310; -130,-290]);
        ThermoPower.Water.FlangeB Steam_IP_Out(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-70,-310; -50,-290]);
        ThermoPower.Water.FlangeA FromRiser_IP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-40,-310; -20,-290]);
        ThermoPower.Water.FlangeB ToRiser_IP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-10,-310; 10,-290]);
        ThermoPower.Water.FlangeA Feed_IP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[20,-310; 40,-290]);
        ThermoPower.Water.FlangeB WaterForIP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[50,-310; 70,-290]);
        ThermoPower.Water.FlangeB Steam_LP_Out(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[130,-310; 150,-290]);
        ThermoPower.Water.FlangeA FromRiser_LP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[160,-310; 180,-290]);
        ThermoPower.Water.FlangeB ToRiser_LP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[190,-310; 210,-290]);
        ThermoPower.Water.FlangeA Feed_LP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[220,-310; 240,-290]);
        ThermoPower.Water.FlangeB WaterForLP(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[250,-310; 270,-290]);
        ThermoPower.PowerPlants.Buses.Sensors SensorsBus 
                              annotation (extent=[280,140; 320,180]);
        ThermoPower.PowerPlants.Buses.Actuators ActuatorsBus 
                                  annotation (extent=[320,80; 280,120]);
        annotation (Icon(
            Rectangle(extent=[-300,300; 300,-300], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-270,-70; -170,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[-170,-302; -170,-160; -210,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-200,-300; -200,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-230,-302; -230,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-260,-304; -260,-200; -280,-200; -280,-70; -260,-70;
                  -220,-120; -220,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[-270,-120; -170,-120; -170,-112; -172,-102; -178,-92;
                  -184,-84; -192,-78; -202,-72; -212,-70; -220,-70; -228,-70;
                  -238,-72; -248,-78; -256,-84; -262,-92; -268,-102; -270,-112;
                  -270,-112; -270,-120], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[240,60; 280,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[260,60; 260,20; 242,50; 260,20; 278,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[260,20; 260,-302], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[40,60; 80,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,60; 60,20; 42,50; 60,20; 78,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,20; 60,-300], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[-160,60; -120,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-140,60; -140,20; -158,50; -140,20; -124,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-140,18; -140,-302], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,60; 60,180], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[-70,-70; 30,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[30,-302; 30,-160; -10,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[0,-300; 0,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-30,-302; -30,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-60,-304; -60,-200; -80,-200; -80,-70; -60,-70; -20,-120;
                  -20,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[-70,-120; 30,-120; 30,-112; 28,-102; 22,-92; 16,-84;
                  8,-78; -2,-72; -12,-70; -20,-70; -28,-70; -38,-72; -48,-78; -56,
                  -84; -62,-92; -68,-102; -70,-112; -70,-112; -70,-120], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[130,-70; 230,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[230,-302; 230,-160; 190,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[200,-300; 200,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[170,-302; 170,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[140,-304; 140,-200; 120,-200; 120,-70; 140,-70; 180,-120;
                  180,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[130,-120; 230,-120; 230,-112; 228,-102; 222,-92; 216,
                  -84; 208,-78; 198,-72; 188,-70; 180,-70; 172,-70; 162,-72; 152,
                  -78; 144,-84; 138,-92; 132,-102; 130,-112; 130,-112; 130,-120],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[36,224; 86,176], style(
                color=3,
                rgbcolor={0,0,255},
                fillPattern=1)),
            Line(points=[-140,60; -140,120; 60,202], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[260,60; 260,120; 60,202], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1))),
                             Diagram,
          Coordsys(
            extent=[-300,-300; 300,300],
            scale=0.1,
            grid=[2,2]));
      end DG_3L_is;
      
      partial model DG_3L_tap_wa 
        "Base class for Drums Group with three pressure levels and tappings of saturated water for external heater, without attemperation" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Charateristics 
        //HP drum 
        parameter SI.Pressure fluidHPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_rint "Internal radius"                annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_rext "External radius"                annotation (Dialog(group = "HP drum"));
        parameter SI.Length HPd_L "Length"                annotation (Dialog(group = "HP drum"));
        parameter SI.HeatCapacity HPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "HP drum"));
        //IP drum 
        parameter SI.Pressure fluidIPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_rint "Internal radius"                annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_rext "External radius"                annotation (Dialog(group = "IP drum"));
        parameter SI.Length IPd_L "Length"                annotation (Dialog(group = "IP drum"));
        parameter SI.HeatCapacity IPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "IP drum"));
        //LP drum 
        parameter SI.Pressure fluidLPNomPressure "Nominal internal pressure" 
                                                     annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_rint "Internal radius"                annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_rext "External radius"                annotation (Dialog(group = "LP drum"));
        parameter SI.Length LPd_L "Length"                annotation (Dialog(group = "LP drum"));
        parameter SI.HeatCapacity LPd_Cm 
          "Total Heat Capacity of the metal wall"          annotation (Dialog(group = "LP drum"));
        
        //Initialization 
        parameter Boolean SSInit = false "Steady-state initialisation" annotation(Dialog(tab = "Initialisation"));
        //HP drum
        parameter SI.Pressure HPd_pstart=fluidHPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.SpecificEnthalpy HPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.SpecificEnthalpy HPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        parameter SI.Temperature HPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "HP drum"));
        //IP drum
        parameter SI.Pressure IPd_pstart=fluidIPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.SpecificEnthalpy IPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.SpecificEnthalpy IPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        parameter SI.Temperature IPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "IP drum"));
        //LP drum
        parameter SI.Pressure LPd_pstart=fluidLPNomPressure 
          "Pressure start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.SpecificEnthalpy LPd_hvstart "Vapour enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.SpecificEnthalpy LPd_hlstart "Liquid enthalpy start value"
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        parameter SI.Temperature LPd_Tmstart=300 
          "Metal wall temperature start value" 
          annotation(Dialog(tab = "Initialisation", group = "LP drum"));
        
        constant Real g=Modelica.Constants.g_n;
        constant Real pi=Modelica.Constants.pi;
        
        Water.FlangeA HPsteamFromExUse(redeclare package Medium = FluidMedium) 
          "HP steam from external use" 
          annotation (extent=[-250,290; -230,310]);
        Water.FlangeB tapHPwater(redeclare package Medium = FluidMedium) 
          "tapping HP Water for external use" 
          annotation (extent=[-150,290; -130,310]);
        Water.FlangeA IPsteamFromExUse(redeclare package Medium = FluidMedium) 
          "IP steam from external use" 
          annotation (extent=[-210,290; -190,310]);
        Water.FlangeB tapIPwater(redeclare package Medium = FluidMedium) 
          "tapping IP Water for external use" 
          annotation (extent=[-110,290; -90,310]);
        Water.FlangeB tapLPwater(redeclare package Medium = FluidMedium) 
          "tapping LP Water for external use" 
          annotation (extent=[-72,290; -52,310]);
        annotation (Icon(
            Rectangle(extent=[-300,300; 300,-300], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-270,-70; -170,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[-170,-302; -170,-160; -210,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-200,-300; -200,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-230,-302; -230,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-260,-304; -260,-200; -280,-200; -280,-70; -260,-70;
                  -220,-120; -220,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[-270,-120; -170,-120; -170,-112; -172,-102; -178,
                  -92; -184,-84; -192,-78; -202,-72; -212,-70; -220,-70; -228,
                  -70; -238,-72; -248,-78; -256,-84; -262,-92; -268,-102; -270,
                  -112; -270,-112; -270,-120],
                                         style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[240,60; 280,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[260,60; 260,20; 242,50; 260,20; 278,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[260,20; 260,-302], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[40,60; 80,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,60; 60,20; 42,50; 60,20; 78,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,20; 60,-300], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[-160,60; -120,20], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-140,60; -140,20; -158,50; -140,20; -124,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-140,18; -140,-302], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[60,60; 60,240], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Ellipse(extent=[-70,-70; 30,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[30,-302; 30,-160; -10,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[0,-300; 0,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-30,-302; -30,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-60,-304; -60,-200; -80,-200; -80,-70; -60,-70; -20,
                  -120; -20,-120],
                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[-70,-120; 30,-120; 30,-112; 28,-102; 22,-92; 16,-84;
                  8,-78; -2,-72; -12,-70; -20,-70; -28,-70; -38,-72; -48,-78;
                  -56,-84; -62,-92; -68,-102; -70,-112; -70,-112; -70,-120],
                                                                         style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[130,-70; 230,-170], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[230,-302; 230,-160; 190,-120], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[200,-300; 200,-160], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[170,-302; 170,-168], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[140,-304; 140,-200; 120,-200; 120,-70; 140,-70; 180,
                  -120; 180,-120],
                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Polygon(points=[130,-120; 230,-120; 230,-112; 228,-102; 222,-92;
                  216,-84; 208,-78; 198,-72; 188,-70; 180,-70; 172,-70; 162,-72;
                  152,-78; 144,-84; 138,-92; 132,-102; 130,-112; 130,-112; 130,
                  -120],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[-140,60; -140,240; 260,240],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[260,60; 260,240; 298,240],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Text(
              extent=[-260,280; -40,260],
              style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1),
              string="tappings")),
                             Diagram,
          Coordsys(extent=[-300,-300; 300,300], scale=0.1));
        
        Water.FlangeA WaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[290,230; 310,250]);
        Water.FlangeB Steam_HP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-270,-310; -250,-290]);
        Water.FlangeA FromRiser_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-240,-310; -220,-290]);
        Water.FlangeB ToRiser_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-210,-310; -190,-290]);
        Water.FlangeA Feed_HP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-180,-310; -160,-290]);
        Water.FlangeB WaterForHP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-150,-310; -130,-290]);
        Water.FlangeB Steam_IP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-70,-310; -50,-290]);
        Water.FlangeA FromRiser_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-40,-310; -20,-290]);
        Water.FlangeB ToRiser_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-10,-310; 10,-290]);
        Water.FlangeA Feed_IP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[20,-310; 40,-290]);
        Water.FlangeB WaterForIP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[50,-310; 70,-290]);
        Water.FlangeB Steam_LP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[130,-310; 150,-290]);
        Water.FlangeA FromRiser_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[160,-310; 180,-290]);
        Water.FlangeB ToRiser_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[190,-310; 210,-290]);
        Water.FlangeA Feed_LP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[220,-310; 240,-290]);
        Water.FlangeB WaterForLP(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[250,-310; 270,-290]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[280,140; 320,180]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[320,80; 280,120]);
      end DG_3L_tap_wa;
      
      partial model HRSG_2L 
        "Base class for Heat Recovery Steam Generator with two pressure levels" 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        Water.FlangeA WaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[140,-220; 180,-180]);
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-130,160; -70,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-130,130; -70,130; -70,134; -70,134; -72,142; -74,
                  146; -78,152; -84,156; -88,158; -96,160; -100,160; -104,160;
                  -112,158; -116,156; -122,152; -126,146; -128,142; -130,134;
                  -130,130],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[70,160; 130,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[70,130; 130,130; 130,134; 130,134; 128,142; 126,146;
                  122,152; 116,156; 112,158; 104,160; 100,160; 96,160; 88,158;
                  84,156; 78,152; 74,146; 72,142; 70,134; 70,130], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Rectangle(extent=[-200,60; 200,-140], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={215,215,215})),
            Line(points=[-100,60; -100,20; -60,0; -140,-40; -60,-80; -100,-100;
                  -100,-140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[100,60; 100,20; 140,0; 60,-40; 140,-80; 100,-100; 100,
                  -140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1))), Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeB Sh_HP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-140,-220; -100,-180]);
        Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium) 
                          annotation (extent=[-220,-60; -180,-20]);
        Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium) 
                           annotation (extent=[180,-60; 220,-20]);
        Water.FlangeB Sh_LP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-20,-220; 20,-180]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[180,140; 220,180]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[220,80; 180,120]);
      end HRSG_2L;
      
      partial model HRSG_2LRh 
        "Base class for Heat Recovery Steam Generator with two pressure levels and reheat" 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        Water.FlangeA WaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[140,-220; 180,-180]);
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-130,160; -70,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-130,130; -70,130; -70,134; -70,134; -72,142; -74,
                  146; -78,152; -84,156; -88,158; -96,160; -100,160; -104,160;
                  -112,158; -116,156; -122,152; -126,146; -128,142; -130,134;
                  -130,130],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[70,160; 130,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[70,130; 130,130; 130,134; 130,134; 128,142; 126,146;
                  122,152; 116,156; 112,158; 104,160; 100,160; 96,160; 88,158;
                  84,156; 78,152; 74,146; 72,142; 70,134; 70,130], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Rectangle(extent=[-200,60; 200,-140], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={215,215,215})),
            Line(points=[-100,60; -100,20; -60,0; -140,-40; -60,-80; -100,-100;
                  -100,-140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[100,60; 100,20; 140,0; 60,-40; 140,-80; 100,-100; 100,
                  -140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1))), Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeB Sh_HP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-180,-220; -140,-180]);
        Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium) 
                          annotation (extent=[-220,-60; -180,-20]);
        Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium) 
                           annotation (extent=[180,-60; 220,-20]);
        Water.FlangeA Rh_IP_In(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-120,-220; -80,-180]);
        Water.FlangeB Rh_IP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-60,-220; -20,-180]);
        Water.FlangeB Sh_LP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[60,-220; 100,-180]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[180,140; 220,180]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[220,80; 180,120]);
      end HRSG_2LRh;
      
      partial model HRSG_3LRh 
        "Base class for Heat Recovery Steam Generator with three pressure levels and reheat" 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        Water.FlangeA WaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[140,-220; 180,-180]);
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-140,160; -80,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-140,130; -80,130; -80,134; -80,134; -82,142; -84,
                  146; -88,152; -94,156; -98,158; -106,160; -110,160; -114,160;
                  -122,158; -126,156; -132,152; -136,146; -138,142; -140,134;
                  -140,130],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[-30,160; 30,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-30,130; 30,130; 30,134; 30,134; 28,142; 26,146; 22,
                  152; 16,156; 12,158; 4,160; 0,160; -4,160; -12,158; -16,156;
                  -22,152; -26,146; -28,142; -30,134; -30,130], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[80,160; 140,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[80,130; 140,130; 140,134; 140,134; 138,142; 136,146;
                  132,152; 126,156; 122,158; 114,160; 110,160; 106,160; 98,158;
                  94,156; 88,152; 84,146; 82,142; 80,134; 80,130], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Rectangle(extent=[-200,60; 200,-140], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={215,215,215})),
            Line(points=[-110,60; -110,20; -70,0; -150,-40; -70,-80; -110,-100;
                  -110,-140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[0,60; 0,20; 40,0; -40,-40; 40,-80; 0,-100; 0,-140],
                style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[110,60; 110,20; 150,0; 70,-40; 150,-80; 110,-100; 110,
                  -140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1))),
            Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeB Sh_HP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-180,-220; -140,-180]);
        Water.FlangeB Sh_IP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[0,-220; 40,-180]);
        Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium) 
                          annotation (extent=[-220,-60; -180,-20]);
        Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium) 
                           annotation (extent=[180,-60; 220,-20]);
        Water.FlangeA Rh_IP_In(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-120,-220; -80,-180]);
        Water.FlangeB Rh_IP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-60,-220; -20,-180]);
        Water.FlangeB Sh_LP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[60,-220; 100,-180]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[180,140; 220,180]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[220,80; 180,120]);
      end HRSG_3LRh;
      
      partial model HRSG_3LRh_is 
        "Base class for Heat Recovery Steam Generator with three pressure levels and reheat, ideal sourge of water included" 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        ThermoPower.Water.FlangeB Sh_HP_Out(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-180,-220; -140,-180]);
        ThermoPower.Water.FlangeB Sh_IP_Out(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[0,-220; 40,-180]);
        ThermoPower.Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium)
                          annotation (extent=[-220,-60; -180,-20]);
        ThermoPower.Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium)
                           annotation (extent=[180,-60; 220,-20]);
        ThermoPower.Water.FlangeA Rh_IP_In(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-120,-220; -80,-180]);
        ThermoPower.Water.FlangeB Rh_IP_Out(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-60,-220; -20,-180]);
        ThermoPower.Water.FlangeB Sh_LP_Out(redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[60,-220; 100,-180]);
        ThermoPower.PowerPlants.Buses.Sensors SensorsBus 
                              annotation (extent=[180,140; 220,180]);
        ThermoPower.PowerPlants.Buses.Actuators ActuatorsBus 
                                  annotation (extent=[220,80; 180,120]);
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-140,160; -80,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-140,130; -80,130; -80,134; -80,134; -82,142; -84,
                  146; -88,152; -94,156; -98,158; -106,160; -110,160; -114,160;
                  -122,158; -126,156; -132,152; -136,146; -138,142; -140,134;
                  -140,130],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[-30,160; 30,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-30,130; 30,130; 30,134; 30,134; 28,142; 26,146; 22,
                  152; 16,156; 12,158; 4,160; 0,160; -4,160; -12,158; -16,156;
                  -22,152; -26,146; -28,142; -30,134; -30,130], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[80,160; 140,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[80,130; 140,130; 140,134; 140,134; 138,142; 136,146;
                  132,152; 126,156; 122,158; 114,160; 110,160; 106,160; 98,158;
                  94,156; 88,152; 84,146; 82,142; 80,134; 80,130], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Rectangle(extent=[-200,60; 200,-140], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={215,215,215})),
            Line(points=[-110,60; -110,20; -70,0; -150,-40; -70,-80; -110,-100;
                  -110,-140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[0,60; 0,20; 40,0; -40,-40; 40,-80; 0,-100; 0,-140],
                style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[110,60; 110,20; 150,0; 70,-40; 150,-80; 110,-100; 110,
                  -140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1))),
            Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
      end HRSG_3LRh_is;
      
      partial model HRSG_3LRh_tap "Base class for Heat Recovery Steam Generator with three pressure levels,
  reheat and tappings of saturated water for external heater " 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        Water.FlangeA HPsteam_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-170,190; -150,210]);
        Water.FlangeB HPwater_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[-110,190; -90,210]);
        Water.FlangeA IPsteam_In(redeclare package Medium = FluidMedium) 
          annotation (extent=[-50,190; -30,210]);
        Water.FlangeB IPwater_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[12,190; 32,210]);
        Water.FlangeB LPwater_Out(redeclare package Medium = FluidMedium) 
          annotation (extent=[70,190; 90,210]);
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-140,160; -80,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-140,130; -80,130; -80,134; -80,134; -82,142; -84,
                  146; -88,152; -94,156; -98,158; -106,160; -110,160; -114,160;
                  -122,158; -126,156; -132,152; -136,146; -138,142; -140,134;
                  -140,130],
                style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[-30,160; 30,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-30,130; 30,130; 30,134; 30,134; 28,142; 26,146; 22,
                  152; 16,156; 12,158; 4,160; 0,160; -4,160; -12,158; -16,156;
                  -22,152; -26,146; -28,142; -30,134; -30,130], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Ellipse(extent=[80,160; 140,100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[80,130; 140,130; 140,134; 140,134; 138,142; 136,146;
                  132,152; 126,156; 122,158; 114,160; 110,160; 106,160; 98,158;
                  94,156; 88,152; 84,146; 82,142; 80,134; 80,130], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Rectangle(extent=[-200,60; 200,-140], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={215,215,215})),
            Line(points=[-110,60; -110,20; -70,0; -150,-40; -70,-80; -110,-100;
                  -110,-140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[0,60; 0,20; 40,0; -40,-40; 40,-80; 0,-100; 0,-140],
                style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1)),
            Line(points=[110,60; 110,20; 150,0; 70,-40; 150,-80; 110,-100; 110,
                  -140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1))),
            Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeA WaterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[140,-220; 180,-180]);
        Water.FlangeB Sh_HP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-180,-220; -140,-180]);
        Water.FlangeB Sh_IP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[0,-220; 40,-180]);
        Gas.FlangeA GasIn(redeclare package Medium = FlueGasMedium) 
                          annotation (extent=[-220,-60; -180,-20]);
        Gas.FlangeB GasOut(redeclare package Medium = FlueGasMedium) 
                           annotation (extent=[180,-60; 220,-20]);
        Water.FlangeA Rh_IP_In(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-120,-220; -80,-180]);
        Water.FlangeB Rh_IP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-60,-220; -20,-180]);
        Water.FlangeB Sh_LP_Out(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[60,-220; 100,-180]);
        Buses.Sensors SensorsBus 
                              annotation (extent=[180,140; 220,180]);
        Buses.Actuators ActuatorsBus 
                                  annotation (extent=[220,80; 180,120]);
      end HRSG_3LRh_tap;
      
    end Interfaces;
    
    package Components 
      
      model HE "Heat Exchanger fluid - gas" 
        extends Interfaces.HeatExchanger(pstartout_F=fluidNomPressure-dpnom);
        
        parameter SI.CoefficientOfHeatTransfer gamma_G 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F 
          "Constant heat transfer coefficient in the fluid side";
        parameter Choices.Flow1D.FFtypes.Temp FFtype_F=ThermoPower.Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type, fluid side";
        parameter Choices.Flow1D.HCtypes.Temp HCtype_F=ThermoPower.Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance, fluid side";
        parameter Boolean counterCurrent=true "Counter-current flow";
        parameter SI.Pressure dpnom=0 
          "Nominal pressure drop fluid side (friction term only!)";
        parameter SI.Density rhonom=0 "Nominal inlet density fluid side";
        parameter Boolean gasQuasiStatic=false 
          "Quasi-static model of the flue gas (mass, energy and momentum static balances";
        constant Real pi=Modelica.Constants.pi;
        
      Water.Flow1D fluidFlow(
          Nt=1,
          N=N_F,
          wnom=fluidNomFlowRate,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          L=exchSurface_F^2/(fluidVol*pi*4),
          A=(fluidVol*4/exchSurface_F)^2/4*pi,
          omega=fluidVol*4/exchSurface_F*pi,
          Dhyd=fluidVol*4/exchSurface_F,
          pstartin=pstartin_F,
          pstartout=pstartout_F,
          FFtype=FFtype_F,
          dpnom=dpnom,
          rhonom=rhonom,
          HydraulicCapacitance=HCtype_F,
          hstart=hstart_F,
          hstartin=hstart_F_In,
          hstartout=hstart_F_Out) 
                                 annotation (extent=[-10,-60; 10,-40]);
        Thermal.ConvHT convHT(               N=N_F,
          Tstart11=Tstart_M_In,
          Tstart1N=Tstart_M_Out,
          Tstart21=Tstart_F_In,
          Tstart2N=Tstart_F_Out,
          gamma=gamma_F,
          Tstart1=Tstart_M,
          Tstart2=Tstart_F) 
          annotation (extent=[-10,-40; 10,-20]);
        Thermal.MetalTube metalTube(
          rhomcm=rhomcm,
          lambda=lambda,
          N=N_F,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          L=exchSurface_F^2/(fluidVol*pi*4),
          rint=fluidVol*4/exchSurface_F/2,
          Tstart1=Tstart_M_In,
          TstartN=Tstart_M_Out,
          WallRes=false,
          Tstart=Tstart_M,
          rext=(metalVol + fluidVol)*4/extSurfaceTub/2) 
                 annotation (extent=[-10,-6; 10,-26], rotation=0);
        Gas.Flow1D gasFlow(
          L=1,
          Dhyd=1,
          wnom=gasNomFlowRate,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          N=N_G,
          A=gasVol/1,
          omega=exchSurface_G/1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FlueGasMedium,
          QuasiStatic=gasQuasiStatic,
          Tstartin=Tstart_G_In,
          Tstartout=Tstart_G_Out,
          pstart=pstart_G,
          Tstart=Tstart_G)       annotation (extent=[-12,58; 12,38]);
        annotation (Diagram);
        Thermal.CounterCurrent cC(                                    N=N_F,
            counterCurrent=counterCurrent) 
          annotation (extent=[-10,-10; 10,10]);
        Thermal.HeatFlowDistribution heatFlowDistribution(
          N=N_F,
          A1=exchSurface_G,
          A2=extSurfaceTub) 
          annotation (extent=[-10,4; 10,24]);
        Thermal.ConvHT2N convHT2N(
          N1=N_G,
          N2=N_F,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_In,
          Tstart2N=Tstart_M_Out,
          gamma=gamma_G,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M)    annotation (extent=[-10,20; 10,40]);
      equation 
        connect(fluidFlow.wall, convHT.side2) 
                                           annotation (points=[0,-45; 0,-33.1],
            style(color=45, rgbcolor={255,127,0}));
        connect(gasFlow.infl, gasIn) annotation (points=[-12,48; -100,48; -100,
              0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(gasFlow.outfl, gasOut) annotation (points=[12,48; 100,48; 100,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(fluidFlow.outfl, waterOut) 
                                        annotation (points=[10,-50; 40,-50; 40,
              -100; 0,-100],
                           style(thickness=2));
        connect(fluidFlow.infl, waterIn) 
                                      annotation (points=[-10,-50; -40,-50; -40,
              100; 0,100],
                         style(thickness=2));
        connect(heatFlowDistribution.side2, cC.side1) annotation (points=[0,10.9;
              0,3],           style(
            color=45,
            rgbcolor={255,127,0},
            fillPattern=1));
        connect(convHT2N.side1, gasFlow.wall) annotation (points=[0,33; 0,43],
            style(color=45, rgbcolor={255,127,0}));
        connect(heatFlowDistribution.side1, convHT2N.side2) annotation (points=[0,17; 0,
              26.9],          style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.int, convHT.side1) annotation (points=[0,-19; 0,-27],
            style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.ext, cC.side2) annotation (points=[0,-12.9; 0,-3.1],
            style(color=45, rgbcolor={255,127,0}));
      end HE;
      
      model HE2ph "Heat Exchanger fluid - gas (fluid 2-phase)" 
        extends Interfaces.HeatExchanger(pstartout_F=fluidNomPressure-dpnom);
        
        parameter SI.CoefficientOfHeatTransfer gamma_G 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F 
          "Constant heat transfer coefficient in the fluid side";
        parameter Choices.Flow1D.FFtypes.Temp FFtype_F=ThermoPower.Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type, fluid side";
        parameter Choices.Flow1D.HCtypes.Temp HCtype_F=ThermoPower.Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance, fluid side";
        parameter Boolean counterCurrent=true "Counter-current flow";
        parameter SI.Pressure dpnom=0 
          "Nominal pressure drop fluid side (friction term only!)";
        parameter SI.Density rhonom=0 "Nominal inlet density fluid side";
        parameter Boolean gasQuasiStatic=false 
          "Quasi-static model of the flue gas (mass, energy and momentum static balances";
        constant Real pi=Modelica.Constants.pi;
        
      Water.Flow1D2ph fluidFlow(
          Nt=1,
          N=N_F,
          wnom=fluidNomFlowRate,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          L=exchSurface_F^2/(fluidVol*pi*4),
          A=(1/exchSurface_F*fluidVol*4)^2/4*pi,
          omega=1/exchSurface_F*fluidVol*4*pi,
          Dhyd=1/exchSurface_F*fluidVol*4,
          pstartin=pstartin_F,
          pstartout=pstartout_F,
          FFtype=FFtype_F,
          dpnom=dpnom,
          rhonom=rhonom,
          HydraulicCapacitance=HCtype_F,
          hstart=hstart_F,
          hstartin=hstart_F_In,
          hstartout=hstart_F_Out) 
                                 annotation (extent=[-10,-58; 10,-38]);
        Thermal.ConvHT convHT(gamma=gamma_F, N=N_F,
          Tstart11=Tstart_M_In,
          Tstart1N=Tstart_M_Out,
          Tstart21=Tstart_F_In,
          Tstart2N=Tstart_F_Out,
          Tstart1=Tstart_M,
          Tstart2=Tstart_F) 
          annotation (extent=[-10,-40; 10,-20]);
        Thermal.MetalTube metalTube(
          rhomcm=rhomcm,
          lambda=lambda,
          N=N_F,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          L=exchSurface_F^2/(fluidVol*pi*4),
          rint=1/exchSurface_F*fluidVol*4/2,
          Tstart1=Tstart_M_In,
          TstartN=Tstart_M_Out,
          WallRes=false,
          Tstart=Tstart_M,
          rext=1/extSurfaceTub*(metalVol + fluidVol)*4/2) 
                 annotation (extent=[-10,-8; 10,-28]);
        Gas.Flow1D gasFlow(
          L=1,
          Dhyd=1,
          wnom=gasNomFlowRate,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          N=N_G,
          A=gasVol/1,
          omega=exchSurface_G/1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FlueGasMedium,
          pstart=pstart_G,
          Tstartin=Tstart_G_In,
          Tstartout=Tstart_G_Out,
          Tstart=Tstart_G,
          QuasiStatic=gasQuasiStatic) 
                                 annotation (extent=[-12,58; 12,38]);
        annotation (Diagram);
        Thermal.CounterCurrent cC(     counterCurrent=counterCurrent, N=N_F) 
          annotation (extent=[-10,-10; 10,10]);
        Thermal.HeatFlowDistribution heatFlowDistribution(
          N=N_F,
          A1=exchSurface_G,
          A2=extSurfaceTub) 
          annotation (extent=[-10,6; 10,26]);
        Thermal.ConvHT2N convHT2N(
          N1=N_G,
          N2=N_F,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_In,
          Tstart2N=Tstart_M_Out,
          gamma=gamma_G,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M)    annotation (extent=[-10,22; 10,42]);
      equation 
        connect(fluidFlow.wall, convHT.side2) 
                                           annotation (points=[0,-43; 0,-33.1],
            style(color=45, rgbcolor={255,127,0}));
        connect(gasFlow.infl, gasIn) annotation (points=[-12,48; -100,48; -100,
              0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(gasFlow.outfl, gasOut) annotation (points=[12,48; 100,48; 100,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(fluidFlow.outfl, waterOut) 
                                        annotation (points=[10,-48; 40,-48; 40,
              -100; 0,-100],
                           style(thickness=2));
        connect(fluidFlow.infl, waterIn) 
                                      annotation (points=[-10,-48; -40,-48; -40,
              100; 0,100],
                         style(thickness=2));
        connect(heatFlowDistribution.side2,cC. side1) annotation (points=[0,12.9;
              0,3],           style(
            color=45,
            rgbcolor={255,127,0},
            fillPattern=1));
        connect(convHT2N.side1,gasFlow. wall) annotation (points=[0,35; 0,43],
            style(color=45, rgbcolor={255,127,0}));
        connect(convHT2N.side2, heatFlowDistribution.side1) annotation (points=[0,28.9;
              0,19],          style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.int, convHT.side1) annotation (points=[0,-21; 0,-27],
            style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.ext, cC.side2) annotation (points=[0,-14.9; 0,-3.1],
            style(color=45, rgbcolor={255,127,0}));
      end HE2ph;
      
      model ParHE "Parallel heat exchangers fluid - gas" 
        extends Interfaces.ParallelHE(pstartout_F_A=fluidNomPressure_A-dpnom_A,
                                      pstartout_F_B=fluidNomPressure_B-dpnom_B);
        
        parameter SI.CoefficientOfHeatTransfer gamma_G_A 
          "Constant heat transfer coefficient in the gas side"     annotation (Dialog(group = "side A"));
        parameter SI.CoefficientOfHeatTransfer gamma_G_B 
          "Constant heat transfer coefficient in the gas side"     annotation (Dialog(group = "side B"));
        parameter SI.CoefficientOfHeatTransfer gamma_F_A 
          "Constant heat transfer coefficient in the fluid side"     annotation (Dialog(group = "side A"));
        parameter SI.CoefficientOfHeatTransfer gamma_F_B 
          "Constant heat transfer coefficient in the fluid side"     annotation (Dialog(group = "side B"));
        parameter Choices.Flow1D.FFtypes.Temp FFtype_F_A=ThermoPower.Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type, fluid side"     annotation (Dialog(group = "side A"));
        parameter Choices.Flow1D.FFtypes.Temp FFtype_F_B=ThermoPower.Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type, fluid side"     annotation (Dialog(group = "side B"));
        parameter Choices.Flow1D.HCtypes.Temp HCtype_F_A=ThermoPower.Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance, fluid side"     annotation (Dialog(group = "side A"));
        parameter Choices.Flow1D.HCtypes.Temp HCtype_F_B=ThermoPower.Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance, fluid side"     annotation (Dialog(group = "side B"));
        parameter Boolean counterCurrent_A = true "Counter-current flow"     annotation (Dialog(group = "side A"));
        parameter Boolean counterCurrent_B = true "Counter-current flow"     annotation (Dialog(group = "side B"));
        parameter SI.Pressure dpnom_A=0 
          "Nominal pressure drop fluid side (friction term only!)"     annotation (Dialog(group = "side A"));
        parameter SI.Pressure dpnom_B=0 
          "Nominal pressure drop fluid side (friction term only!)"     annotation (Dialog(group = "side B"));
        parameter SI.Density rhonom_A=0 "Nominal inlet density fluid side"     annotation (Dialog(group = "side A"));
        parameter SI.Density rhonom_B=0 "Nominal inlet density fluid side"     annotation (Dialog(group = "side B"));
        parameter Boolean gasQuasiStatic=false 
          "Quasi-static model of the flue gas (mass, energy and momentum static balances";
        constant Real pi=Modelica.Constants.pi;
        
        ConvParallel convParallel(
          N=N_G,
          As=exchSurface_G_A + exchSurface_G_B,
          Aa=exchSurface_G_A,
          Ab=exchSurface_G_B) 
                             annotation (extent=[-10,12; 10,32]);
        annotation (Diagram);
      Water.Flow1D fluidAFlow(
          Nt=1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          N=N_F_A,
          L=exchSurface_F_A^2/(fluidVol_A*pi*4),
          A=(fluidVol_A*4/exchSurface_F_A)^2/4*pi,
          omega=fluidVol_A*4/exchSurface_F_A*pi,
          Dhyd=fluidVol_A*4/exchSurface_F_A,
          pstartin=pstartin_F_A,
          pstartout=pstartout_F_A,
          hstart=hstart_F_A,
          wnom=fluidNomFlowRate_A,
          FFtype=FFtype_F_A,
          dpnom=dpnom_A,
          rhonom=rhonom_A,
          HydraulicCapacitance=HCtype_F_A,
          hstartin=hstart_F_A_In,
          hstartout=hstart_F_A_Out) 
                                 annotation (extent=[-38,-56; -18,-36]);
        Thermal.ConvHT convHT_A(
          N=N_F_A,
          gamma=gamma_F_A,
          Tstart11=Tstart_M_A_In,
          Tstart1N=Tstart_M_A_Out,
          Tstart21=Tstart_F_A_In,
          Tstart2N=Tstart_F_A_Out,
          Tstart1=Tstart_M_A,
          Tstart2=Tstart_F_A) 
          annotation (extent=[-38,-38; -18,-18]);
        Thermal.MetalTube metalTube_A(
          lambda=lambda,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          N=N_F_A,
          L=exchSurface_F_A^2/(fluidVol_A*pi*4),
          rint=fluidVol_A*4/exchSurface_F_A/2,
          Tstart1=Tstart_M_A_In,
          TstartN=Tstart_M_A_Out,
          WallRes=false,
          Tstart=Tstart_M_A,
          rext=(metalVol_A + fluidVol_A)*4/extSurfaceTub_A/2,
          rhomcm=rhomcm_A) 
                 annotation (extent=[-38,-6; -18,-26]);
        Gas.Flow1D gasFlow(
          L=1,
          Dhyd=1,
          wnom=gasNomFlowRate,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          N=N_G,
          A=gasVol/1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FlueGasMedium,
          omega=(exchSurface_G_A + exchSurface_G_B)/1,
          QuasiStatic=gasQuasiStatic,
          pstart=pstart_G,
          Tstartin=Tstart_G_In,
          Tstartout=Tstart_G_Out,
          Tstart=Tstart_G)       annotation (extent=[-12,60; 12,40]);
      Water.Flow1D fluidBFlow(
          Nt=1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          N=N_F_B,
          L=exchSurface_F_B^2/(fluidVol_B*pi*4),
          A=(fluidVol_B*4/exchSurface_F_B)^2/4*pi,
          omega=fluidVol_B*4/exchSurface_F_B*pi,
          Dhyd=fluidVol_B*4/exchSurface_F_B,
          wnom=fluidNomFlowRate_B,
          pstartin=pstartin_F_B,
          pstartout=pstartout_F_B,
          hstart=hstart_F_B,
          FFtype=FFtype_F_B,
          dpnom=dpnom_B,
          rhonom=rhonom_B,
          HydraulicCapacitance=HCtype_F_B,
          hstartin=hstart_F_B_In,
          hstartout=hstart_F_B_Out) 
                                 annotation (extent=[38,-56; 18,-36]);
        Thermal.ConvHT convHT_B(
          N=N_F_B,
          gamma=gamma_F_B,
          Tstart11=Tstart_M_B_In,
          Tstart1N=Tstart_M_B_Out,
          Tstart21=Tstart_F_B_In,
          Tstart2N=Tstart_F_B_Out,
          Tstart1=Tstart_M_B,
          Tstart2=Tstart_F_B) 
          annotation (extent=[18,-38; 38,-18]);
        Thermal.MetalTube metalTube_B(
          lambda=lambda,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          L=exchSurface_F_B^2/(fluidVol_B*pi*4),
          rint=fluidVol_B*4/exchSurface_F_B/2,
          N=N_F_B,
          Tstart1=Tstart_M_B_In,
          TstartN=Tstart_M_B_Out,
          WallRes=false,
          Tstart=Tstart_M_B,
          rext=(metalVol_B + fluidVol_B)*4/extSurfaceTub_B/2,
          rhomcm=rhomcm_B) 
                 annotation (extent=[18,-6; 38,-26]);
        Thermal.CounterCurrent cC_A(N=N_F_A, counterCurrent=counterCurrent_A) 
          annotation (extent=[-38,-8; -18,12]);
        Thermal.HeatFlowDistribution heatFlowDistribution_A(
          N=N_F_A,
          A1=exchSurface_G_A,
          A2=extSurfaceTub_A) 
          annotation (extent=[-38,8; -18,28]);
        Thermal.CounterCurrent cC_B(N=N_F_B, counterCurrent=counterCurrent_B) 
          annotation (extent=[18,-8; 38,12]);
        Thermal.HeatFlowDistribution heatFlowDistribution_B(
          N=N_F_B,
          A1=exchSurface_G_B,
          A2=extSurfaceTub_B) 
          annotation (extent=[18,8; 38,28]);
        Thermal.ConvHT2N convHT2N_A(
          N1=N_G,
          N2=N_F_A,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_A_In,
          Tstart2N=Tstart_M_A_Out,
          gamma=gamma_G_A,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M_A)    annotation (extent=[-38,24; -18,44]);
        Thermal.ConvHT2N convHT2N_B(
          N1=N_G,
          N2=N_F_B,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_B_In,
          Tstart2N=Tstart_M_B_Out,
          gamma=gamma_G_B,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M_B)    annotation (extent=[18,24; 38,44]);
      equation 
        connect(heatFlowDistribution_A.side2, cC_A.side1) annotation (points=[-28,14.9;
              -28,5],           style(color=45, rgbcolor={255,127,0}));
        connect(convHT_A.side2, fluidAFlow.wall)    annotation (points=[-28,
              -31.1; -28,-41], style(color=45, rgbcolor={255,127,0}));
        connect(heatFlowDistribution_B.side2, cC_B.side1) annotation (points=[28,14.9;
              28,5],          style(color=45, rgbcolor={255,127,0}));
        connect(convHT_B.side2, fluidBFlow.wall)    annotation (points=[28,-31.1;
              28,-41],        style(color=45, rgbcolor={255,127,0}));
        connect(fluidBFlow.outfl, waterOutB)    annotation (points=[18,-46; 8,
              -46; 8,-100; 40,-100],
                                   style(thickness=2));
        connect(fluidAFlow.outfl, waterOutA)    annotation (points=[-18,-46; -8,
              -46; -8,-100; -40,-100],
                                     style(thickness=2));
        connect(fluidAFlow.infl, waterInA)    annotation (points=[-38,-46; -50,
              -46; -50,100; -40,100],
                                    style(thickness=2));
        connect(fluidBFlow.infl, waterInB)    annotation (points=[38,-46; 52,
              -46; 52,100; 40,100],
                                  style(thickness=2));
        connect(gasFlow.outfl, gasOut)   annotation (points=[12,50; 100,50; 100,
              0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(gasFlow.infl, gasIn)   annotation (points=[-12,50; -100,50;
              -100,0],
                  style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(convParallel.source, gasFlow.wall)   annotation (points=[0,29; 0,
              45],   style(color=45, rgbcolor={255,127,0}));
        connect(heatFlowDistribution_A.side1, convHT2N_A.side2) 
                                                              annotation (
            points=[-28,21; -28,30.9], style(color=45, rgbcolor={255,127,0}));
        connect(convHT2N_A.side1, convParallel.objectA) 
                                                      annotation (points=[-28,37;
              -28,42; -14,42; -14,4; -6,4; -6,19],     style(color=45, rgbcolor=
               {255,127,0}));
        connect(convHT2N_B.side2, heatFlowDistribution_B.side1) 
                                                               annotation (
            points=[28,30.9; 28,21], style(color=45, rgbcolor={255,127,0}));
        connect(convHT2N_B.side1, convParallel.objectB) 
                                                       annotation (points=[28,37;
              28,42; 16,42; 16,4; 6,4; 6,19],           style(color=45,
              rgbcolor={255,127,0}));
        connect(metalTube_B.ext, cC_B.side2) annotation (points=[28,-12.9; 28,
              -1.1], style(color=45, rgbcolor={255,127,0}));
        connect(metalTube_B.int, convHT_B.side1) annotation (points=[28,-19; 28,
              -25], style(color=45, rgbcolor={255,127,0}));
        connect(metalTube_A.int, convHT_A.side1) annotation (points=[-28,-19;
              -28,-25], style(color=45, rgbcolor={255,127,0}));
        connect(metalTube_A.ext, cC_A.side2) annotation (points=[-28,-12.9; -28,
              -1.1], style(color=45, rgbcolor={255,127,0}));
      end ParHE;
      
      model ParHE_att 
        "Parallel Heat Exchanger (two fluid with one gas) with attemperation" 
        extends Interfaces.ParallelHE_Att;
        
        parameter SI.CoefficientOfHeatTransfer gamma_G_A_p1 
          "Constant heat transfer coefficient in the gas side"            annotation (Dialog(tab = "pHE-1", group = "side A"));
        parameter SI.CoefficientOfHeatTransfer gamma_G_B_p1 
          "Constant heat transfer coefficient in the gas side"            annotation (Dialog(tab = "pHE-1", group = "side B"));
        parameter SI.CoefficientOfHeatTransfer gamma_F_A_p1 
          "Constant heat transfer coefficient in the fluid side"            annotation (Dialog(tab = "pHE-1", group = "side A"));
        parameter SI.CoefficientOfHeatTransfer gamma_F_B_p1 
          "Constant heat transfer coefficient in the fluid side"            annotation (Dialog(tab = "pHE-1", group = "side B"));
        parameter Choices.Flow1D.FFtypes.Temp FFtype_F_A_p1=ThermoPower.Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type, fluid side"            annotation (Dialog(tab = "pHE-1", group = "side A"));
        parameter Choices.Flow1D.FFtypes.Temp FFtype_F_B_p1=ThermoPower.Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type, fluid side"            annotation (Dialog(tab = "pHE-1", group = "side B"));
        parameter Choices.Flow1D.HCtypes.Temp HCtype_F_A_p1=ThermoPower.Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance, fluid side"            annotation (Dialog(tab = "pHE-1", group = "side A"));
        parameter Choices.Flow1D.HCtypes.Temp HCtype_F_B_p1=ThermoPower.Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance, fluid side"            annotation (Dialog(tab = "pHE-1", group = "side B"));
        parameter Boolean counterCurrent_A_p1 = true "Counter-current flow" 
                                            annotation (Dialog(tab = "pHE-1", group = "side A"));
        parameter Boolean counterCurrent_B_p1 = true "Counter-current flow" 
                                            annotation (Dialog(tab = "pHE-1", group = "side B"));
        parameter SI.Pressure dpnom_A_p1=0 
          "Nominal pressure drop fluid side(friction term only!)"            annotation (Dialog(tab = "pHE-1", group = "side A"));
        parameter SI.Pressure dpnom_B_p1=0 
          "Nominal pressure drop fluid side(friction term only!)"            annotation (Dialog(tab = "pHE-1", group = "side B"));
        parameter SI.Density rhonom_A_p1=0 "Nominal inlet density fluid side" 
                                                        annotation (Dialog(tab = "pHE-1", group = "side A"));
        parameter SI.Density rhonom_B_p1=0 "Nominal inlet density fluid side" 
                                                        annotation (Dialog(tab = "pHE-1", group = "side B"));
        parameter SI.CoefficientOfHeatTransfer gamma_G_A_p2 
          "Constant heat transfer coefficient in the gas side"            annotation (Dialog(tab = "pHE-2", group = "side A"));
        parameter SI.CoefficientOfHeatTransfer gamma_G_B_p2 
          "Constant heat transfer coefficient in the gas side"            annotation (Dialog(tab = "pHE-2", group = "side B"));
        parameter SI.CoefficientOfHeatTransfer gamma_F_A_p2 
          "Constant heat transfer coefficient in the fluid side"            annotation (Dialog(tab = "pHE-2", group = "side A"));
        parameter SI.CoefficientOfHeatTransfer gamma_F_B_p2 
          "Constant heat transfer coefficient in the fluid side"            annotation (Dialog(tab = "pHE-2", group = "side B"));
        parameter Choices.Flow1D.FFtypes.Temp FFtype_F_A_p2=ThermoPower.Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type, fluid side"            annotation (Dialog(tab = "pHE-2", group = "side A"));
        parameter Choices.Flow1D.FFtypes.Temp FFtype_F_B_p2=ThermoPower.Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type, fluid side"            annotation (Dialog(tab = "pHE-2", group = "side B"));
        parameter Choices.Flow1D.HCtypes.Temp HCtype_F_A_p2=ThermoPower.Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance, fluid side"            annotation (Dialog(tab = "pHE-2", group = "side A"));
        parameter Choices.Flow1D.HCtypes.Temp HCtype_F_B_p2=ThermoPower.Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance, fluid side"            annotation (Dialog(tab = "pHE-2", group = "side B"));
        parameter Boolean counterCurrent_A_p2 = true "Counter-current flow" 
                                            annotation (Dialog(tab = "pHE-2", group = "side A"));
        parameter Boolean counterCurrent_B_p2 = true "Counter-current flow" 
                                            annotation (Dialog(tab = "pHE-2", group = "side B"));
        parameter SI.Pressure dpnom_A_p2=0 
          "Nominal pressure drop fluid side (friction term only!)"            annotation (Dialog(tab = "pHE-2", group = "side A"));
        parameter SI.Pressure dpnom_B_p2=0 
          "Nominal pressure drop fluid side (friction term only!)"            annotation (Dialog(tab = "pHE-2", group = "side B"));
        parameter SI.Density rhonom_A_p2=0 "Nominal inlet density fluid side" 
                                                        annotation (Dialog(tab = "pHE-2", group = "side A"));
        parameter SI.Density rhonom_B_p2=0 "Nominal inlet density fluid side" 
                                                        annotation (Dialog(tab = "pHE-2", group = "side B"));
        parameter Boolean gasQuasiStatic=false 
          "Quasi-static model of the flue gas (mass, energy and momentum static balances";
        constant Real pi=Modelica.Constants.pi;
        
        //Valves parameters
        parameter Real Cv_valA "Cv (US) flow coefficient, valve A" annotation (Dialog(group = "Attemperation A"));
        parameter SI.Pressure pnom_valA "Nominal inlet pressure, valve A" annotation (Dialog(group = "Attemperation A"));
        parameter SI.Pressure dpnom_valA "Nominal pressure drop, valve A" annotation (Dialog(group = "Attemperation A"));
        parameter SI.MassFlowRate wnom_valA "Nominal mass flowrate, valve A" annotation (Dialog(group = "Attemperation A"));
        parameter SI.SpecificEnthalpy hstart_valA=1e5 
          "Specific enthalpy start value, valve A" annotation (Dialog(group = "Attemperation A"));
        parameter Real Cv_valB "Cv (US) flow coefficient, valve B" annotation (Dialog(group = "Attemperation B"));
        parameter SI.Pressure pnom_valB "Nominal inlet pressure, valve B" annotation (Dialog(group = "Attemperation B"));
        parameter SI.Pressure dpnom_valB "Nominal pressure drop, valve B" annotation (Dialog(group = "Attemperation B"));
        parameter SI.MassFlowRate wnom_valB "Nominal mass flowrate, valve B" annotation (Dialog(group = "Attemperation B"));
        parameter SI.SpecificEnthalpy hstart_valB=1e5 
          "Specific enthalpy start value, valve B" annotation (Dialog(group = "Attemperation B"));
        
        ParHE pHE1(
          redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=N_G_p1,
          N_F_A=N_F_A_p1,
          N_F_B=N_F_B_p1,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate_A=fluidNomFlowRate_A,
          fluidNomFlowRate_B=fluidNomFlowRate_B,
          gasNomPressure=gasNomPressure,
          fluidNomPressure_A=fluidNomPressure_A,
          fluidNomPressure_B=fluidNomPressure_B,
          exchSurface_G_A=exchSurface_G_A_p1,
          exchSurface_G_B=exchSurface_G_B_p1,
          exchSurface_F_A=exchSurface_F_A_p1,
          exchSurface_F_B=exchSurface_F_B_p1,
          gasVol=gasVol_p1,
          fluidVol_A=fluidVol_A_p1,
          fluidVol_B=fluidVol_B_p1,
          metalVol_A=metalVol_A_p1,
          metalVol_B=metalVol_B_p1,
          gamma_G_A=gamma_G_A_p1,
          gamma_G_B=gamma_G_B_p1,
          gamma_F_A=gamma_F_A_p1,
          gamma_F_B=gamma_F_B_p1,
          FFtype_F_A=FFtype_F_A_p1,
          FFtype_F_B=FFtype_F_B_p1,
          HCtype_F_A=HCtype_F_A_p1,
          HCtype_F_B=HCtype_F_B_p1,
          counterCurrent_A=counterCurrent_A_p1,
          counterCurrent_B=counterCurrent_B_p1,
          dpnom_A=dpnom_A_p1,
          dpnom_B=dpnom_B_p1,
          rhonom_A=rhonom_A_p1,
          rhonom_B=rhonom_B_p1,
          gasQuasiStatic=gasQuasiStatic,
          lambda=lambda,
          extSurfaceTub_A=extSurfaceTub_A_p1,
          extSurfaceTub_B=extSurfaceTub_B_p1,
          use_T=use_T,
          SSInit=SSInit,
          Tstart_G_In=Tstart_G_In_p1,
          Tstart_G_Out=Tstart_G_Out_p1,
          Tstart_M_A_In=Tstart_M_A_In_p1,
          Tstart_M_A_Out=Tstart_M_A_Out_p1,
          Tstart_M_A=Tstart_M_A_p1,
          Tstart_F_A_In=Tstart_F_A_In_p1,
          Tstart_F_A_Out=Tstart_F_A_Out_p1,
          Tstart_F_A=Tstart_F_A_p1,
          hstart_F_A_In=hstart_F_A_In_p1,
          hstart_F_A_Out=hstart_F_A_Out_p1,
          hstart_F_A=hstart_F_A_p1,
          Tstart_M_B_In=Tstart_M_B_In_p1,
          Tstart_M_B_Out=Tstart_M_B_Out_p1,
          Tstart_F_B_In=Tstart_F_B_In_p1,
          Tstart_F_B=Tstart_F_B_p1,
          hstart_F_B_In=hstart_F_B_In_p1,
          hstart_F_B_Out=hstart_F_B_Out_p1,
          hstart_F_B=hstart_F_B_p1,
          pstart_G=pstart_G_p1,
          pstartin_F_A=pstartin_F_A_p1,
          pstartout_F_A=pstartout_F_A_p1,
          pstartin_F_B=pstartin_F_B_p1,
          pstartout_F_B=pstartout_F_B_p1,
          rhomcm_A=rhomcm_A_p1,
          rhomcm_B=rhomcm_B_p1,
          Tstart_M_B=Tstart_M_B_p1,
          Tstart_F_B_Out=Tstart_F_B_Out_p1) 
          annotation (extent=[-46,28; -26,48]);
        annotation (Diagram);
        Water.ValveLiq valveA(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=Cv_valA,
          pnom=pnom_valA,
          dpnom=dpnom_valA,
          wnom=wnom_valA,
          CheckValve=true,
          hstart=hstart_valA)  annotation (extent=[-18,-32; -34,-16],
                                                                  rotation=180);
        Water.ValveLiq valveB(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=Cv_valB,
          pnom=pnom_valB,
          dpnom=dpnom_valB,
          wnom=wnom_valB,
          CheckValve=true,
          hstart=hstart_valB) annotation (extent=[-18,-2; -34,14],
                                                                 rotation=180);
        Water.FlowJoin flowJoinA(
          redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_in2=false,
          rev_out=false)        annotation (extent=[-10,-18; 10,2],
                                                                  rotation=0);
        Water.FlowJoin flowJoinB(redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_in2=false,
          rev_out=false) 
          annotation (extent=[-10,6; 10,26], rotation=0);
        Water.FlowSplit flowSplit(redeclare package Medium = FluidMedium) 
          annotation (extent=[-66,-30; -46,-10],
                                             rotation=0);
        ParHE pHE2(
          redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=N_G_p2,
          N_F_A=N_F_A_p2,
          N_F_B=N_F_B_p2,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate_A=fluidNomFlowRate_A,
          fluidNomFlowRate_B=fluidNomFlowRate_B,
          gasNomPressure=gasNomPressure,
          fluidNomPressure_A=fluidNomPressure_A,
          fluidNomPressure_B=fluidNomPressure_B,
          exchSurface_G_A=exchSurface_G_A_p2,
          exchSurface_G_B=exchSurface_G_B_p2,
          exchSurface_F_A=exchSurface_F_A_p2,
          exchSurface_F_B=exchSurface_F_B_p2,
          gasVol=gasVol_p2,
          fluidVol_A=fluidVol_A_p2,
          fluidVol_B=fluidVol_B_p2,
          metalVol_A=metalVol_A_p2,
          metalVol_B=metalVol_B_p2,
          gamma_G_A=gamma_G_A_p2,
          gamma_G_B=gamma_G_B_p2,
          gamma_F_A=gamma_F_A_p2,
          gamma_F_B=gamma_F_B_p2,
          FFtype_F_A=FFtype_F_A_p2,
          FFtype_F_B=FFtype_F_B_p2,
          HCtype_F_A=HCtype_F_A_p2,
          HCtype_F_B=HCtype_F_B_p2,
          counterCurrent_A=counterCurrent_A_p2,
          counterCurrent_B=counterCurrent_B_p2,
          dpnom_A=dpnom_A_p2,
          dpnom_B=dpnom_B_p2,
          rhonom_A=rhonom_A_p2,
          rhonom_B=rhonom_B_p2,
          gasQuasiStatic=gasQuasiStatic,
          lambda=lambda,
          extSurfaceTub_A=extSurfaceTub_A_p2,
          extSurfaceTub_B=extSurfaceTub_B_p2,
          use_T=use_T,
          SSInit=SSInit,
          Tstart_G_In=Tstart_G_In_p2,
          Tstart_G_Out=Tstart_G_Out_p2,
          Tstart_M_A_In=Tstart_M_A_In_p2,
          Tstart_M_A_Out=Tstart_M_A_Out_p2,
          Tstart_M_A=Tstart_M_A_p2,
          Tstart_F_A_In=Tstart_F_A_In_p2,
          Tstart_F_A_Out=Tstart_F_A_Out_p2,
          Tstart_F_A=Tstart_F_A_p2,
          hstart_F_A_In=hstart_F_A_In_p2,
          hstart_F_A_Out=hstart_F_A_Out_p2,
          hstart_F_A=hstart_F_A_p2,
          Tstart_M_B_In=Tstart_M_B_In_p2,
          Tstart_M_B_Out=Tstart_M_B_Out_p2,
          Tstart_F_B_In=Tstart_F_B_In_p2,
          Tstart_F_B=Tstart_F_B_p2,
          hstart_F_B_In=hstart_F_B_In_p2,
          hstart_F_B_Out=hstart_F_B_Out_p2,
          hstart_F_B=hstart_F_B_p2,
          pstart_G=pstart_G_p2,
          pstartin_F_A=pstartin_F_A_p2,
          pstartout_F_A=pstartout_F_A_p2,
          pstartin_F_B=pstartin_F_B_p2,
          pstartout_F_B=pstartout_F_B_p2,
          rhomcm_A=rhomcm_A_p2,
          rhomcm_B=rhomcm_B_p2,
          Tstart_M_B=Tstart_M_B_p2,
          Tstart_F_B_Out=Tstart_F_B_Out_p2) 
          annotation (extent=[26,-36; 46,-16], style(thickness=2));
        Water.SensT intermediate_B(redeclare package Medium = FluidMedium) 
          annotation (extent=[16,12; 30,26]);
        Water.SensT intermediate_A(redeclare package Medium = FluidMedium) 
          annotation (extent=[16,-12; 30,2]);
      equation 
        connect(pHE1.waterInB, waterInB)  annotation (points=[-32,48; -32,54;
              12,54; 12,100; 40,100],
                                    style(thickness=2));
        connect(pHE1.waterInA, waterInA) 
          annotation (points=[-40,48; -40,100],style(thickness=2));
        connect(pHE1.gasIn, gasIn)  annotation (points=[-46,38; -100,38; -100,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(pHE2.gasOut, gasOut) annotation (points=[46,-26; 100,-26; 100,0],
                                                                                style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(pHE2.gasIn, pHE1.gasOut) annotation (points=[26,-26; 14,-26; 14,
              38; -26,38],
                   style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(flowSplit.out2, valveA.inlet)  annotation (points=[-50,-24; -34,
              -24],                                                                   style(
            thickness=2,
            fillColor=62,
            rgbfillColor={0,127,127},
            fillPattern=1));
        connect(valveA.outlet, flowJoinA.in2) annotation (points=[-18,-24; -14,
              -24; -14,-12; -6,-12],                                               style(
            thickness=2,
            fillColor=62,
            rgbfillColor={0,127,127},
            fillPattern=1));
        connect(flowJoinA.in1, pHE1.waterOutA) 
                                              annotation (points=[-6,-4; -14,-4;
              -14,16; -40,16; -40,28],
                       style(
            thickness=2,
            fillColor=62,
            rgbfillColor={0,127,127},
            fillPattern=1));
        connect(flowJoinB.in1, pHE1.waterOutB) annotation (points=[-6,20; -32,
              20; -32,28],            style(
            thickness=2,
            fillColor=62,
            rgbfillColor={0,127,127},
            fillPattern=1));
        connect(valveB.outlet,flowJoinB. in2) annotation (points=[-18,6; -10,6;
              -10,12; -6,12],      style(
            thickness=2,
            fillColor=62,
            rgbfillColor={0,127,127},
            fillPattern=1));
        connect(valveB.inlet, flowSplit.out1) annotation (points=[-34,6; -42,6;
              -42,-15.8; -50,-15.8],      style(
            thickness=2,
            fillColor=62,
            rgbfillColor={0,127,127},
            fillPattern=1));
        connect(LiquidWaterIn, flowSplit.in1) annotation (points=[-100,-42; -66,
              -42; -66,-20; -62,-20],                   style(
            thickness=2,
            fillColor=62,
            rgbfillColor={0,127,127},
            fillPattern=1));
        connect(intermediate_A.outlet, pHE2.waterInA) 
          annotation (points=[27.2,-7.8; 32,-7.8; 32,-16], style(thickness=2));
        connect(intermediate_A.inlet, flowJoinA.out) 
          annotation (points=[18.8,-7.8; 18.8,-8; 6,-8], style(thickness=2));
        connect(intermediate_B.inlet,flowJoinB. out) annotation (points=[18.8,
              16.2; 19.4,16.2; 19.4,16; 6,16], style(thickness=2));
        connect(intermediate_B.outlet, pHE2.waterInB) annotation (points=[27.2,
              16.2; 27.2,16; 40,16; 40,-16], style(thickness=2));
        connect(waterOutB, pHE2.waterOutB) 
          annotation (points=[40,-100; 40,-36],style(thickness=2));
        connect(pHE2.waterOutA, waterOutA) annotation (points=[32,-36; 32,-50;
              -40,-50; -40,-100],style(thickness=2));
        connect(T_intermedB, intermediate_B.T) annotation (points=[101,39; 40,
              39; 40,23.2; 28.6,23.2],
                                   style(color=74, rgbcolor={0,0,127}));
        connect(intermediate_A.T, T_intermedA) annotation (points=[28.6,-0.8;
              52,-0.8; 52,59; 101,59],style(color=74, rgbcolor={0,0,127}));
        connect(theta_valveA, valveA.theta)  annotation (points=[101,-42; -26,
              -42; -26,-30.4], style(color=74, rgbcolor={0,0,127}));
        connect(theta_valveB, valveB.theta) annotation (points=[101,-63; 60,-63;
              60,-46; -36,-46; -36,-10; -26,-10; -26,-0.4], style(color=74,
              rgbcolor={0,0,127}));
      end ParHE_att;
      
      model HE_simp "Simplified Heat Exchanger fluid - gas" 
        extends Interfaces.HeatExchanger(extSurfaceTub = exchSurface_G);
        
        parameter SI.CoefficientOfHeatTransfer gamma_G 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F 
          "Constant heat transfer coefficient in the fluid side";
        constant Real pi=Modelica.Constants.pi;
        
      Water.Flow1D fluidFlow(
          Nt=1,
          N=N_F,
          wnom=fluidNomFlowRate,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          L=exchSurface_F^2/(fluidVol*pi*4),
          A=(fluidVol*4/exchSurface_F)^2/4*pi,
          omega=fluidVol*4/exchSurface_F*pi,
          Dhyd=fluidVol*4/exchSurface_F,
          pstartin=pstartin_F,
          pstartout=pstartout_F,
          hstart=hstart_F,
          hstartin=hstart_F_In,
          hstartout=hstart_F_Out) 
                                 annotation (extent=[-10,-50; 10,-30]);
        Thermal.ConvHT convHT(gamma=gamma_F, N=N_F,
          Tstart11=Tstart_M_In,
          Tstart1N=Tstart_M_Out,
          Tstart21=Tstart_F_In,
          Tstart2N=Tstart_F_Out,
          Tstart1=Tstart_M,
          Tstart2=Tstart_F) 
          annotation (extent=[-10,-30; 10,-10]);
        Thermal.MetalTube metalTube(
          rhomcm=rhomcm,
          lambda=lambda,
          N=N_F,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          L=exchSurface_F^2/(fluidVol*pi*4),
          rint=fluidVol*4/exchSurface_F/2,
          Tstart1=Tstart_M_In,
          TstartN=Tstart_M_Out,
          WallRes=false,
          Tstart=Tstart_M,
          rext=(metalVol + fluidVol)*4/extSurfaceTub/2) 
                 annotation (extent=[-10,10; 10,-10]);
        Gas.Flow1D gasFlow(
          L=1,
          Dhyd=1,
          wnom=gasNomFlowRate,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          QuasiStatic=true,
          N=N_G,
          A=gasVol/1,
          omega=exchSurface_G/1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FlueGasMedium,
          Tstartin=Tstart_G_In,
          Tstartout=Tstart_G_Out,
          pstart=pstart_G,
          Tstart=Tstart_G)       annotation (extent=[-12,50; 12,30]);
        annotation (Diagram);
        Thermal.ConvHT2N convHT2N(
          N1=N_G,
          N2=N_F,
          gamma=gamma_G,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_In,
          Tstart2N=Tstart_M_Out,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M)    annotation (extent=[-10,10; 10,30]);
      equation 
        connect(fluidFlow.wall, convHT.side2) 
                                           annotation (points=[0,-35; 0,-23.1],
            style(color=45, rgbcolor={255,127,0}));
        connect(gasFlow.infl, gasIn) annotation (points=[-12,40; -100,40; -100,
              0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(gasFlow.outfl, gasOut) annotation (points=[12,40; 100,40; 100,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(fluidFlow.outfl, waterOut) 
                                        annotation (points=[10,-40; 60,-40; 60,
              -100; 0,-100],
                           style(thickness=2));
        connect(fluidFlow.infl, waterIn) 
                                      annotation (points=[-10,-40; -40,-40; -40,
              100; 0,100],
                         style(thickness=2));
        connect(convHT2N.side1,gasFlow. wall) annotation (points=[0,23; 0,35],
            style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.int, convHT.side1) annotation (points=[0,-3; 0,-17],
            style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.ext, convHT2N.side2) annotation (points=[0,3.1; 0,
              16.9], style(color=45, rgbcolor={255,127,0}));
      end HE_simp;
      
      model HE2ph_simp "Simplified Heat Exchanger fluid - gas (fluid 2-phase)" 
        extends Interfaces.HeatExchanger(extSurfaceTub = exchSurface_G);
        
        parameter SI.CoefficientOfHeatTransfer gamma_G 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F 
          "Constant heat transfer coefficient in the fluid side";
        constant Real pi=Modelica.Constants.pi;
        
      Water.Flow1D2ph fluidFlow(
          Nt=1,
          N=N_F,
          wnom=fluidNomFlowRate,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          L=exchSurface_F^2/(fluidVol*pi*4),
          A=(1/exchSurface_F*fluidVol*4)^2/4*pi,
          omega=1/exchSurface_F*fluidVol*4*pi,
          Dhyd=1/exchSurface_F*fluidVol*4,
          pstartin=pstartin_F,
          pstartout=pstartout_F,
          hstart=hstart_F,
          hstartin=hstart_F_In,
          hstartout=hstart_F_Out) 
                                 annotation (extent=[-10,-50; 10,-30]);
        Thermal.ConvHT convHT(gamma=gamma_F, N=N_F,
          Tstart11=Tstart_M_In,
          Tstart1N=Tstart_M_Out,
          Tstart21=Tstart_F_In,
          Tstart2N=Tstart_F_Out,
          Tstart1=Tstart_M,
          Tstart2=Tstart_F) 
          annotation (extent=[-10,-30; 10,-10]);
        Thermal.MetalTube metalTube(
          rhomcm=rhomcm,
          lambda=lambda,
          N=N_F,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          L=exchSurface_F^2/(fluidVol*pi*4),
          rint=1/exchSurface_F*fluidVol*4/2,
          WallRes=false,
          Tstart1=Tstart_M_In,
          TstartN=Tstart_M_Out,
          Tstart=Tstart_M,
          rext=1/extSurfaceTub*(metalVol + fluidVol)*4/2) 
                 annotation (extent=[-10,10; 10,-10]);
        Gas.Flow1D gasFlow(
          L=1,
          Dhyd=1,
          wnom=gasNomFlowRate,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          QuasiStatic=true,
          N=N_G,
          A=gasVol/1,
          omega=exchSurface_G/1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FlueGasMedium,
          Tstartin=Tstart_G_In,
          Tstartout=Tstart_G_Out,
          pstart=pstart_G,
          Tstart=Tstart_G)       annotation (extent=[-12,50; 12,30]);
        annotation (Diagram);
        Thermal.ConvHT2N convHT2N(
          N1=N_G,
          N2=N_F,
          gamma=gamma_G,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_In,
          Tstart2N=Tstart_M_Out,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M)    annotation (extent=[-10,10; 10,30]);
      equation 
        connect(fluidFlow.wall, convHT.side2) 
                                           annotation (points=[0,-35; 0,-23.1],
            style(color=45, rgbcolor={255,127,0}));
        connect(gasFlow.infl, gasIn) annotation (points=[-12,40; -100,40; -100,
              0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(gasFlow.outfl, gasOut) annotation (points=[12,40; 100,40; 100,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(fluidFlow.outfl, waterOut) 
                                        annotation (points=[10,-40; 60,-40; 60,
              -100; 0,-100],
                           style(thickness=2));
        connect(fluidFlow.infl, waterIn) 
                                      annotation (points=[-10,-40; -40,-40; -40,
              100; 0,100],
                         style(thickness=2));
        connect(convHT2N.side1,gasFlow. wall) annotation (points=[0,23; 0,35],
            style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.int, convHT.side1) annotation (points=[0,-3; 0,-17],
            style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.ext, convHT2N.side2) annotation (points=[0,3.1; 0,
              16.9], style(color=45, rgbcolor={255,127,0}));
      end HE2ph_simp;
      
      model ParHE_simp "Simplified parallel heat exchangers fluid - gas" 
        extends Interfaces.ParallelHE(extSurfaceTub_A = exchSurface_G_A,
                                      extSurfaceTub_B = exchSurface_G_B);
        
        parameter SI.CoefficientOfHeatTransfer gamma_G_A 
          "Constant heat transfer coefficient in the gas side"     annotation (Dialog(group = "side A"));
        parameter SI.CoefficientOfHeatTransfer gamma_G_B 
          "Constant heat transfer coefficient in the gas side"     annotation (Dialog(group = "side B"));
        parameter SI.CoefficientOfHeatTransfer gamma_F_A 
          "Constant heat transfer coefficient in the fluid side"     annotation (Dialog(group = "side A"));
        parameter SI.CoefficientOfHeatTransfer gamma_F_B 
          "Constant heat transfer coefficient in the fluid side"     annotation (Dialog(group = "side B"));
        constant Real pi=Modelica.Constants.pi;
        
        annotation (Diagram);
        ConvParallel convParallel(
          N=N_G,
          As=exchSurface_G_A + exchSurface_G_B,
          Aa=exchSurface_G_A,
          Ab=exchSurface_G_B) 
                             annotation (extent=[-10,16; 10,36]);
      Water.Flow1D fluidAFlow(
          Nt=1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          N=N_F_A,
          L=exchSurface_F_A^2/(fluidVol_A*pi*4),
          A=(fluidVol_A*4/exchSurface_F_A)^2/4*pi,
          omega=fluidVol_A*4/exchSurface_F_A*pi,
          Dhyd=fluidVol_A*4/exchSurface_F_A,
          pstartin=pstartin_F_A,
          pstartout=pstartout_F_A,
          hstart=hstart_F_A,
          wnom=fluidNomFlowRate_A,
          hstartin=hstart_F_A_In,
          hstartout=hstart_F_A_Out) 
                                 annotation (extent=[-38,-52; -18,-32]);
        Thermal.ConvHT convHT_A(
          N=N_F_A,
          gamma=gamma_F_A,
          Tstart11=Tstart_M_A_In,
          Tstart1N=Tstart_M_A_Out,
          Tstart21=Tstart_F_A_In,
          Tstart2N=Tstart_F_A_Out,
          Tstart1=Tstart_M_A,
          Tstart2=Tstart_F_A) 
          annotation (extent=[-38,-30; -18,-10]);
        Thermal.MetalTube metalTube_A(
          lambda=lambda,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          N=N_F_A,
          L=exchSurface_F_A^2/(fluidVol_A*pi*4),
          rint=fluidVol_A*4/exchSurface_F_A/2,
          WallRes=false,
          Tstart1=Tstart_M_A_In,
          TstartN=Tstart_M_A_Out,
          Tstart=Tstart_M_A,
          rext=(metalVol_A + fluidVol_A)*4/extSurfaceTub_A/2,
          rhomcm=rhomcm_A) 
                 annotation (extent=[-38,6; -18,-14]);
        Gas.Flow1D gasFlow(
          L=1,
          Dhyd=1,
          wnom=gasNomFlowRate,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          QuasiStatic=true,
          N=N_G,
          A=gasVol/1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FlueGasMedium,
          omega=(exchSurface_G_A + exchSurface_G_B)/1,
          Tstartin=Tstart_G_In,
          Tstartout=Tstart_G_Out,
          pstart=pstart_G,
          Tstart=Tstart_G)       annotation (extent=[-12,64; 12,44]);
      Water.Flow1D fluidBFlow(
          Nt=1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          N=N_F_B,
          L=exchSurface_F_B^2/(fluidVol_B*pi*4),
          A=(fluidVol_B*4/exchSurface_F_B)^2/4*pi,
          omega=fluidVol_B*4/exchSurface_F_B*pi,
          Dhyd=fluidVol_B*4/exchSurface_F_B,
          wnom=fluidNomFlowRate_B,
          pstartin=pstartin_F_B,
          pstartout=pstartout_F_B,
          hstart=hstart_F_B,
          hstartin=hstart_F_B_In,
          hstartout=hstart_F_B_Out) 
                                 annotation (extent=[38,-52; 18,-32]);
        Thermal.ConvHT convHT_B(
          N=N_F_B,
          gamma=gamma_F_B,
          Tstart11=Tstart_M_B_In,
          Tstart1N=Tstart_M_B_Out,
          Tstart21=Tstart_F_B_In,
          Tstart2N=Tstart_F_B_Out,
          Tstart1=Tstart_M_B,
          Tstart2=Tstart_F_B) 
          annotation (extent=[18,-30; 38,-10]);
        Thermal.MetalTube metalTube_B(
          lambda=lambda,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          L=exchSurface_F_B^2/(fluidVol_B*pi*4),
          rint=fluidVol_B*4/exchSurface_F_B/2,
          N=N_F_B,
          WallRes=false,
          Tstart1=Tstart_M_B_In,
          TstartN=Tstart_M_B_Out,
          Tstart=Tstart_M_B,
          rext=(metalVol_B + fluidVol_B)*4/extSurfaceTub_B/2,
          rhomcm=rhomcm_B) 
                 annotation (extent=[18,6; 38,-14]);
        Thermal.ConvHT2N convHT2N_A(
          N1=N_G,
          N2=N_F_A,
          gamma=gamma_G_A,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_A_In,
          Tstart2N=Tstart_M_A_Out,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M_A)    annotation (extent=[-38,10; -18,30]);
        Thermal.ConvHT2N convHT2N_B(
          N1=N_G,
          N2=N_F_B,
          gamma=gamma_G_B,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_B_In,
          Tstart2N=Tstart_M_B_Out,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M_B)    annotation (extent=[18,10; 38,30]);
      equation 
        connect(convHT_A.side2, fluidAFlow.wall)    annotation (points=[-28,
              -23.1; -28,-37], style(color=45, rgbcolor={255,127,0}));
        connect(convHT_B.side2, fluidBFlow.wall)    annotation (points=[28,-23.1;
              28,-37],        style(color=45, rgbcolor={255,127,0}));
        connect(fluidBFlow.outfl, waterOutB)    annotation (points=[18,-42; 8,
              -42; 8,-100; 40,-100],
                                   style(thickness=2));
        connect(fluidAFlow.outfl, waterOutA)    annotation (points=[-18,-42; -8,
              -42; -8,-100; -40,-100],
                                     style(thickness=2));
        connect(fluidAFlow.infl, waterInA)    annotation (points=[-38,-42; -50,
              -42; -50,100; -40,100],
                                    style(thickness=2));
        connect(fluidBFlow.infl, waterInB)    annotation (points=[38,-42; 52,
              -42; 52,100; 40,100],
                                  style(thickness=2));
        connect(gasFlow.outfl, gasOut)   annotation (points=[12,54; 100,54; 100,
              0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(gasFlow.infl, gasIn)   annotation (points=[-12,54; -100,54;
              -100,0],
                  style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(convParallel.source, gasFlow.wall)   annotation (points=[0,33; 0,
              49],   style(color=45, rgbcolor={255,127,0}));
        connect(convHT2N_A.side1, convParallel.objectA) 
                                                      annotation (points=[-28,23;
              -28,36; -14,36; -14,6; -6,6; -6,23],     style(color=45, rgbcolor=
               {255,127,0}));
        connect(convParallel.objectB, convHT2N_B.side1) 
                                                       annotation (points=[6,23; 6,
              6; 14,6; 14,36; 28,36; 28,23],   style(color=45, rgbcolor={255,
                127,0}));
        connect(metalTube_A.int, convHT_A.side1) annotation (points=[-28,-7;
              -28,-17], style(color=45, rgbcolor={255,127,0}));
        connect(metalTube_A.ext, convHT2N_A.side2) 
                                                 annotation (points=[-28,-0.9;
              -28,16.9], style(color=45, rgbcolor={255,127,0}));
        connect(convHT_B.side1, metalTube_B.int) annotation (points=[28,-17; 28,
              -7], style(color=45, rgbcolor={255,127,0}));
        connect(metalTube_B.ext, convHT2N_B.side2) 
                                                  annotation (points=[28,-0.9;
              28,16.9], style(color=45, rgbcolor={255,127,0}));
      end ParHE_simp;
      
      model HEhtc_f 
        "Heat Exchanger fluid - gas, with variable heat transfer coefficient only fluid side" 
        extends Interfaces.HeatExchanger;
        
        parameter SI.CoefficientOfHeatTransfer gamma_G 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_nom_F 
          "Nominal h.t.c. coefficient fluid side";
        parameter Real kw_F 
          "Exponent of the mass flow rate in the h.t.c. correlation fluid side";
        parameter Boolean gasQuasiStatic=false 
          "Quasi-static model of the flue gas (mass, energy and momentum static balances";
        parameter Boolean counterCurrent=true "Counter-current flow";
        constant Real pi=Modelica.Constants.pi;
        
        Thermal.MetalTube metalTube(
          rhomcm=rhomcm,
          lambda=lambda,
          N=N_F,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          L=exchSurface_F^2/(fluidVol*pi*4),
          rint=fluidVol*4/exchSurface_F/2,
          WallRes=false,
          Tstart1=Tstart_M_In,
          TstartN=Tstart_M_Out,
          Tstart=Tstart_M,
          rext=(metalVol + fluidVol)*4/extSurfaceTub/2) 
                 annotation (extent=[-10,-4; 10,-24]);
        Gas.Flow1D gasFlow(
          L=1,
          Dhyd=1,
          wnom=gasNomFlowRate,
          FFtype=ThermoPower.Choices.Flow1D.FFtypes.NoFriction,
          N=N_G,
          A=gasVol/1,
          omega=exchSurface_G/1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FlueGasMedium,
          Tstartin=Tstart_G_In,
          Tstartout=Tstart_G_Out,
          pstart=pstart_G,
          QuasiStatic=gasQuasiStatic) 
                                 annotation (extent=[-12,60; 12,40]);
        annotation (Diagram);
        Thermal.CounterCurrent cC(counterCurrent=counterCurrent, N=N_F) 
          annotation (extent=[-10,-8; 10,12]);
        Thermal.HeatFlowDistribution heatFlowDistribution(
          N=N_F,
          A1=exchSurface_G,
          A2=extSurfaceTub) 
          annotation (extent=[-10,8; 10,28]);
        ThermoPower.PowerPlants.HRSG.Components.Flow1Dhtc fluidFlow_Extension(
                                                  Nt=1,
          N=N_F,
          wnom=fluidNomFlowRate,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          L=exchSurface_F^2/(fluidVol*pi*4),
          A=(fluidVol*4/exchSurface_F)^2/4*pi,
          omega=fluidVol*4/exchSurface_F*pi,
          Dhyd=fluidVol*4/exchSurface_F,
          pstartin=pstartin_F,
          pstartout=pstartout_F,
          hstart=hstart_F,
          hstartin=hstart_F_In,
          hstartout=hstart_F_Out,
          gamma_nom=gamma_nom_F,
          kw=kw_F) 
          annotation (extent=[-10,-56; 10,-36]);
        Thermal.ConvHT_htc convHT_htc(
          N=N_F,
          TstartF1=Tstart_M_In,
          TstartFN=Tstart_M_Out,
          TstartO1=Tstart_F_In,
          TstartON=Tstart_F_Out,
          TstartF=Tstart_M,
          TstartO=Tstart_F)    annotation (extent=[-10,-20; 10,-40], rotation=0);
        Thermal.ConvHT2N convHT2N(
          N1=N_G,
          N2=N_F,
          gamma=gamma_G,
          Tstart11=Tstart_G_In,
          Tstart1N=Tstart_G_Out,
          Tstart21=Tstart_M_In,
          Tstart2N=Tstart_M_Out,
          Tstart1=Tstart_G,
          Tstart2=Tstart_M)    annotation (extent=[-10,24; 10,44]);
      equation 
        connect(gasFlow.infl, gasIn) annotation (points=[-12,50; -100,50; -100,
              0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(gasFlow.outfl, gasOut) annotation (points=[12,50; 100,50; 100,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(heatFlowDistribution.side2,cC. side1) annotation (points=[0,14.9;
              0,5],           style(
            color=45,
            rgbcolor={255,127,0},
            fillPattern=1));
        connect(convHT_htc.fluidside, fluidFlow_Extension.wall)   annotation (
            points=[0,-33; 0,-41], style(color=3, rgbcolor={0,0,255}));
        connect(fluidFlow_Extension.infl, waterIn)   annotation (points=[-10,-46;
              -40,-46; -40,100; 0,100],    style(thickness=2));
        connect(fluidFlow_Extension.outfl, waterOut)   annotation (points=[10,-46;
              40,-46; 40,-100; 0,-100],    style(thickness=2));
        connect(convHT2N.side2, heatFlowDistribution.side1) annotation (points=[0,30.9;
              0,21],          style(color=45, rgbcolor={255,127,0}));
        connect(convHT2N.side1,gasFlow. wall) annotation (points=[0,37; 0,45],
            style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.int, convHT_htc.otherside) annotation (points=[0,-17;
              0,-27], style(color=45, rgbcolor={255,127,0}));
        connect(metalTube.ext, cC.side2) annotation (points=[0,-10.9; 0,-1.1],
            style(color=45, rgbcolor={255,127,0}));
      end HEhtc_f;
      
      model DrumSensors 
        extends Water.Drum;
        Modelica.Blocks.Interfaces.RealOutput p_out "Pressure sensor output" 
                                                 annotation (extent=[-26,64;
              -46,84]);
        Modelica.Blocks.Interfaces.RealOutput y_out "Level sensor output" 
                                            annotation (extent=[-58,30; -78,50]);
        annotation (Icon(
            Text(extent=[-76,102; -4,82],
              style(color=0, rgbcolor={0,0,0}),
              string="p"),
            Text(extent=[-106,70; -34,50],
              style(color=0, rgbcolor={0,0,0}),
              string="y")),
                          Diagram);
      equation 
        y_out = y;
        p_out = p;
      end DrumSensors;
      
      model Flow1Dhtc 
        "Extension of the Water.Flow1D for fluid flow model with variable heat transfer coefficient" 
        extends ThermoPower.Water.Flow1D(redeclare ThermoPower.Thermal.DHThtc 
            wall);
        parameter SI.CoefficientOfHeatTransfer gamma_nom 
          "Nominal h.t.c. coefficient";
        parameter Real kw 
          "Exponent of the mass flow rate in the h.t.c. correlation";
      equation 
        for j in 1:N loop
          wall.gamma[j] = gamma_nom*noEvent(abs(infl.w/wnom)^kw);
        end for;
        annotation (Diagram);
      end Flow1Dhtc;
      
      model Flow1D2phhtc 
        "Extension of the Water.Flow1D2ph for fluid flow model with variable heat transfer coefficient" 
        extends ThermoPower.Water.Flow1D2ph(redeclare 
            ThermoPower.Thermal.DHThtc wall);
        parameter SI.CoefficientOfHeatTransfer gamma_nom 
          "Nominal h.t.c. coefficient";
        parameter Real kw 
          "Exponent of the mass flow rate in the h.t.c. correlation";
      equation 
        for j in 1:N loop
          wall.gamma[j] = gamma_nom*noEvent(abs(infl.w/wnom)^kw);
        end for;
        annotation (Diagram);
      end Flow1D2phhtc;
      
      model FlowGas1Dhtc 
        "Extension of the Gas.Flow1D for fluid flow model with variable heat transfer coefficient" 
        extends Gas.Flow1D( redeclare ThermoPower.Thermal.DHThtc wall);
        parameter SI.CoefficientOfHeatTransfer gamma_nom 
          "Nominal h.t.c. coefficient";
        parameter Real kw 
          "Exponent of the mass flow rate in the h.t.c. correlation";
      equation 
        for j in 1:N loop
          wall.gamma[j] = gamma_nom*noEvent(abs(infl.w/wnom)^kw);
        end for;
        annotation (Diagram);
      end FlowGas1Dhtc;
      
      model ConvParallel 
        "Convective heat transfer between one source and two objects in parallel" 
        import Modelica.SIunits.*;
        parameter Integer N=2 "Number of Nodes";
        parameter Area As "Area of source";
        parameter Area Aa "Area of object a";
        parameter Area Ab "Area of object b";
        ThermoPower.Thermal.DHT source(N=N) 
                       annotation (extent=[-40,60; 40,80]);
        ThermoPower.Thermal.DHT objectA(N=N) 
                       annotation (extent=[-100,-40; -20,-20]);
        ThermoPower.Thermal.DHT objectB(N=N) 
                       annotation (extent=[20,-40; 100,-20]);
        annotation (Icon(
            Text(
              extent=[-100,-42; -20,-80],
              style(color=46),
              string="A"),
                         Rectangle(extent=[-100,60; 100,-20], style(
                color=0,
                fillColor=7,
                fillPattern=7)),
            Line(points=[-8,60; -60,-20], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2)),
            Line(points=[-56,-2; -60,-20; -44,-12], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2)),
            Line(points=[60,-2; 62,-20; 48,-8], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2)),
            Line(points=[10,60; 62,-20], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2)),
            Line(points=[26,50; 10,60; 12,42], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2)),
            Line(points=[-24,52; -8,60; -12,44], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2)),
            Text(
              extent=[-110,-74; 112,-100],
              string="%name",
              style(color=46)),
            Text(
              extent=[20,-40; 100,-80],
              style(color=46),
              string="B")),      Documentation(info="<HTML>
<p>The model connected to the <tt>source</tt> connector exchanges power \"in parallel\" with the models connected to the <tt>objectA</tt> and <tt>objectB</tt> connectors.
</HTML>",     revisions=""),
          Diagram);
        
      equation 
        source.phi*As + objectA.phi*Aa + objectB.phi*Ab = zeros(N) 
          "Energy balance";
        source.T = objectA.T;
        source.T = objectB.T;
      end ConvParallel;
      
      model BaseReader_water 
        "Base reader for the visualization of the state in the simulation (water)" 
        replaceable package Medium = Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance "Medium model";
        ThermoPower.Water.FlangeA inlet(redeclare package Medium = Medium) 
                                        annotation (extent=[-80,-20; -40,20]);
        ThermoPower.Water.FlangeB outlet(redeclare package Medium = Medium) 
                                         annotation (extent=[40,-20; 80,20]);
        annotation (
          Diagram,
          Icon(Polygon(points=[-80,0; 0,32; 80,0; 0,-32; -80,0], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)), Text(
              extent=[-80,20; 80,-20],
              string="S",
              style(
                color=7,
                rgbcolor={255,255,255},
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1))),
          Documentation(info="<HTML>
<p>This component can be inserted in a hydraulic circuit to measure the temperature of the fluid flowing through it.
<p>Flow reversal is supported.
</HTML>",   revisions="<html>
<ul>
<li><i>16 Dec 2004</i>
    by <a href=\"mailto:francesco.casella@polimi.it\">Francesco Casella</a>:<br>
       Standard medium definition added.</li>
<li><i>1 Jul 2004</i>
    by <a href=\"mailto:francesco.casella@polimi.it\">Francesco Casella</a>:<br>
       Adapted to Modelica.Media.</li>
<li><i>1 Oct 2003</i>
    by <a href=\"mailto:francesco.casella@polimi.it\">Francesco Casella</a>:<br>
       First release.</li>
</ul>
</html>"));
      equation 
        inlet.w + outlet.w = 0 "Mass balance";
        inlet.p = outlet.p "No pressure drop";
        
        // Boundary conditions
        inlet.hAB = outlet.hAB;
        inlet.hBA = outlet.hBA;
      end BaseReader_water;
      
      model StateReader_water 
        "State reader for the visualization of the state in the simulation (water)" 
        extends ThermoPower.PowerPlants.HRSG.Components.BaseReader_water;
        SI.Temperature T "Temperature";
        SI.Pressure p "Pressure";
        SI.SpecificEnthalpy h "Specific enthalpy";
        SI.MassFlowRate w "Mass flow rate";
        Medium.BaseProperties fluid;
      equation 
        // Set fluid properties
        fluid.p=inlet.p;
        fluid.h = if inlet.w >= 0 then inlet.hBA else inlet.hAB;
        
        T=fluid.T;
        p=fluid.p;
        h=fluid.h;
        w=inlet.w;
      end StateReader_water;
      
      model BaseReader_gas 
        "Base reader for the visualization of the state in the simulation (gas)" 
        replaceable package Medium = Modelica.Media.Interfaces.PartialMedium;
        Gas.FlangeA inlet(redeclare package Medium = Medium) 
          annotation (extent=[-80,-20; -40,20]);
        Gas.FlangeB outlet(redeclare package Medium = Medium) 
          annotation (extent=[40,-20; 80,20]);
        annotation (Diagram,
          Icon(Polygon(points=[-80,0; 0,30; 80,0; 0,-30; -80,0], style(
                color=76,
                rgbcolor={170,170,255},
                fillColor=76,
                rgbfillColor={170,170,255})),
                                 Text(
              extent=[-80,20; 80,-20],
              string="S",
              style(
                color=7,
                rgbcolor={255,255,255},
                fillColor=76,
                rgbfillColor={170,170,255}))));
      equation 
        inlet.w + outlet.w=0 "Mass balance";
        inlet.p = outlet.p "Momentum balance";
        // Energy balance
        inlet.hAB = outlet.hAB;
        inlet.hBA = outlet.hBA;
        // Independent composition mass balances
        inlet.XAB = outlet.XAB;
        inlet.XBA = outlet.XBA;
      end BaseReader_gas;
      
      model StateReader_gas 
        "State reader for the visualization of the state in the simulation (gas)" 
        extends BaseReader_gas;
        Medium.BaseProperties gas;
        SI.Temperature T "Temperature";
        SI.Pressure p "Pressure";
        SI.SpecificEnthalpy h "Specific enthalpy";
        SI.MassFlowRate w "Mass flow rate";
        
      equation 
        // Set gas properties
        inlet.p=gas.p;
        if inlet.w >= 0 then
          gas.h = inlet.hBA;
          gas.Xi = inlet.XBA;
        else
          gas.h = inlet.hAB;
          gas.Xi = inlet.XAB;
        end if;
        
        T=gas.T;
        p=gas.p;
        h=gas.h;
        w=inlet.w;
      end StateReader_gas;
      
      model PrescribedSpeedPump "Prescribed speed pump" 
        replaceable package WaterMedium = 
            Modelica.Media.Interfaces.PartialTwoPhaseMedium;
        parameter SI.VolumeFlowRate q_nom[3] "Nominal volume flow rates";
        parameter SI.Height head_nom[3] "Nominal heads";
        parameter SI.Density rho_nom "Nominal density";
        parameter SI.Conversions.NonSIunits.AngularVelocity_rpm n0 
          "Nominal rpm";
        parameter SI.Pressure nominalSteamPressure 
          "Nominal live steam pressure";
        parameter SI.Pressure nominalCondensationPressure 
          "Nominal condensation pressure";
        parameter SI.MassFlowRate nominalSteamFlow 
          "Nominal steam mass flow rate";
        parameter SI.SpecificEnthalpy hstart 
          "Fluid Specific Enthalpy Start Value";
        
        function flowCharacteristic = 
            ThermoPower.Functions.PumpCharacteristics.quadraticFlow (
              q_nom = q_nom, head_nom = head_nom);
        
        annotation (Icon(
            Rectangle(extent=[-100,100; 100,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Text(
              extent=[-100,-118; 100,-144],
              style(color=3, rgbcolor={0,0,255}),
              string="%name"),
            Ellipse(extent=[-62,62; 58,-58],   style(gradient=3)),
            Polygon(points=[-32,34; -32,-26; 46,2; -32,34],     style(
                pattern=0,
                gradient=2,
                fillColor=7))), Diagram);
        ThermoPower.Water.FlangeA inlet(
          redeclare package Medium = WaterMedium) 
          annotation (extent=[-120,-20; -80,20]);
        ThermoPower.Water.FlangeB outlet(
          redeclare package Medium = WaterMedium) 
          annotation (extent=[80,-20; 120,20]);
        Water.Pump feedWaterPump(     redeclare package Medium = 
              WaterMedium,
          redeclare function flowCharacteristic = flowCharacteristic,
          pin_start=nominalCondensationPressure,
          pout_start=nominalSteamPressure,
          wstart=nominalSteamFlow,
          n0=n0,
          hstart=hstart) 
          annotation (extent=[-40,-24; 0,16]);
        Modelica.Blocks.Interfaces.RealInput pumpSpeed_rpm 
                                         annotation (extent=[-128,40; -88,80]);
      equation 
        connect(inlet, feedWaterPump.infl) 
          annotation (points=[-100,0; -67,0; -67,0.4; -36,0.4], style(thickness=
               2));
        connect(pumpSpeed_rpm, feedWaterPump.in_n) annotation (points=[-108,60;
              -25.2,60; -25.2,12], style(color=74, rgbcolor={0,0,127}));
        connect(outlet, feedWaterPump.outfl) annotation (points=[100,0; 10,0;
              10,10.4; -8,10.4], style(thickness=2));
      end PrescribedSpeedPump;
      
      model PumpControlledFlowRate "Pump with flow rate control" 
        import ThermoPower;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialTwoPhaseMedium;
        
        parameter SI.VolumeFlowRate q_nom[3] "Nominal volume flow rates";
        parameter SI.Height head_nom[3] "Nominal heads";
        parameter SI.Density rho_nom "Nominal density";
        parameter SI.Conversions.NonSIunits.AngularVelocity_rpm n0 
          "Nominal rpm";
        parameter SI.Pressure nominalWaterPressure 
          "Nominal live steam pressure";
        parameter SI.Pressure nominalCondensationPressure 
          "Nominal condensation pressure";
        parameter SI.MassFlowRate nominalWaterFlowRate 
          "Nominal steam mass flow rate";
        parameter SI.SpecificEnthalpy hstart 
          "Fluid Specific Enthalpy Start Value";
        
        //PID for flow rate control
        parameter Real Kp=4 "Proportional gain (normalised units)" 
          annotation (Dialog(tab="PID"));
        parameter SI.Time Ti=200 "Integral time" 
          annotation (Dialog(tab="PID"));
        parameter SI.Time Td=0 "Derivative time" 
          annotation (Dialog(tab="PID"));
        parameter Real PVmin=-1 "Minimum value of process variable for scaling"
          annotation (Dialog(tab="PID"));
        parameter Real PVmax=1 "Maximum value of process variable for scaling" 
          annotation (Dialog(tab="PID"));
        parameter Real CSmin=500 "Minimum value of control signal for scaling" 
          annotation (Dialog(tab="PID"));
        parameter Real CSmax=2500 "Maximum value of control signal for scaling"
          annotation (Dialog(tab="PID"));
        parameter Real PVstart=0.5 "Start value of PV (scaled)" 
          annotation (Dialog(tab="PID"));
        parameter Real CSstart=0.5 "Start value of CS (scaled)" 
          annotation (Dialog(tab="PID"));
        parameter SI.Time T_filter=1 "Time Constant of the filter" 
          annotation (Dialog(tab="PID"));
        
        annotation (Icon(
            Rectangle(extent=[-100,100; 100,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={240,240,240})),
            Text(
              extent=[-100,-118; 100,-144],
              style(color=3, rgbcolor={0,0,255}),
              string="%name"),
            Ellipse(extent=[-62,60; 58,-60],   style(gradient=3)),
            Polygon(points=[-32,32; -32,-28; 46,0; -32,32],     style(
                pattern=0,
                gradient=2,
                fillColor=7)),
            Rectangle(extent=[-88,90; -48,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Text(
              extent=[-86,88; -50,52],
              style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1),
              string="C"),
            Line(points=[-48,70; -2,70; -2,60], style(
                color=74,
                rgbcolor={0,0,127},
                fillColor=30,
                rgbfillColor={240,240,240},
                fillPattern=1)),
            Line(points=[-62,0; -80,0], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=30,
                rgbfillColor={240,240,240},
                fillPattern=1)),
            Line(points=[-70,0; -70,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={240,240,240},
                fillPattern=1)),
            Polygon(points=[-70,46; -72,40; -68,40; -70,46], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-30,72; -30,68; -24,70; -30,72], style(
                color=74,
                rgbcolor={0,0,127},
                fillColor=74,
                rgbfillColor={0,0,127},
                fillPattern=1))),
                                Diagram);
      public 
        ThermoPower.PowerPlants.HRSG.Components.PrescribedSpeedPump pump(
          redeclare package WaterMedium = FluidMedium,
          q_nom=q_nom,
          head_nom=head_nom,
          rho_nom=rho_nom,
          n0=n0,
          nominalSteamPressure=nominalWaterPressure,
          nominalCondensationPressure=nominalCondensationPressure,
          nominalSteamFlow=nominalWaterFlowRate,
          hstart=hstart)        annotation (extent=[-8,16; -40,-16], rotation=180);
        ThermoPower.Water.SensW feed_w(redeclare package Medium = FluidMedium) 
          annotation (extent=[40,14; 20,-6],      rotation=180);
        ThermoPower.Water.FlangeA inlet(redeclare package Medium = FluidMedium)
          annotation (extent=[-120,-20; -80,20]);
        ThermoPower.Water.FlangeB outlet(redeclare package Medium = FluidMedium)
          annotation (extent=[80,-20; 120,20]);
        Modelica.Blocks.Interfaces.RealInput setpoint_FlowRate 
                                         annotation (extent=[-120,54; -88,86]);
        ThermoPower.PowerPlants.Control.PID pID(
          Kp=Kp,
          Ti=Ti,
          Td=Td,
          PVmin=PVmin,
          PVmax=PVmax,
          CSmin=CSmin,
          CSmax=CSmax,
          PVstart=PVstart,
          CSstart=CSstart) annotation (extent=[-10,60; 10,40],  rotation=180);
        Modelica.Blocks.Continuous.FirstOrder firstOrder(T=T_filter, y_start=n0) 
          annotation (extent=[-26,40; -46,60], rotation=0);
        
      equation 
        connect(pump.inlet, inlet)          annotation (points=[-40,
              1.95937e-015; -67,1.95937e-015; -67,0; -100,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(pump.outlet, feed_w.inlet)          annotation (points=[-8,
              -1.95937e-015; 3,-1.95937e-015; 3,8.88178e-016; 24,8.88178e-016],
                                                                style(
            thickness=2,
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(feed_w.outlet, outlet) annotation (points=[36,-8.88178e-016;
              57.8,-8.88178e-016; 57.8,0; 100,0],
                              style(
            thickness=2,
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(pID.PV, feed_w.w) annotation (points=[10,46; 60,46; 60,10; 38,
              10],        style(color=74, rgbcolor={0,0,127}));
        connect(pID.SP, setpoint_FlowRate) annotation (points=[10,54; 20,54; 20,
              70; -104,70],    style(color=74, rgbcolor={0,0,127}));
        connect(firstOrder.u, pID.CS) annotation (points=[-24,50; -10.6,50],
            style(color=74, rgbcolor={0,0,127}));
        connect(firstOrder.y, pump.pumpSpeed_rpm)          annotation (points=[-47,50;
              -60,50; -60,9.6; -41.28,9.6],         style(color=74, rgbcolor={0,
                0,127}));
      end PumpControlledFlowRate;
      
      model PumpFilter "Pump with filter" 
        import ThermoPower;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialTwoPhaseMedium;
        
        parameter SI.VolumeFlowRate q_nom[3] "Nominal volume flow rates";
        parameter SI.Height head_nom[3] "Nominal heads";
        parameter SI.Density rho_nom "Nominal density";
        parameter SI.Conversions.NonSIunits.AngularVelocity_rpm n0 
          "Nominal rpm";
        parameter SI.Pressure nominalWaterPressure 
          "Nominal live steam pressure";
        parameter SI.Pressure nominalCondensationPressure 
          "Nominal condensation pressure";
        parameter SI.MassFlowRate nominalWaterFlowRate 
          "Nominal steam mass flow rate";
        parameter SI.SpecificEnthalpy hstart 
          "Fluid Specific Enthalpy Start Value";
        parameter SI.Time T_filter=1 "Time Constant of the filter";
        
        annotation (Icon(
            Rectangle(extent=[-100,100; 100,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={240,240,240})),
            Text(
              extent=[-100,-118; 100,-144],
              style(color=3, rgbcolor={0,0,255}),
              string="%name"),
            Ellipse(extent=[-62,60; 58,-60],   style(gradient=3)),
            Polygon(points=[-32,32; -32,-28; 46,0; -32,32],     style(
                pattern=0,
                gradient=2,
                fillColor=7)),
            Rectangle(extent=[-88,90; -48,50], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Text(
              extent=[-86,88; -50,52],
              style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=68,
                rgbfillColor={170,213,255},
                fillPattern=1),
              string="F"),
            Line(points=[-48,70; -2,70; -2,60], style(
                color=74,
                rgbcolor={0,0,127},
                fillColor=30,
                rgbfillColor={240,240,240},
                fillPattern=1)),
            Line(points=[-62,0; -80,0], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=30,
                rgbfillColor={240,240,240},
                fillPattern=1)),
            Polygon(points=[-30,72; -30,68; -24,70; -30,72], style(
                color=74,
                rgbcolor={0,0,127},
                fillColor=74,
                rgbfillColor={0,0,127},
                fillPattern=1))),
                                Diagram);
      public 
        ThermoPower.PowerPlants.HRSG.Components.PrescribedSpeedPump pump(
          redeclare package WaterMedium = FluidMedium,
          q_nom=q_nom,
          head_nom=head_nom,
          rho_nom=rho_nom,
          n0=n0,
          nominalSteamPressure=nominalWaterPressure,
          nominalCondensationPressure=nominalCondensationPressure,
          nominalSteamFlow=nominalWaterFlowRate,
          hstart=hstart)        annotation (extent=[20,20; -20,-20], rotation=180);
        ThermoPower.Water.FlangeA inlet(redeclare package Medium = FluidMedium)
          annotation (extent=[-120,-20; -80,20]);
        ThermoPower.Water.FlangeB outlet(redeclare package Medium = FluidMedium)
          annotation (extent=[80,-20; 120,20]);
        Modelica.Blocks.Interfaces.RealInput setpoint_FlowRate 
                                         annotation (extent=[-120,54; -88,86]);
        Modelica.Blocks.Continuous.FirstOrder firstOrder(T=T_filter, y_start=n0) 
          annotation (extent=[-10,40; -30,60], rotation=0);
      equation 
        connect(pump.inlet, inlet)          annotation (points=[-20,
              2.44921e-015; -67,2.44921e-015; -67,0; -100,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(firstOrder.y, pump.pumpSpeed_rpm)          annotation (points=[-31,50;
              -60,50; -60,12; -21.6,12],            style(color=74, rgbcolor={0,
                0,127}));
        connect(pump.outlet, outlet)          annotation (points=[20,
              -2.44921e-015; 40,-2.44921e-015; 40,0; 100,0], style(thickness=2));
        connect(firstOrder.u, setpoint_FlowRate) annotation (points=[-8,50; 20,
              50; 20,70; -104,70],style(color=74, rgbcolor={0,0,127}));
      end PumpFilter;
    end Components;
    
    package Control 
      partial model InterfacesControl "Base of class for control" 
        annotation (Icon(Rectangle(extent=[-100,100; 100,-100], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=30,
                rgbfillColor={240,240,240})), Text(
              extent=[-80,80; 80,-80],
              style(color=0, rgbcolor={0,0,0}),
              string="C")), Diagram);
        Buses.Sensors SensorsBus annotation (extent=[-120,-20; -80,20]);
        Buses.Actuators ActuatorsBus annotation (extent=[80,-20; 120,20]);
      end InterfacesControl;
      
      model levelsControl "PID controllers for levels control" 
        extends InterfacesControl;
        
        //PID for level HP control
        parameter Real Kp_levelHP=3 "Proportional gain (normalised units)" 
          annotation (Dialog(tab="PID - level HP"));
        parameter SI.Time Ti_levelHP=400 "Integral time" 
          annotation (Dialog(tab="PID - level HP"));
        parameter SI.Time Td_levelHP=0 "Derivative time" 
          annotation (Dialog(tab="PID - level HP"));
        parameter Real PVmin_levelHP=-1 
          "Minimum value of process variable for scaling" 
          annotation (Dialog(tab="PID - level HP"));
        parameter Real PVmax_levelHP=1 
          "Maximum value of process variable for scaling" 
          annotation (Dialog(tab="PID - level HP"));
        parameter Real CSmin_levelHP=30 
          "Minimum value of control signal for scaling" 
          annotation (Dialog(tab="PID - level HP"));
        parameter Real CSmax_levelHP=100 
          "Maximum value of control signal for scaling" 
          annotation (Dialog(tab="PID - level HP"));
        parameter Real PVstart_levelHP=0.5 "Start value of PV (scaled)" 
          annotation (Dialog(tab="PID - level HP"));
        parameter Real CSstart_levelHP=0.5 "Start value of CS (scaled)" 
          annotation (Dialog(tab="PID - level HP"));
        parameter SI.Length setPoint_levelHP=0 "Set point level of HP drum";
        
        //PID for level IP control
        parameter Real Kp_levelIP=3 "Proportional gain (normalised units)" 
          annotation (Dialog(tab="PID - level IP"));
        parameter SI.Time Ti_levelIP=600 "Integral time" 
          annotation (Dialog(tab="PID - level IP"));
        parameter SI.Time Td_levelIP=0 "Derivative time" 
          annotation (Dialog(tab="PID - level IP"));
        parameter Real PVmin_levelIP=-1 
          "Minimum value of process variable for scaling" 
          annotation (Dialog(tab="PID - level IP"));
        parameter Real PVmax_levelIP=1 
          "Maximum value of process variable for scaling" 
          annotation (Dialog(tab="PID - level IP"));
        parameter Real CSmin_levelIP=8 
          "Minimum value of control signal for scaling" 
          annotation (Dialog(tab="PID - level IP"));
        parameter Real CSmax_levelIP=20 
          "Maximum value of control signal for scaling" 
          annotation (Dialog(tab="PID - level IP"));
        parameter Real PVstart_levelIP=0.5 "Start value of PV (scaled)" 
          annotation (Dialog(tab="PID - level IP"));
        parameter Real CSstart_levelIP=0.5 "Start value of CS (scaled)" 
          annotation (Dialog(tab="PID - level IP"));
        parameter SI.Length setPoint_levelIP=0 "Set point level of IP drum";
        
        //PID for level LP control
        parameter Real Kp_levelLP=3 "Proportional gain (normalised units)" 
          annotation (Dialog(tab="PID - level LP"));
        parameter SI.Time Ti_levelLP=800 "Integral time" 
          annotation (Dialog(tab="PID - level LP"));
        parameter SI.Time Td_levelLP=0 "Derivative time" 
          annotation (Dialog(tab="PID - level LP"));
        parameter Real PVmin_levelLP=-1 
          "Minimum value of process variable for scaling" 
          annotation (Dialog(tab="PID - level LP"));
        parameter Real PVmax_levelLP=1 
          "Maximum value of process variable for scaling" 
          annotation (Dialog(tab="PID - level LP"));
        parameter Real CSmin_levelLP=500 
          "Minimum value of control signal for scaling" 
          annotation (Dialog(tab="PID - level LP"));
        parameter Real CSmax_levelLP=2500 
          "Maximum value of control signal for scaling" 
          annotation (Dialog(tab="PID - level LP"));
        parameter Real PVstart_levelLP=0.5 "Start value of PV (scaled)" 
          annotation (Dialog(tab="PID - level LP"));
        parameter Real CSstart_levelLP=0.5 "Start value of CS (scaled)" 
          annotation (Dialog(tab="PID - level LP"));
        parameter SI.Length setPoint_levelLP=0 "Set point level of LP drum";
        
         PowerPlants.Control.PID Level_HP(
          Kp=Kp_levelHP,
          Td=Td_levelHP,
          Ti=Ti_levelHP,
          PVmin=PVmin_levelHP,
          PVmax=PVmax_levelHP,
          CSmin=CSmin_levelHP,
          CSmax=CSmax_levelHP,
          PVstart=PVstart_levelHP,
          CSstart=CSstart_levelHP) 
                      annotation (extent=[20,40; 40,60]);
         PowerPlants.Control.PID Level_IP(
          Kp=Kp_levelIP,
          Td=Td_levelIP,
          Ti=Ti_levelIP,
          PVmin=PVmin_levelIP,
          PVmax=PVmax_levelIP,
          CSmin=CSmin_levelIP,
          CSmax=CSmax_levelIP,
          PVstart=PVstart_levelIP,
          CSstart=CSstart_levelIP) 
                     annotation (extent=[20,-10; 40,10]);
         PowerPlants.Control.PID Level_LP(
          Kp=Kp_levelLP,
          Td=Td_levelLP,
          Ti=Ti_levelLP,
          PVmin=PVmin_levelLP,
          PVmax=PVmax_levelLP,
          CSmin=CSmin_levelLP,
          CSmax=CSmax_levelLP,
          PVstart=PVstart_levelLP,
          CSstart=CSstart_levelLP) 
                     annotation (extent=[20,-54; 40,-34]);
        annotation (Diagram);
      public 
        Modelica.Blocks.Sources.Constant levelHP_SP(k=setPoint_levelHP) 
          annotation (extent=[-20,64; -40,44], rotation=180);
      public 
        Modelica.Blocks.Sources.Constant levelIP_SP(k=setPoint_levelIP) 
          annotation (extent=[-20,14; -40,-6],  rotation=180);
      public 
        Modelica.Blocks.Sources.Constant levelLP_SP(k=setPoint_levelLP) 
          annotation (extent=[-20,-30; -40,-50], rotation=180);
      equation 
        connect(SensorsBus.y_drumHP, Level_HP.PV) annotation (points=[-98,0;
              -60,0; -60,30; 0,30; 0,46; 20,46], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(SensorsBus.y_drumIP, Level_IP.PV) annotation (points=[-98,0;
              -60,0; -60,-20; 0,-20; 0,-4; 20,-4], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(SensorsBus.y_drumLP, Level_LP.PV) annotation (points=[-98,0;
              -60,0; -60,-66; 0,-66; 0,-48; 20,-48], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(ActuatorsBus.flowRate_feedIP, Level_IP.CS) annotation (points=[
              100,0; 40.6,0], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(ActuatorsBus.flowRate_feedHP, Level_HP.CS) annotation (points=[
              100,0; 60,0; 60,50; 40.6,50], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(levelHP_SP.y, Level_HP.SP) annotation (points=[-19,54; 20,54],
            style(color=74, rgbcolor={0,0,127}));
        connect(levelIP_SP.y, Level_IP.SP) annotation (points=[-19,4; 0.5,4;
              0.5,4; 20,4],                                   style(color=74,
              rgbcolor={0,0,127}));
        connect(levelLP_SP.y, Level_LP.SP) annotation (points=[-19,-40; 20,-40],
                              style(color=74, rgbcolor={0,0,127}));
        connect(ActuatorsBus.nPump_feedLP, Level_LP.CS) annotation (points=[100,
              0; 60,0; 60,-44; 40,-44], style(color=52, rgbcolor={213,255,170}));
      end levelsControl;
      
    end Control;
    
    package Examples 
      
      model HEG_2L "Heat Exchangers Group with two pressure level" 
        extends Interfaces.HEG_2L;
        
        parameter Real rhomcm 
          "Metal heat capacity per unit volume (density by specific heat capacity)[J/m^3.K]";
        parameter SI.ThermalConductivity lambda 
          "Thermal conductivity of the metal";
        constant Real pi=Modelica.Constants.pi;
        
        //Valve parameter
        parameter Real Cv_attShHP 
          "Cv (US) flow coefficient, valve for Sh_HP attemperation" annotation (Dialog(group = "Attemperation"));
        parameter SI.Pressure pnom_attShHP 
          "Nominal inlet pressure, valve for Sh_HP attemperation" annotation (Dialog(group = "Attemperation"));
        parameter SI.Pressure dpnom_attShHP 
          "Nominal pressure drop, valve for Sh_HP attemperation" annotation (Dialog(group = "Attemperation"));
        parameter SI.MassFlowRate wnom_attShHP 
          "Nominal mass flowrate, valve for Sh_HP attemperation" annotation (Dialog(group = "Attemperation"));
        parameter SI.SpecificEnthalpy valShHP_hstart=1e5 
          "Start value of specific enthalpy, valve for Sh_HP attemperation" annotation (Dialog(group = "Attemperation"));
        
        replaceable Components.HE Sh2_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh2_HP_N_G,
          N_F=Sh2_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Sh,
          fluidNomPressure=fluidHPNomPressure_Sh,
          exchSurface_G=Sh2_HP_exchSurface_G,
          exchSurface_F=Sh2_HP_exchSurface_F,
          extSurfaceTub=Sh2_HP_extSurfaceTub,
          gasVol=Sh2_HP_gasVol,
          fluidVol=Sh2_HP_fluidVol,
          metalVol=Sh2_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh2_HP_Tstart_G_In,
          Tstart_G_Out=Sh2_HP_Tstart_G_Out,
          Tstart_M_In=Sh2_HP_Tstart_M_In,
          Tstart_M_Out=Sh2_HP_Tstart_M_Out,
          Tstart_F_In=Sh2_HP_Tstart_F_In,
          Tstart_F_Out=Sh2_HP_Tstart_F_Out,
          hstart_F_In=Sh2_HP_hstart_F_In,
          hstart_F_Out=Sh2_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Sh) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh2_HP_N_G,
          N_F=Sh2_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidHPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidHPNomPressure_Sh,
          exchSurface_G=Sh2_HP_exchSurface_G,
          exchSurface_F=Sh2_HP_exchSurface_F,
          extSurfaceTub=Sh2_HP_extSurfaceTub,
          gasVol=Sh2_HP_gasVol,
          fluidVol=Sh2_HP_fluidVol,
          metalVol=Sh2_HP_metalVol,
          use_T=use_T_Sh,
          SSInit=SSInit,
          Tstart_G_In=Sh2_HP_Tstart_G_In,
          Tstart_G_Out=Sh2_HP_Tstart_G_Out,
          Tstart_M_In=Sh2_HP_Tstart_M_In,
          Tstart_M_Out=Sh2_HP_Tstart_M_Out,
          Tstart_F_In=Sh2_HP_Tstart_F_In,
          Tstart_F_Out=Sh2_HP_Tstart_F_Out,
          hstart_F_In=Sh2_HP_hstart_F_In,
          hstart_F_Out=Sh2_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda) 
          annotation (extent=[-150,-10; -130,10]);
        replaceable Components.HE Sh1_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh1_HP_N_G,
          N_F=Sh1_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidHPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidHPNomPressure_Sh,
          exchSurface_G=Sh1_HP_exchSurface_G,
          exchSurface_F=Sh1_HP_exchSurface_F,
          extSurfaceTub=Sh1_HP_extSurfaceTub,
          gasVol=Sh1_HP_gasVol,
          fluidVol=Sh1_HP_fluidVol,
          metalVol=Sh1_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh1_HP_Tstart_G_In,
          Tstart_G_Out=Sh1_HP_Tstart_G_Out,
          Tstart_M_In=Sh1_HP_Tstart_M_In,
          Tstart_M_Out=Sh1_HP_Tstart_M_Out,
          Tstart_F_In=Sh1_HP_Tstart_F_In,
          Tstart_F_Out=Sh1_HP_Tstart_F_Out,
          hstart_F_In=Sh1_HP_hstart_F_In,
          hstart_F_Out=Sh1_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Sh) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh1_HP_N_G,
          N_F=Sh1_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidHPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidHPNomPressure_Sh,
          exchSurface_G=Sh1_HP_exchSurface_G,
          exchSurface_F=Sh1_HP_exchSurface_F,
          extSurfaceTub=Sh1_HP_extSurfaceTub,
          gasVol=Sh1_HP_gasVol,
          fluidVol=Sh1_HP_fluidVol,
          metalVol=Sh1_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh1_HP_Tstart_G_In,
          Tstart_G_Out=Sh1_HP_Tstart_G_Out,
          Tstart_M_In=Sh1_HP_Tstart_M_In,
          Tstart_M_Out=Sh1_HP_Tstart_M_Out,
          Tstart_F_In=Sh1_HP_Tstart_F_In,
          Tstart_F_Out=Sh1_HP_Tstart_F_Out,
          hstart_F_In=Sh1_HP_hstart_F_In,
          hstart_F_Out=Sh1_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Sh) 
          annotation (extent=[-110,-10; -90,10]);
        replaceable Components.HE2ph Ev_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_HP_N_G,
          N_F=Ev_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidHPNomFlowRate_Ev,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidHPNomPressure_Ev,
          exchSurface_G=Ev_HP_exchSurface_G,
          exchSurface_F=Ev_HP_exchSurface_F,
          extSurfaceTub=Ev_HP_extSurfaceTub,
          gasVol=Ev_HP_gasVol,
          fluidVol=Ev_HP_fluidVol,
          metalVol=Ev_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_HP_Tstart_G_In,
          Tstart_G_Out=Ev_HP_Tstart_G_Out,
          Tstart_M_In=Ev_HP_Tstart_M_In,
          Tstart_M_Out=Ev_HP_Tstart_M_Out,
          Tstart_F_In=Ev_HP_Tstart_F_In,
          Tstart_F_Out=Ev_HP_Tstart_F_Out,
          hstart_F_In=Ev_HP_hstart_F_In,
          hstart_F_Out=Ev_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_HP_N_G,
          N_F=Ev_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidHPNomFlowRate_Ev,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidHPNomPressure_Ev,
          exchSurface_G=Ev_HP_exchSurface_G,
          exchSurface_F=Ev_HP_exchSurface_F,
          extSurfaceTub=Ev_HP_extSurfaceTub,
          gasVol=Ev_HP_gasVol,
          fluidVol=Ev_HP_fluidVol,
          metalVol=Ev_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_HP_Tstart_G_In,
          Tstart_G_Out=Ev_HP_Tstart_G_Out,
          Tstart_M_In=Ev_HP_Tstart_M_In,
          Tstart_M_Out=Ev_HP_Tstart_M_Out,
          Tstart_F_In=Ev_HP_Tstart_F_In,
          Tstart_F_Out=Ev_HP_Tstart_F_Out,
          hstart_F_In=Ev_HP_hstart_F_In,
          hstart_F_Out=Ev_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) 
          annotation (extent=[-70,-10; -50,10]);
        replaceable Components.HE Ec_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_HP_N_G,
          N_F=Ec_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidHPNomFlowRate_Ec,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidHPNomPressure_Ec,
          exchSurface_G=Ec_HP_exchSurface_G,
          exchSurface_F=Ec_HP_exchSurface_F,
          extSurfaceTub=Ec_HP_extSurfaceTub,
          gasVol=Ec_HP_gasVol,
          fluidVol=Ec_HP_fluidVol,
          metalVol=Ec_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_HP_Tstart_G_In,
          Tstart_G_Out=Ec_HP_Tstart_G_Out,
          Tstart_M_In=Ec_HP_Tstart_M_In,
          Tstart_M_Out=Ec_HP_Tstart_M_Out,
          Tstart_F_In=Ec_HP_Tstart_F_In,
          Tstart_F_Out=Ec_HP_Tstart_F_Out,
          hstart_F_In=Ec_HP_hstart_F_In,
          hstart_F_Out=Ec_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_HP_N_G,
          N_F=Ec_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidHPNomFlowRate_Ec,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidHPNomPressure_Ec,
          exchSurface_G=Ec_HP_exchSurface_G,
          exchSurface_F=Ec_HP_exchSurface_F,
          extSurfaceTub=Ec_HP_extSurfaceTub,
          gasVol=Ec_HP_gasVol,
          fluidVol=Ec_HP_fluidVol,
          metalVol=Ec_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_HP_Tstart_G_In,
          Tstart_G_Out=Ec_HP_Tstart_G_Out,
          Tstart_M_In=Ec_HP_Tstart_M_In,
          Tstart_M_Out=Ec_HP_Tstart_M_Out,
          Tstart_F_In=Ec_HP_Tstart_F_In,
          Tstart_F_Out=Ec_HP_Tstart_F_Out,
          hstart_F_In=Ec_HP_hstart_F_In,
          hstart_F_Out=Ec_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec) 
          annotation (extent=[20,-10; 40,10]);
        replaceable Components.HE Sh_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_LP_N_G,
          N_F=Sh_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidLPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Sh,
          exchSurface_G=Sh_LP_exchSurface_G,
          exchSurface_F=Sh_LP_exchSurface_F,
          extSurfaceTub=Sh_LP_extSurfaceTub,
          gasVol=Sh_LP_gasVol,
          fluidVol=Sh_LP_fluidVol,
          metalVol=Sh_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh_LP_Tstart_G_In,
          Tstart_G_Out=Sh_LP_Tstart_G_Out,
          Tstart_M_In=Sh_LP_Tstart_M_In,
          Tstart_M_Out=Sh_LP_Tstart_M_Out,
          Tstart_F_In=Sh_LP_Tstart_F_In,
          Tstart_F_Out=Sh_LP_Tstart_F_Out,
          hstart_F_In=Sh_LP_hstart_F_In,
          hstart_F_Out=Sh_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Sh) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_LP_N_G,
          N_F=Sh_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidLPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Sh,
          exchSurface_G=Sh_LP_exchSurface_G,
          exchSurface_F=Sh_LP_exchSurface_F,
          extSurfaceTub=Sh_LP_extSurfaceTub,
          gasVol=Sh_LP_gasVol,
          fluidVol=Sh_LP_fluidVol,
          metalVol=Sh_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh_LP_Tstart_G_In,
          Tstart_G_Out=Sh_LP_Tstart_G_Out,
          Tstart_M_In=Sh_LP_Tstart_M_In,
          Tstart_M_Out=Sh_LP_Tstart_M_Out,
          Tstart_F_In=Sh_LP_Tstart_F_In,
          Tstart_F_Out=Sh_LP_Tstart_F_Out,
          hstart_F_In=Sh_LP_hstart_F_In,
          hstart_F_Out=Sh_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Sh) 
          annotation (extent=[-30,-10; -10,10]);
        replaceable Components.HE2ph Ev_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_LP_N_G,
          N_F=Ev_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidLPNomFlowRate_Ev,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Ev,
          exchSurface_G=Ev_LP_exchSurface_G,
          exchSurface_F=Ev_LP_exchSurface_F,
          extSurfaceTub=Ev_LP_extSurfaceTub,
          gasVol=Ev_LP_gasVol,
          fluidVol=Ev_LP_fluidVol,
          metalVol=Ev_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_LP_Tstart_G_In,
          Tstart_G_Out=Ev_LP_Tstart_G_Out,
          Tstart_M_In=Ev_LP_Tstart_M_In,
          Tstart_M_Out=Ev_LP_Tstart_M_Out,
          Tstart_F_In=Ev_LP_Tstart_F_In,
          Tstart_F_Out=Ev_LP_Tstart_F_Out,
          hstart_F_In=Ev_LP_hstart_F_In,
          hstart_F_Out=Ev_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev,
          FFtype_F=ThermoPower.Choices.Flow1D.FFtypes.NoFriction) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_LP_N_G,
          N_F=Ev_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidLPNomFlowRate_Ev,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Ev,
          exchSurface_G=Ev_LP_exchSurface_G,
          exchSurface_F=Ev_LP_exchSurface_F,
          extSurfaceTub=Ev_LP_extSurfaceTub,
          gasVol=Ev_LP_gasVol,
          fluidVol=Ev_LP_fluidVol,
          metalVol=Ev_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_LP_Tstart_G_In,
          Tstart_G_Out=Ev_LP_Tstart_G_Out,
          Tstart_M_In=Ev_LP_Tstart_M_In,
          Tstart_M_Out=Ev_LP_Tstart_M_Out,
          Tstart_F_In=Ev_LP_Tstart_F_In,
          Tstart_F_Out=Ev_LP_Tstart_F_Out,
          hstart_F_In=Ev_LP_hstart_F_In,
          hstart_F_Out=Ev_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) 
                         annotation (extent=[90,-10; 110,10]);
        replaceable Components.HE Ec_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_LP_N_G,
          N_F=Ec_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Ec,
          fluidNomFlowRate=fluidLPNomFlowRate_Ec,
          exchSurface_G=Ec_LP_exchSurface_G,
          exchSurface_F=Ec_LP_exchSurface_F,
          extSurfaceTub=Ec_LP_extSurfaceTub,
          gasVol=Ec_LP_gasVol,
          fluidVol=Ec_LP_fluidVol,
          metalVol=Ec_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_LP_Tstart_G_In,
          Tstart_G_Out=Ec_LP_Tstart_G_Out,
          Tstart_M_In=Ec_LP_Tstart_M_In,
          Tstart_M_Out=Ec_LP_Tstart_M_Out,
          Tstart_F_In=Ec_LP_Tstart_F_In,
          Tstart_F_Out=Ec_LP_Tstart_F_Out,
          hstart_F_In=Ec_LP_hstart_F_In,
          hstart_F_Out=Ec_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_LP_N_G,
          N_F=Ec_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Ec,
          fluidNomFlowRate=fluidLPNomFlowRate_Ec,
          exchSurface_G=Ec_LP_exchSurface_G,
          exchSurface_F=Ec_LP_exchSurface_F,
          extSurfaceTub=Ec_LP_extSurfaceTub,
          gasVol=Ec_LP_gasVol,
          fluidVol=Ec_LP_fluidVol,
          metalVol=Ec_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_LP_Tstart_G_In,
          Tstart_G_Out=Ec_LP_Tstart_G_Out,
          Tstart_M_In=Ec_LP_Tstart_M_In,
          Tstart_M_Out=Ec_LP_Tstart_M_Out,
          Tstart_F_In=Ec_LP_Tstart_F_In,
          Tstart_F_Out=Ec_LP_Tstart_F_Out,
          hstart_F_In=Ec_LP_hstart_F_In,
          hstart_F_Out=Ec_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec)                annotation (extent=[150,-10; 170,10]);
        Water.Mixer mixAtt(
          redeclare package Medium = FluidMedium,
          V=1,
          hstart=Sh1_HP_hstart_F_Out,
          pstart=fluidHPNomPressure_Sh,
          initOpt=if SSInit then Options.steadyState else Options.noInit) 
          annotation (extent=[-150,42; -130,62], rotation=270);
        Water.ValveLiq valveAttSh(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          pnom=pnom_attShHP,
          dpnom=dpnom_attShHP,
          wnom=wnom_attShHP,
          hstart=valShHP_hstart,
          Cv=Cv_attShHP) "valve for attemperation of the Sh" 
                                annotation (extent=[-178,68; -162,52]);
        Water.SensT Sh2HPIn_T(redeclare package Medium = FluidMedium) 
          annotation (extent=[-126,38; -146,18], rotation=90);
        Water.SensT Sh2HPOut_T(redeclare package Medium = FluidMedium) 
          annotation (extent=[-126,-20; -146,-40],
                                                 rotation=90);
        annotation (Diagram);
      equation 
        connect(SensorsBus.T_Sh2HP_In, Sh2HPIn_T.T) annotation (points=[200,-40;
              30,-40; 30,-52; -112,-52; -112,16; -130,16; -130,20],
                                                   style(
            color=84,
            rgbcolor={255,170,213},
            thickness=1));
        connect(SensorsBus.T_Sh2HP_Out, Sh2HPOut_T.T) annotation (points=[200,-40;
              30,-40; 30,-52; -130,-52; -130,-38],
                                                 style(color=84, rgbcolor={255,
                170,213}));
        connect(ActuatorsBus.theta_attShHP, valveAttSh.theta) annotation (
            points=[200,-70; -170,-70; -170,53.6],
                                                 style(
            color=52,
            rgbcolor={213,255,170},
            thickness=1));
        connect(valveAttSh.inlet, LiquidWaterIn) annotation (points=[-178,60;
              -200,60], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(mixAtt.in2, valveAttSh.outlet) annotation (points=[-146,59.9;
              -150,59.9; -150,60; -162,60], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(mixAtt.in1, Sh1_HP.waterOut) annotation (points=[-134,60; -114,
              60; -114,-40; -100,-40; -100,-10], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh2HPOut_T.inlet, Sh2_HP.waterOut) annotation (points=[-140,-24;
              -140,-10], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh2_HP.waterIn, Sh2HPIn_T.outlet) annotation (points=[-140,10;
              -140,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh2HPIn_T.inlet, mixAtt.out) annotation (points=[-140,34; -140,
              42], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh1_HP.waterIn, Sh_HP_In) annotation (points=[-100,10; -100,68;
              -160,68; -160,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.waterOut, Ev_HP_Out) annotation (points=[-60,-10; -60,-40;
              -80,-40; -80,72; -130,72; -130,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.waterIn, Ev_HP_In) annotation (points=[-60,10; -60,76;
              -100,76; -100,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_HP.waterOut, Ec_HP_Out) annotation (points=[30,-10; 30,-40;
              10,-40; 10,80; -70,80; -70,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.waterIn, Sh_LP_In) annotation (points=[-20,10; -20,52; 40,
              52; 40,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_HP.waterIn, Ec_HP_In) annotation (points=[30,10; 30,84; -40,
              84; -40,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.waterOut, Sh_LP_Out) annotation (points=[-20,-10; -20,-80;
              100,-80; 100,-100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_HP_Out, Sh2HPOut_T.outlet) annotation (points=[-100,-100;
              -100,-80; -140,-80; -140,-36; -140,-36], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_LP.waterIn, Ev_LP_In) annotation (points=[100,10; 100,100],
            style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_LP.waterOut, Ev_LP_Out) annotation (points=[100,-10; 100,-40;
              68,-40; 68,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_LP.waterOut, Ec_LP_Out) annotation (points=[160,-10; 160,-40;
              130,-40; 130,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_LP.waterIn, Ec_LP_In) annotation (points=[160,10; 160,100;
              160,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_LP.gasOut, GasOut) annotation (points=[170,0; 185,0; 185,
              1.77636e-015; 200,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_LP.gasIn, Ev_LP.gasOut) annotation (points=[150,0; 110,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_LP.gasIn, Ec_HP.gasOut) annotation (points=[90,0; 40,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_HP.gasIn, Sh_LP.gasOut) annotation (points=[20,0; -10,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.gasIn, Ev_HP.gasOut) annotation (points=[-30,0; -50,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.gasIn, Sh1_HP.gasOut) annotation (points=[-70,0; -90,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh1_HP.gasIn, Sh2_HP.gasOut) annotation (points=[-110,0; -130,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh2_HP.gasIn, GasIn) annotation (points=[-150,0; -175,0; -175,
              1.77636e-015; -200,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end HEG_2L;
      
      model HEG_2LRh "Heat Exchangers Group with two pressure level and reheat" 
        extends Interfaces.HEG_2LRh(Rh1_IP_Tstart_G_In = Sh1_HP_Tstart_G_In,
                                    Rh1_IP_Tstart_G_Out = Sh1_HP_Tstart_G_Out,
                                    Rh2_IP_Tstart_G_In = Sh2_HP_Tstart_G_In,
                                    Rh2_IP_Tstart_G_Out = Sh2_HP_Tstart_G_Out,
                                    Rh2_IP_N_G = Sh2_HP_N_G,
                                    Rh1_IP_N_G = Sh1_HP_N_G,
                                    Rh2_IP_gasVol = Sh2_HP_gasVol,
                                    Rh1_IP_gasVol = Sh1_HP_gasVol);
        
        parameter Real rhomcm 
          "Metal heat capacity per unit volume (density by specific heat capacity) [J/m^3.K]";
        parameter SI.ThermalConductivity lambda 
          "Thermal conductivity of the metal";
        constant Real pi=Modelica.Constants.pi;
        
        //Valves parameters
        parameter Real Cv_attShHP 
          "Cv (US) flow coefficient, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter SI.Pressure pnom_attShHP 
          "Nominal inlet pressure, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter SI.Pressure dpnom_attShHP 
          "Nominal pressure drop, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter SI.MassFlowRate wnom_attShHP 
          "Nominal mass flowrate, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter SI.SpecificEnthalpy valShHP_hstart 
          "Specific enthalpy start value, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter Real Cv_attRhIP 
          "Cv (US) flow coefficient, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        parameter SI.Pressure pnom_attRhIP 
          "Nominal inlet pressure, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        parameter SI.Pressure dpnom_attRhIP 
          "Nominal pressure drop, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        parameter SI.MassFlowRate wnom_attRhIP 
          "Nominal mass flowrate, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        parameter SI.SpecificEnthalpy valRhIP_hstart 
          "Specific enthalpy start value, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        
        replaceable Components.ParHE_att ShHP_RhIP(
          Cv_valA=Cv_attShHP,
          pnom_valA=pnom_attShHP,
          dpnom_valA=dpnom_attShHP,
          wnom_valA=wnom_attShHP,
          hstart_valA=valShHP_hstart,
          Cv_valB=Cv_attRhIP,
          pnom_valB=pnom_attRhIP,
          dpnom_valB=dpnom_attRhIP,
          wnom_valB=wnom_attRhIP,
          hstart_valB=valRhIP_hstart,
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Sh,
          fluidNomPressure_A=fluidHPNomPressure_Sh,
          fluidNomPressure_B=fluidIPNomPressure_Rh,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Rh,
          rhomcm_A_p1=rhomcm,
          rhomcm_B_p1=rhomcm,
          rhomcm_A_p2=rhomcm,
          rhomcm_B_p2=rhomcm,
          lambda=lambda,
          N_G_p1=Sh1_HP_N_G,
          N_F_A_p1=Sh1_HP_N_F,
          N_F_B_p1=Rh1_IP_N_F,
          exchSurface_G_A_p1=Sh1_HP_exchSurface_G,
          exchSurface_G_B_p1=Rh1_IP_exchSurface_G,
          exchSurface_F_A_p1=Sh1_HP_exchSurface_F,
          exchSurface_F_B_p1=Rh1_IP_exchSurface_F,
          extSurfaceTub_A_p1=Sh1_HP_extSurfaceTub,
          extSurfaceTub_B_p1=Rh1_IP_extSurfaceTub,
          gasVol_p1=Sh1_HP_gasVol,
          fluidVol_A_p1=Sh1_HP_fluidVol,
          fluidVol_B_p1=Rh1_IP_fluidVol,
          metalVol_A_p1=Sh1_HP_metalVol,
          metalVol_B_p1=Rh1_IP_metalVol,
          N_G_p2=Sh2_HP_N_G,
          N_F_A_p2=Sh2_HP_N_F,
          N_F_B_p2=Rh2_IP_N_F,
          exchSurface_G_A_p2=Sh2_HP_exchSurface_G,
          exchSurface_G_B_p2=Rh2_IP_exchSurface_G,
          exchSurface_F_A_p2=Sh2_HP_exchSurface_F,
          exchSurface_F_B_p2=Rh2_IP_exchSurface_F,
          extSurfaceTub_A_p2=Sh2_HP_extSurfaceTub,
          extSurfaceTub_B_p2=Rh2_IP_extSurfaceTub,
          gasVol_p2=Sh2_HP_gasVol,
          fluidVol_A_p2=Sh2_HP_fluidVol,
          fluidVol_B_p2=Rh2_IP_fluidVol,
          metalVol_A_p2=Sh2_HP_metalVol,
          metalVol_B_p2=Rh2_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In_p1=Sh1_HP_Tstart_G_In,
          Tstart_G_Out_p1=Sh1_HP_Tstart_G_Out,
          Tstart_M_A_In_p1=Sh1_HP_Tstart_M_In,
          Tstart_M_A_Out_p1=Sh1_HP_Tstart_M_Out,
          Tstart_F_A_In_p1=Sh1_HP_Tstart_F_In,
          Tstart_F_A_Out_p1=Sh1_HP_Tstart_F_Out,
          hstart_F_A_In_p1=Sh1_HP_hstart_F_In,
          hstart_F_A_Out_p1=Sh1_HP_hstart_F_Out,
          Tstart_M_B_In_p1=Rh1_IP_Tstart_M_In,
          Tstart_M_B_Out_p1=Rh1_IP_Tstart_M_Out,
          Tstart_F_B_In_p1=Rh1_IP_Tstart_F_In,
          Tstart_F_B_Out_p1=Rh1_IP_Tstart_F_Out,
          hstart_F_B_In_p1=Rh1_IP_hstart_F_In,
          hstart_F_B_Out_p1=Rh1_IP_hstart_F_Out,
          Tstart_G_In_p2=Sh2_HP_Tstart_G_In,
          Tstart_G_Out_p2=Sh2_HP_Tstart_G_Out,
          Tstart_M_A_In_p2=Sh2_HP_Tstart_M_In,
          Tstart_M_A_Out_p2=Sh2_HP_Tstart_M_Out,
          Tstart_F_A_In_p2=Sh2_HP_Tstart_F_In,
          Tstart_F_A_Out_p2=Sh2_HP_Tstart_F_Out,
          hstart_F_A_In_p2=Sh2_HP_hstart_F_In,
          hstart_F_A_Out_p2=Sh2_HP_hstart_F_Out,
          Tstart_M_B_In_p2=Rh2_IP_Tstart_M_In,
          Tstart_M_B_Out_p2=Rh2_IP_Tstart_M_Out,
          Tstart_F_B_In_p2=Rh2_IP_Tstart_F_In,
          Tstart_F_B_Out_p2=Rh2_IP_Tstart_F_Out,
          hstart_F_B_In_p2=Rh2_IP_hstart_F_In,
          hstart_F_B_Out_p2=Rh2_IP_hstart_F_Out,
          use_T=use_T_Sh) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.ParallelHE_Att(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Sh,
          fluidNomPressure_A=fluidHPNomPressure_Sh,
          fluidNomPressure_B=fluidIPNomPressure_Rh,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Rh,
          rhomcm_A_p1=rhomcm,
          rhomcm_B_p1=rhomcm,
          rhomcm_A_p2=rhomcm,
          rhomcm_B_p2=rhomcm,
          lambda=lambda,
          N_G_p1=Sh1_HP_N_G,
          N_F_A_p1=Sh1_HP_N_F,
          N_F_B_p1=Rh1_IP_N_F,
          exchSurface_G_A_p1=Sh1_HP_exchSurface_G,
          exchSurface_G_B_p1=Rh1_IP_exchSurface_G,
          exchSurface_F_A_p1=Sh1_HP_exchSurface_F,
          exchSurface_F_B_p1=Rh1_IP_exchSurface_F,
          extSurfaceTub_A_p1=Sh1_HP_extSurfaceTub,
          extSurfaceTub_B_p1=Rh1_IP_extSurfaceTub,
          gasVol_p1=Sh1_HP_gasVol,
          fluidVol_A_p1=Sh1_HP_fluidVol,
          fluidVol_B_p1=Rh1_IP_fluidVol,
          metalVol_A_p1=Sh1_HP_metalVol,
          metalVol_B_p1=Rh1_IP_metalVol,
          N_G_p2=Sh2_HP_N_G,
          N_F_A_p2=Sh2_HP_N_F,
          N_F_B_p2=Rh2_IP_N_F,
          exchSurface_G_A_p2=Sh2_HP_exchSurface_G,
          exchSurface_G_B_p2=Rh2_IP_exchSurface_G,
          exchSurface_F_A_p2=Sh2_HP_exchSurface_F,
          exchSurface_F_B_p2=Rh2_IP_exchSurface_F,
          extSurfaceTub_A_p2=Sh2_HP_extSurfaceTub,
          extSurfaceTub_B_p2=Rh2_IP_extSurfaceTub,
          gasVol_p2=Sh2_HP_gasVol,
          fluidVol_A_p2=Sh2_HP_fluidVol,
          fluidVol_B_p2=Rh2_IP_fluidVol,
          metalVol_A_p2=Sh2_HP_metalVol,
          metalVol_B_p2=Rh2_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In_p1=Sh1_HP_Tstart_G_In,
          Tstart_G_Out_p1=Sh1_HP_Tstart_G_Out,
          Tstart_M_A_In_p1=Sh1_HP_Tstart_M_In,
          Tstart_M_A_Out_p1=Sh1_HP_Tstart_M_Out,
          Tstart_F_A_In_p1=Sh1_HP_Tstart_F_In,
          Tstart_F_A_Out_p1=Sh1_HP_Tstart_F_Out,
          hstart_F_A_In_p1=Sh1_HP_hstart_F_In,
          hstart_F_A_Out_p1=Sh1_HP_hstart_F_Out,
          Tstart_M_B_In_p1=Rh1_IP_Tstart_M_In,
          Tstart_M_B_Out_p1=Rh1_IP_Tstart_M_Out,
          Tstart_F_B_In_p1=Rh1_IP_Tstart_F_In,
          Tstart_F_B_Out_p1=Rh1_IP_Tstart_F_Out,
          hstart_F_B_In_p1=Rh1_IP_hstart_F_In,
          hstart_F_B_Out_p1=Rh1_IP_hstart_F_Out,
          Tstart_G_In_p2=Sh2_HP_Tstart_G_In,
          Tstart_G_Out_p2=Sh2_HP_Tstart_G_Out,
          Tstart_M_A_In_p2=Sh2_HP_Tstart_M_In,
          Tstart_M_A_Out_p2=Sh2_HP_Tstart_M_Out,
          Tstart_F_A_In_p2=Sh2_HP_Tstart_F_In,
          Tstart_F_A_Out_p2=Sh2_HP_Tstart_F_Out,
          hstart_F_A_In_p2=Sh2_HP_hstart_F_In,
          hstart_F_A_Out_p2=Sh2_HP_hstart_F_Out,
          Tstart_M_B_In_p2=Rh2_IP_Tstart_M_In,
          Tstart_M_B_Out_p2=Rh2_IP_Tstart_M_Out,
          Tstart_F_B_In_p2=Rh2_IP_Tstart_F_In,
          Tstart_F_B_Out_p2=Rh2_IP_Tstart_F_Out,
          hstart_F_B_In_p2=Rh2_IP_hstart_F_In,
          hstart_F_B_Out_p2=Rh2_IP_hstart_F_Out,
          use_T=use_T_Sh)         annotation (extent=[-150,-10; -130,10]);
        replaceable Components.HE2ph Ev_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_HP_N_G,
          N_F=Ev_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ev,
          fluidNomPressure=fluidHPNomPressure_Ev,
          exchSurface_G=Ev_HP_exchSurface_G,
          exchSurface_F=Ev_HP_exchSurface_F,
          extSurfaceTub=Ev_HP_extSurfaceTub,
          gasVol=Ev_HP_gasVol,
          fluidVol=Ev_HP_fluidVol,
          metalVol=Ev_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_HP_Tstart_G_In,
          Tstart_G_Out=Ev_HP_Tstart_G_Out,
          Tstart_M_In=Ev_HP_Tstart_M_In,
          Tstart_M_Out=Ev_HP_Tstart_M_Out,
          Tstart_F_In=Ev_HP_Tstart_F_In,
          Tstart_F_Out=Ev_HP_Tstart_F_Out,
          hstart_F_In=Ev_HP_hstart_F_In,
          hstart_F_Out=Ev_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_HP_N_G,
          N_F=Ev_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ev,
          fluidNomPressure=fluidHPNomPressure_Ev,
          exchSurface_G=Ev_HP_exchSurface_G,
          exchSurface_F=Ev_HP_exchSurface_F,
          extSurfaceTub=Ev_HP_extSurfaceTub,
          gasVol=Ev_HP_gasVol,
          fluidVol=Ev_HP_fluidVol,
          metalVol=Ev_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_HP_Tstart_G_In,
          Tstart_G_Out=Ev_HP_Tstart_G_Out,
          Tstart_M_In=Ev_HP_Tstart_M_In,
          Tstart_M_Out=Ev_HP_Tstart_M_Out,
          Tstart_F_In=Ev_HP_Tstart_F_In,
          Tstart_F_Out=Ev_HP_Tstart_F_Out,
          hstart_F_In=Ev_HP_hstart_F_In,
          hstart_F_Out=Ev_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) 
          annotation (extent=[-70,-10; -50,10]);
        replaceable Components.HE Ec_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_HP_N_G,
          N_F=Ec_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ec,
          fluidNomPressure=fluidHPNomPressure_Ec,
          exchSurface_G=Ec_HP_exchSurface_G,
          exchSurface_F=Ec_HP_exchSurface_F,
          extSurfaceTub=Ec_HP_extSurfaceTub,
          gasVol=Ec_HP_gasVol,
          fluidVol=Ec_HP_fluidVol,
          metalVol=Ec_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_HP_Tstart_G_In,
          Tstart_G_Out=Ec_HP_Tstart_G_Out,
          Tstart_M_In=Ec_HP_Tstart_M_In,
          Tstart_M_Out=Ec_HP_Tstart_M_Out,
          Tstart_F_In=Ec_HP_Tstart_F_In,
          Tstart_F_Out=Ec_HP_Tstart_F_Out,
          hstart_F_In=Ec_HP_hstart_F_In,
          hstart_F_Out=Ec_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_HP_N_G,
          N_F=Ec_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ec,
          fluidNomPressure=fluidHPNomPressure_Ec,
          exchSurface_G=Ec_HP_exchSurface_G,
          exchSurface_F=Ec_HP_exchSurface_F,
          extSurfaceTub=Ec_HP_extSurfaceTub,
          gasVol=Ec_HP_gasVol,
          fluidVol=Ec_HP_fluidVol,
          metalVol=Ec_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_HP_Tstart_G_In,
          Tstart_G_Out=Ec_HP_Tstart_G_Out,
          Tstart_M_In=Ec_HP_Tstart_M_In,
          Tstart_M_Out=Ec_HP_Tstart_M_Out,
          Tstart_F_In=Ec_HP_Tstart_F_In,
          Tstart_F_Out=Ec_HP_Tstart_F_Out,
          hstart_F_In=Ec_HP_hstart_F_In,
          hstart_F_Out=Ec_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec)          annotation (extent=[38,-10; 58,10]);
        replaceable Components.HE Sh_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_LP_N_G,
          N_F=Sh_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidLPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Sh,
          exchSurface_G=Sh_LP_exchSurface_G,
          exchSurface_F=Sh_LP_exchSurface_F,
          gasVol=Sh_LP_gasVol,
          fluidVol=Sh_LP_fluidVol,
          metalVol=Sh_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh_LP_Tstart_G_In,
          Tstart_G_Out=Sh_LP_Tstart_G_Out,
          Tstart_M_In=Sh_LP_Tstart_M_In,
          Tstart_M_Out=Sh_LP_Tstart_M_Out,
          Tstart_F_In=Sh_LP_Tstart_F_In,
          Tstart_F_Out=Sh_LP_Tstart_F_Out,
          hstart_F_In=Sh_LP_hstart_F_In,
          hstart_F_Out=Sh_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Sh_LP_extSurfaceTub,
          use_T=use_T_Sh) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_LP_N_G,
          N_F=Sh_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidLPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Sh,
          exchSurface_G=Sh_LP_exchSurface_G,
          exchSurface_F=Sh_LP_exchSurface_F,
          extSurfaceTub=Sh_LP_extSurfaceTub,
          gasVol=Sh_LP_gasVol,
          fluidVol=Sh_LP_fluidVol,
          metalVol=Sh_LP_metalVol,
          use_T=use_T,
          SSInit=SSInit,
          Tstart_G_In=Sh_LP_Tstart_G_In,
          Tstart_G_Out=Sh_LP_Tstart_G_Out,
          Tstart_M_In=Sh_LP_Tstart_M_In,
          Tstart_M_Out=Sh_LP_Tstart_M_Out,
          Tstart_F_In=Sh_LP_Tstart_F_In,
          Tstart_F_Out=Sh_LP_Tstart_F_Out,
          hstart_F_In=Sh_LP_hstart_F_In,
          hstart_F_Out=Sh_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda)           annotation (extent=[-6,-10; 14,10]);
        replaceable Components.HE2ph Ev_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_LP_N_G,
          N_F=Ev_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidLPNomFlowRate_Ev,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Ev,
          exchSurface_G=Ev_LP_exchSurface_G,
          exchSurface_F=Ev_LP_exchSurface_F,
          gasVol=Ev_LP_gasVol,
          fluidVol=Ev_LP_fluidVol,
          metalVol=Ev_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_LP_Tstart_G_In,
          Tstart_G_Out=Ev_LP_Tstart_G_Out,
          Tstart_M_In=Ev_LP_Tstart_M_In,
          Tstart_M_Out=Ev_LP_Tstart_M_Out,
          Tstart_F_In=Ev_LP_Tstart_F_In,
          Tstart_F_Out=Ev_LP_Tstart_F_Out,
          hstart_F_In=Ev_LP_hstart_F_In,
          hstart_F_Out=Ev_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_LP_extSurfaceTub,
          use_T=use_T_Ev) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_LP_N_G,
          N_F=Ev_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidLPNomFlowRate_Ev,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Ev,
          exchSurface_G=Ev_LP_exchSurface_G,
          exchSurface_F=Ev_LP_exchSurface_F,
          extSurfaceTub=Ev_LP_extSurfaceTub,
          gasVol=Ev_LP_gasVol,
          fluidVol=Ev_LP_fluidVol,
          metalVol=Ev_LP_metalVol,
          use_T=use_T,
          SSInit=SSInit,
          Tstart_G_In=Ev_LP_Tstart_G_In,
          Tstart_G_Out=Ev_LP_Tstart_G_Out,
          Tstart_M_In=Ev_LP_Tstart_M_In,
          Tstart_M_Out=Ev_LP_Tstart_M_Out,
          Tstart_F_In=Ev_LP_Tstart_F_In,
          Tstart_F_Out=Ev_LP_Tstart_F_Out,
          hstart_F_In=Ev_LP_hstart_F_In,
          hstart_F_Out=Ev_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda) annotation (extent=[90,-10; 110,10]);
        replaceable Components.HE Ec_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_LP_N_G,
          N_F=Ec_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Ec,
          fluidNomFlowRate=fluidLPNomFlowRate_Ec,
          exchSurface_G=Ec_LP_exchSurface_G,
          exchSurface_F=Ec_LP_exchSurface_F,
          extSurfaceTub=Ec_LP_extSurfaceTub,
          gasVol=Ec_LP_gasVol,
          fluidVol=Ec_LP_fluidVol,
          metalVol=Ec_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_LP_Tstart_G_In,
          Tstart_G_Out=Ec_LP_Tstart_G_Out,
          Tstart_M_In=Ec_LP_Tstart_M_In,
          Tstart_M_Out=Ec_LP_Tstart_M_Out,
          Tstart_F_In=Ec_LP_Tstart_F_In,
          Tstart_F_Out=Ec_LP_Tstart_F_Out,
          hstart_F_In=Ec_LP_hstart_F_In,
          hstart_F_Out=Ec_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec) 
                         extends Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_LP_N_G,
          N_F=Ec_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidLPNomPressure_Ec,
          fluidNomFlowRate=fluidLPNomFlowRate_Ec,
          exchSurface_G=Ec_LP_exchSurface_G,
          exchSurface_F=Ec_LP_exchSurface_F,
          extSurfaceTub=Ec_LP_extSurfaceTub,
          gasVol=Ec_LP_gasVol,
          fluidVol=Ec_LP_fluidVol,
          metalVol=Ec_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_LP_Tstart_G_In,
          Tstart_G_Out=Ec_LP_Tstart_G_Out,
          Tstart_M_In=Ec_LP_Tstart_M_In,
          Tstart_M_Out=Ec_LP_Tstart_M_Out,
          Tstart_F_In=Ec_LP_Tstart_F_In,
          Tstart_F_Out=Ec_LP_Tstart_F_Out,
          hstart_F_In=Ec_LP_hstart_F_In,
          hstart_F_Out=Ec_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec)                annotation (extent=[150,-10; 170,10]);
        Water.SensT RhIPOut_T(redeclare package Medium = FluidMedium) 
          annotation (extent=[-132,-66; -112,-46],
                                                 style(thickness=2));
        Water.SensT ShHPOut_T(redeclare package Medium = FluidMedium) 
          annotation (extent=[-132,-86; -112,-66],
                                                 rotation=0);
        annotation (Diagram, Icon);
      equation 
        connect(SensorsBus.T_Sh2HP_In, ShHP_RhIP.T_intermedA) annotation (
            points=[200,-40; -100,-40; -100,6; -106,6; -106,5.9; -129.9,5.9],
                                                                 style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.T_Rh2IP_In, ShHP_RhIP.T_intermedB) annotation (
            points=[200,-40; -100,-40; -100,3.9; -129.9,3.9],    style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.T_Rh2IP_Out, RhIPOut_T.T) annotation (points=[200,-40;
              -100,-40; -100,-50; -114,-50],
                                          style(color=84, rgbcolor={255,170,213}));
        connect(ActuatorsBus.theta_attShHP, ShHP_RhIP.theta_valveA) annotation (
           points=[200,-70; -88,-70; -88,-4.2; -129.9,-4.2],  style(color=52,
              rgbcolor={213,255,170}));
        connect(ActuatorsBus.theta_attRhIP, ShHP_RhIP.theta_valveB) annotation (
           points=[200,-70; -88,-70; -88,-6.3; -129.9,-6.3],  style(color=52,
              rgbcolor={213,255,170}));
        connect(SensorsBus.T_Sh2HP_Out, ShHPOut_T.T) annotation (points=[200,-40;
              -100,-40; -100,-70; -114,-70],       style(color=84, rgbcolor={
                255,170,213}));
        connect(RhIPOut_T.inlet, ShHP_RhIP.waterOutB) annotation (points=[-128,-60;
              -136,-60; -136,-10],          style(thickness=2));
        connect(ShHPOut_T.inlet, ShHP_RhIP.waterOutA) annotation (points=[-128,
              -80; -144,-80; -144,-10], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_HP_Out, ShHPOut_T.outlet) annotation (points=[-100,-100;
              -100,-80; -116,-80], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_LP.waterIn, Ec_LP_In) annotation (points=[160,10; 160,100],
            style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_LP.waterOut, Ec_LP_Out) annotation (points=[160,-10; 160,-32;
              130,-32; 130,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_LP.waterOut, Ev_LP_Out) annotation (points=[100,-10; 100,-30;
              68,-30; 68,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_LP.waterIn, Ev_LP_In) annotation (points=[100,10; 100,100],
            style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_LP.gasIn, Ev_LP.gasOut) annotation (points=[150,0; 110,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(GasOut, Ec_LP.gasOut) annotation (points=[200,1.77636e-015; 185,
              1.77636e-015; 185,0; 170,0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_LP.gasIn, Ec_HP.gasOut) annotation (points=[90,0; 58,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_HP.gasIn, Sh_LP.gasOut) annotation (points=[38,0; 14,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.gasIn, Ev_HP.gasOut) annotation (points=[-6,0; -50,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.gasIn, ShHP_RhIP.gasOut) annotation (points=[-70,0; -130,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ShHP_RhIP.gasIn, GasIn) annotation (points=[-150,0; -180,0;
              -180,1.77636e-015; -200,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ShHP_RhIP.LiquidWaterIn, LiquidWaterIn) annotation (points=[
              -150,-4.2; -162,-4.2; -162,-4; -172,-4; -172,60; -200,60], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ShHP_RhIP.waterInA, Sh_HP_In) annotation (points=[-144,10; -144,
              60; -160,60; -160,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ShHP_RhIP.waterInB, Rh_IP_In) annotation (points=[-136,10; -136,
              40; -94,40; -94,-80; -50,-80; -50,-100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(RhIPOut_T.outlet, Rh_IP_Out) annotation (points=[-116,-60; 0,
              -60; 0,-100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.waterOut, Ev_HP_Out) annotation (points=[-60,-10; -60,-26;
              -80,-26; -80,48; -130,48; -130,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.waterIn, Ev_HP_In) annotation (points=[-60,10; -60,52;
              -100,52; -100,100; -100,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.waterIn, Sh_LP_In) annotation (points=[4,10; 4,80; 40,80;
              40,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_HP.waterIn, Ec_HP_In) annotation (points=[48,10; 48,68; -40,
              68; -40,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec_HP.waterOut, Ec_HP_Out) annotation (points=[48,-10; 48,-30;
              28,-30; 28,60; -70,60; -70,100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.waterOut, Sh_LP_Out) annotation (points=[4,-10; 4,-52;
              100,-52; 100,-100], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end HEG_2LRh;
      
      model HEG_3LRh 
        "Heat Exchangers Group with three pressure level and reheat" 
        extends Interfaces.HEG_3LRh(Ec1_HP_Tstart_G_In = Ec_IP_Tstart_G_In,
                                    Ec1_HP_Tstart_G_Out = Ec_IP_Tstart_G_Out,
                                    Rh1_IP_Tstart_G_In = Sh1_HP_Tstart_G_In,
                                    Rh1_IP_Tstart_G_Out = Sh1_HP_Tstart_G_Out,
                                    Rh2_IP_Tstart_G_In = Sh2_HP_Tstart_G_In,
                                    Rh2_IP_Tstart_G_Out = Sh2_HP_Tstart_G_Out,
                                    Rh2_IP_N_G = Sh2_HP_N_G,
                                    Rh1_IP_N_G = Sh1_HP_N_G,
                                    Rh2_IP_gasVol = Sh2_HP_gasVol,
                                    Rh1_IP_gasVol = Sh1_HP_gasVol,
                                    Ec_IP_N_G = Ec1_HP_N_G,
                                    Ec_IP_gasVol = Ec1_HP_gasVol);
        
        parameter Real rhomcm 
          "Metal heat capacity per unit volume (density by specific heat capacity) [J/m^3.K]";
        parameter SI.ThermalConductivity lambda 
          "Thermal conductivity of the metal";
        constant Real pi=Modelica.Constants.pi;
        
        //Valves parameters
        parameter Real Cv_attShHP 
          "Cv (US) flow coefficient, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter SI.Pressure pnom_attShHP 
          "Nominal inlet pressure, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter SI.Pressure dpnom_attShHP 
          "Nominal pressure drop, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter SI.MassFlowRate wnom_attShHP 
          "Nominal mass flowrate, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter SI.SpecificEnthalpy valShHP_hstart 
          "Specific enthalpy start value, valve for Sh_HP attemperation" annotation (dialog(group = "Attemperation Sh"));
        parameter Real Cv_attRhIP 
          "Cv (US) flow coefficient, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        parameter SI.Pressure pnom_attRhIP 
          "Nominal inlet pressure, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        parameter SI.Pressure dpnom_attRhIP 
          "Nominal pressure drop, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        parameter SI.MassFlowRate wnom_attRhIP 
          "Nominal mass flowrate, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        parameter SI.SpecificEnthalpy valRhIP_hstart 
          "Specific enthalpy start value, valve for Rh_IP attemperation" annotation (dialog(group = "Attemperation Rh"));
        
        replaceable Components.ParHE_att ShHP_RhIP(
          Cv_valA=Cv_attShHP,
          pnom_valA=pnom_attShHP,
          dpnom_valA=dpnom_attShHP,
          wnom_valA=wnom_attShHP,
          hstart_valA=valShHP_hstart,
          Cv_valB=Cv_attRhIP,
          pnom_valB=pnom_attRhIP,
          dpnom_valB=dpnom_attRhIP,
          wnom_valB=wnom_attRhIP,
          hstart_valB=valRhIP_hstart,
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Sh,
          fluidNomPressure_A=fluidHPNomPressure_Sh,
          fluidNomPressure_B=fluidIPNomPressure_Rh,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Rh,
          rhomcm_A_p1=rhomcm,
          rhomcm_B_p1=rhomcm,
          rhomcm_A_p2=rhomcm,
          rhomcm_B_p2=rhomcm,
          lambda=lambda,
          N_G_p1=Sh1_HP_N_G,
          N_F_A_p1=Sh1_HP_N_F,
          N_F_B_p1=Rh1_IP_N_F,
          exchSurface_G_A_p1=Sh1_HP_exchSurface_G,
          exchSurface_G_B_p1=Rh1_IP_exchSurface_G,
          exchSurface_F_A_p1=Sh1_HP_exchSurface_F,
          exchSurface_F_B_p1=Rh1_IP_exchSurface_F,
          extSurfaceTub_A_p1=Sh1_HP_extSurfaceTub,
          extSurfaceTub_B_p1=Rh1_IP_extSurfaceTub,
          gasVol_p1=Sh1_HP_gasVol,
          fluidVol_A_p1=Sh1_HP_fluidVol,
          fluidVol_B_p1=Rh1_IP_fluidVol,
          metalVol_A_p1=Sh1_HP_metalVol,
          metalVol_B_p1=Rh1_IP_metalVol,
          N_G_p2=Sh2_HP_N_G,
          N_F_A_p2=Sh2_HP_N_F,
          N_F_B_p2=Rh2_IP_N_F,
          exchSurface_G_A_p2=Sh2_HP_exchSurface_G,
          exchSurface_G_B_p2=Rh2_IP_exchSurface_G,
          exchSurface_F_A_p2=Sh2_HP_exchSurface_F,
          exchSurface_F_B_p2=Rh2_IP_exchSurface_F,
          extSurfaceTub_A_p2=Sh2_HP_extSurfaceTub,
          extSurfaceTub_B_p2=Rh2_IP_extSurfaceTub,
          gasVol_p2=Sh2_HP_gasVol,
          fluidVol_A_p2=Sh2_HP_fluidVol,
          fluidVol_B_p2=Rh2_IP_fluidVol,
          metalVol_A_p2=Sh2_HP_metalVol,
          metalVol_B_p2=Rh2_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In_p1=Sh1_HP_Tstart_G_In,
          Tstart_G_Out_p1=Sh1_HP_Tstart_G_Out,
          Tstart_M_A_In_p1=Sh1_HP_Tstart_M_In,
          Tstart_M_A_Out_p1=Sh1_HP_Tstart_M_Out,
          Tstart_F_A_In_p1=Sh1_HP_Tstart_F_In,
          Tstart_F_A_Out_p1=Sh1_HP_Tstart_F_Out,
          hstart_F_A_In_p1=Sh1_HP_hstart_F_In,
          hstart_F_A_Out_p1=Sh1_HP_hstart_F_Out,
          Tstart_M_B_In_p1=Rh1_IP_Tstart_M_In,
          Tstart_M_B_Out_p1=Rh1_IP_Tstart_M_Out,
          Tstart_F_B_In_p1=Rh1_IP_Tstart_F_In,
          Tstart_F_B_Out_p1=Rh1_IP_Tstart_F_Out,
          hstart_F_B_In_p1=Rh1_IP_hstart_F_In,
          hstart_F_B_Out_p1=Rh1_IP_hstart_F_Out,
          Tstart_G_In_p2=Sh2_HP_Tstart_G_In,
          Tstart_G_Out_p2=Sh2_HP_Tstart_G_Out,
          Tstart_M_A_In_p2=Sh2_HP_Tstart_M_In,
          Tstart_M_A_Out_p2=Sh2_HP_Tstart_M_Out,
          Tstart_F_A_In_p2=Sh2_HP_Tstart_F_In,
          Tstart_F_A_Out_p2=Sh2_HP_Tstart_F_Out,
          hstart_F_A_In_p2=Sh2_HP_hstart_F_In,
          hstart_F_A_Out_p2=Sh2_HP_hstart_F_Out,
          Tstart_M_B_In_p2=Rh2_IP_Tstart_M_In,
          Tstart_M_B_Out_p2=Rh2_IP_Tstart_M_Out,
          Tstart_F_B_In_p2=Rh2_IP_Tstart_F_In,
          Tstart_F_B_Out_p2=Rh2_IP_Tstart_F_Out,
          hstart_F_B_In_p2=Rh2_IP_hstart_F_In,
          hstart_F_B_Out_p2=Rh2_IP_hstart_F_Out,
          use_T=use_T_Sh) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.ParallelHE_Att(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Sh,
          fluidNomPressure_A=fluidHPNomPressure_Sh,
          fluidNomPressure_B=fluidIPNomPressure_Rh,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Rh,
          rhomcm_A_p1=rhomcm,
          rhomcm_B_p1=rhomcm,
          rhomcm_A_p2=rhomcm,
          rhomcm_B_p2=rhomcm,
          lambda=lambda,
          N_G_p1=Sh1_HP_N_G,
          N_F_A_p1=Sh1_HP_N_F,
          N_F_B_p1=Rh1_IP_N_F,
          exchSurface_G_A_p1=Sh1_HP_exchSurface_G,
          exchSurface_G_B_p1=Rh1_IP_exchSurface_G,
          exchSurface_F_A_p1=Sh1_HP_exchSurface_F,
          exchSurface_F_B_p1=Rh1_IP_exchSurface_F,
          extSurfaceTub_A_p1=Sh1_HP_extSurfaceTub,
          extSurfaceTub_B_p1=Rh1_IP_extSurfaceTub,
          gasVol_p1=Sh1_HP_gasVol,
          fluidVol_A_p1=Sh1_HP_fluidVol,
          fluidVol_B_p1=Rh1_IP_fluidVol,
          metalVol_A_p1=Sh1_HP_metalVol,
          metalVol_B_p1=Rh1_IP_metalVol,
          N_G_p2=Sh2_HP_N_G,
          N_F_A_p2=Sh2_HP_N_F,
          N_F_B_p2=Rh2_IP_N_F,
          exchSurface_G_A_p2=Sh2_HP_exchSurface_G,
          exchSurface_G_B_p2=Rh2_IP_exchSurface_G,
          exchSurface_F_A_p2=Sh2_HP_exchSurface_F,
          exchSurface_F_B_p2=Rh2_IP_exchSurface_F,
          extSurfaceTub_A_p2=Sh2_HP_extSurfaceTub,
          extSurfaceTub_B_p2=Rh2_IP_extSurfaceTub,
          gasVol_p2=Sh2_HP_gasVol,
          fluidVol_A_p2=Sh2_HP_fluidVol,
          fluidVol_B_p2=Rh2_IP_fluidVol,
          metalVol_A_p2=Sh2_HP_metalVol,
          metalVol_B_p2=Rh2_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In_p1=Sh1_HP_Tstart_G_In,
          Tstart_G_Out_p1=Sh1_HP_Tstart_G_Out,
          Tstart_M_A_In_p1=Sh1_HP_Tstart_M_In,
          Tstart_M_A_Out_p1=Sh1_HP_Tstart_M_Out,
          Tstart_F_A_In_p1=Sh1_HP_Tstart_F_In,
          Tstart_F_A_Out_p1=Sh1_HP_Tstart_F_Out,
          hstart_F_A_In_p1=Sh1_HP_hstart_F_In,
          hstart_F_A_Out_p1=Sh1_HP_hstart_F_Out,
          Tstart_M_B_In_p1=Rh1_IP_Tstart_M_In,
          Tstart_M_B_Out_p1=Rh1_IP_Tstart_M_Out,
          Tstart_F_B_In_p1=Rh1_IP_Tstart_F_In,
          Tstart_F_B_Out_p1=Rh1_IP_Tstart_F_Out,
          hstart_F_B_In_p1=Rh1_IP_hstart_F_In,
          hstart_F_B_Out_p1=Rh1_IP_hstart_F_Out,
          Tstart_G_In_p2=Sh2_HP_Tstart_G_In,
          Tstart_G_Out_p2=Sh2_HP_Tstart_G_Out,
          Tstart_M_A_In_p2=Sh2_HP_Tstart_M_In,
          Tstart_M_A_Out_p2=Sh2_HP_Tstart_M_Out,
          Tstart_F_A_In_p2=Sh2_HP_Tstart_F_In,
          Tstart_F_A_Out_p2=Sh2_HP_Tstart_F_Out,
          hstart_F_A_In_p2=Sh2_HP_hstart_F_In,
          hstart_F_A_Out_p2=Sh2_HP_hstart_F_Out,
          Tstart_M_B_In_p2=Rh2_IP_Tstart_M_In,
          Tstart_M_B_Out_p2=Rh2_IP_Tstart_M_Out,
          Tstart_F_B_In_p2=Rh2_IP_Tstart_F_In,
          Tstart_F_B_Out_p2=Rh2_IP_Tstart_F_Out,
          hstart_F_B_In_p2=Rh2_IP_hstart_F_In,
          hstart_F_B_Out_p2=Rh2_IP_hstart_F_Out,
          use_T=use_T_Sh)         annotation (extent=[-268,-14; -240,14]);
        annotation (Diagram, Icon);
        Water.SensT ShHPOut_T(redeclare package Medium = FluidMedium) 
          annotation (extent=[-238,-116; -258,-136],
                                                 rotation=180);
        Water.SensT RhIPOut_T(redeclare package Medium = FluidMedium) 
          annotation (extent=[-212,-114; -192,-94]);
        
        replaceable Components.HE Ec2_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec2_HP_N_G,
          N_F=Ec2_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ec,
          fluidNomPressure=fluidHPNomPressure_Ec,
          exchSurface_G=Ec2_HP_exchSurface_G,
          exchSurface_F=Ec2_HP_exchSurface_F,
          extSurfaceTub=Ec2_HP_extSurfaceTub,
          gasVol=Ec2_HP_gasVol,
          fluidVol=Ec2_HP_fluidVol,
          metalVol=Ec2_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec2_HP_Tstart_G_In,
          Tstart_G_Out=Ec2_HP_Tstart_G_Out,
          Tstart_M_In=Ec2_HP_Tstart_M_In,
          Tstart_M_Out=Ec2_HP_Tstart_M_Out,
          Tstart_F_In=Ec2_HP_Tstart_F_In,
          Tstart_F_Out=Ec2_HP_Tstart_F_Out,
          hstart_F_In=Ec2_HP_hstart_F_In,
          hstart_F_Out=Ec2_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec2_HP_N_G,
          N_F=Ec2_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ec,
          fluidNomPressure=fluidHPNomPressure_Ec,
          exchSurface_G=Ec2_HP_exchSurface_G,
          exchSurface_F=Ec2_HP_exchSurface_F,
          extSurfaceTub=Ec2_HP_extSurfaceTub,
          gasVol=Ec2_HP_gasVol,
          fluidVol=Ec2_HP_fluidVol,
          metalVol=Ec2_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec2_HP_Tstart_G_In,
          Tstart_G_Out=Ec2_HP_Tstart_G_Out,
          Tstart_M_In=Ec2_HP_Tstart_M_In,
          Tstart_M_Out=Ec2_HP_Tstart_M_Out,
          Tstart_F_In=Ec2_HP_Tstart_F_In,
          Tstart_F_Out=Ec2_HP_Tstart_F_Out,
          hstart_F_In=Ec2_HP_hstart_F_In,
          hstart_F_Out=Ec2_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec)          annotation (extent=[-72,-12; -48,12]);
        replaceable Components.ParHE Ec1HP_EcIP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec1_HP_N_G,
          N_F_A=Ec1_HP_N_F,
          N_F_B=Ec_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G_A=Ec1_HP_exchSurface_G,
          exchSurface_G_B=Ec_IP_exchSurface_G,
          exchSurface_F_A=Ec1_HP_exchSurface_F,
          exchSurface_F_B=Ec_IP_exchSurface_F,
          gasVol=Ec1_HP_gasVol,
          fluidVol_A=Ec1_HP_fluidVol,
          fluidVol_B=Ec_IP_fluidVol,
          metalVol_A=Ec1_HP_metalVol,
          metalVol_B=Ec_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec1_HP_Tstart_G_In,
          Tstart_G_Out=Ec1_HP_Tstart_G_Out,
          Tstart_M_A_In=Ec1_HP_Tstart_M_In,
          Tstart_M_A_Out=Ec1_HP_Tstart_M_Out,
          Tstart_F_A_In=Ec1_HP_Tstart_F_In,
          Tstart_F_A_Out=Ec1_HP_Tstart_F_Out,
          hstart_F_A_In=Ec1_HP_hstart_F_In,
          hstart_F_A_Out=Ec1_HP_hstart_F_Out,
          Tstart_M_B_In=Ec_IP_Tstart_M_In,
          Tstart_M_B_Out=Ec_IP_Tstart_M_Out,
          Tstart_F_B_In=Ec_IP_Tstart_F_In,
          Tstart_F_B_Out=Ec_IP_Tstart_F_Out,
          hstart_F_B_In=Ec_IP_hstart_F_In,
          hstart_F_B_Out=Ec_IP_hstart_F_Out,
          lambda=lambda,
          extSurfaceTub_A=Ec1_HP_extSurfaceTub,
          extSurfaceTub_B=Ec_IP_extSurfaceTub,
          use_T=use_T_Ec,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Ec,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Ec,
          fluidNomPressure_A=fluidHPNomPressure_Ec,
          fluidNomPressure_B=fluidIPNomPressure_Ec,
          rhomcm_A=rhomcm,
          rhomcm_B=rhomcm) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.ParallelHE(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec1_HP_N_G,
          N_F_A=Ec1_HP_N_F,
          N_F_B=Ec_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G_A=Ec1_HP_exchSurface_G,
          exchSurface_G_B=Ec_IP_exchSurface_G,
          exchSurface_F_A=Ec1_HP_exchSurface_F,
          exchSurface_F_B=Ec_IP_exchSurface_F,
          gasVol=Ec1_HP_gasVol,
          fluidVol_A=Ec1_HP_fluidVol,
          fluidVol_B=Ec_IP_fluidVol,
          metalVol_A=Ec1_HP_metalVol,
          metalVol_B=Ec_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec1_HP_Tstart_G_In,
          Tstart_G_Out=Ec1_HP_Tstart_G_Out,
          Tstart_M_A_In=Ec1_HP_Tstart_M_In,
          Tstart_M_A_Out=Ec1_HP_Tstart_M_Out,
          Tstart_F_A_In=Ec1_HP_Tstart_F_In,
          Tstart_F_A_Out=Ec1_HP_Tstart_F_Out,
          hstart_F_A_In=Ec1_HP_hstart_F_In,
          hstart_F_A_Out=Ec1_HP_hstart_F_Out,
          Tstart_M_B_In=Ec_IP_Tstart_M_In,
          Tstart_M_B_Out=Ec_IP_Tstart_M_Out,
          Tstart_F_B_In=Ec_IP_Tstart_F_In,
          Tstart_F_B_Out=Ec_IP_Tstart_F_Out,
          hstart_F_B_In=Ec_IP_hstart_F_In,
          hstart_F_B_Out=Ec_IP_hstart_F_Out,
          lambda=lambda,
          extSurfaceTub_A=Ec1_HP_extSurfaceTub,
          extSurfaceTub_B=Ec_IP_extSurfaceTub,
          use_T=use_T_Ec,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Ec,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Ec,
          fluidNomPressure_A=fluidHPNomPressure_Ec,
          fluidNomPressure_B=fluidIPNomPressure_Ec,
          rhomcm_A=rhomcm,
          rhomcm_B=rhomcm) 
                         annotation (extent=[128,-12; 152,12]);
        replaceable Components.HE Ec_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_LP_N_G,
          N_F=Ec_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ec_LP_exchSurface_G,
          exchSurface_F=Ec_LP_exchSurface_F,
          gasVol=Ec_LP_gasVol,
          fluidVol=Ec_LP_fluidVol,
          metalVol=Ec_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_LP_Tstart_G_In,
          Tstart_G_Out=Ec_LP_Tstart_G_Out,
          Tstart_M_In=Ec_LP_Tstart_M_In,
          Tstart_M_Out=Ec_LP_Tstart_M_Out,
          Tstart_F_In=Ec_LP_Tstart_F_In,
          Tstart_F_Out=Ec_LP_Tstart_F_Out,
          hstart_F_In=Ec_LP_hstart_F_In,
          hstart_F_Out=Ec_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ec_LP_extSurfaceTub,
          use_T=use_T_Ec,
          fluidNomFlowRate=fluidLPNomFlowRate_Ec,
          fluidNomPressure=fluidLPNomPressure_Ec) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_LP_N_G,
          N_F=Ec_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ec_LP_exchSurface_G,
          exchSurface_F=Ec_LP_exchSurface_F,
          gasVol=Ec_LP_gasVol,
          fluidVol=Ec_LP_fluidVol,
          metalVol=Ec_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_LP_Tstart_G_In,
          Tstart_G_Out=Ec_LP_Tstart_G_Out,
          Tstart_M_In=Ec_LP_Tstart_M_In,
          Tstart_M_Out=Ec_LP_Tstart_M_Out,
          Tstart_F_In=Ec_LP_Tstart_F_In,
          Tstart_F_Out=Ec_LP_Tstart_F_Out,
          hstart_F_In=Ec_LP_hstart_F_In,
          hstart_F_Out=Ec_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ec_LP_extSurfaceTub,
          use_T=use_T_Ec,
          fluidNomFlowRate=fluidLPNomFlowRate_Ec,
          fluidNomPressure=fluidLPNomPressure_Ec) 
                                         annotation (extent=[248,-12; 272,12]);
        replaceable Components.HE2ph Ev_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_LP_N_G,
          N_F=Ev_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ev_LP_exchSurface_G,
          exchSurface_F=Ev_LP_exchSurface_F,
          gasVol=Ev_LP_gasVol,
          fluidVol=Ev_LP_fluidVol,
          metalVol=Ev_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_LP_Tstart_G_In,
          Tstart_G_Out=Ev_LP_Tstart_G_Out,
          Tstart_M_In=Ev_LP_Tstart_M_In,
          Tstart_M_Out=Ev_LP_Tstart_M_Out,
          Tstart_F_In=Ev_LP_Tstart_F_In,
          Tstart_F_Out=Ev_LP_Tstart_F_Out,
          hstart_F_In=Ev_LP_hstart_F_In,
          hstart_F_Out=Ev_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_LP_extSurfaceTub,
          use_T=use_T_Ev,
          fluidNomFlowRate=fluidLPNomFlowRate_Ev,
          fluidNomPressure=fluidLPNomPressure_Ev) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_LP_N_G,
          N_F=Ev_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ev_LP_exchSurface_G,
          exchSurface_F=Ev_LP_exchSurface_F,
          gasVol=Ev_LP_gasVol,
          fluidVol=Ev_LP_fluidVol,
          metalVol=Ev_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_LP_Tstart_G_In,
          Tstart_G_Out=Ev_LP_Tstart_G_Out,
          Tstart_M_In=Ev_LP_Tstart_M_In,
          Tstart_M_Out=Ev_LP_Tstart_M_Out,
          Tstart_F_In=Ev_LP_Tstart_F_In,
          Tstart_F_Out=Ev_LP_Tstart_F_Out,
          hstart_F_In=Ev_LP_hstart_F_In,
          hstart_F_Out=Ev_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_LP_extSurfaceTub,
          use_T=use_T_Ev,
          fluidNomFlowRate=fluidLPNomFlowRate_Ev,
          fluidNomPressure=fluidLPNomPressure_Ev) 
                         annotation (extent=[188,-12; 212,12]);
        replaceable Components.HE2ph Ev_IP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_IP_N_G,
          N_F=Ev_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ev_IP_exchSurface_G,
          exchSurface_F=Ev_IP_exchSurface_F,
          gasVol=Ev_IP_gasVol,
          fluidVol=Ev_IP_fluidVol,
          metalVol=Ev_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_IP_Tstart_G_In,
          Tstart_G_Out=Ev_IP_Tstart_G_Out,
          Tstart_M_In=Ev_IP_Tstart_M_In,
          Tstart_M_Out=Ev_IP_Tstart_M_Out,
          Tstart_F_In=Ev_IP_Tstart_F_In,
          Tstart_F_Out=Ev_IP_Tstart_F_Out,
          hstart_F_In=Ev_IP_hstart_F_In,
          hstart_F_Out=Ev_IP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_IP_extSurfaceTub,
          use_T=use_T_Ev,
          fluidNomFlowRate=fluidIPNomFlowRate_Ev,
          fluidNomPressure=fluidIPNomPressure_Ev) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_IP_N_G,
          N_F=Ev_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ev_IP_exchSurface_G,
          exchSurface_F=Ev_IP_exchSurface_F,
          gasVol=Ev_IP_gasVol,
          fluidVol=Ev_IP_fluidVol,
          metalVol=Ev_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_IP_Tstart_G_In,
          Tstart_G_Out=Ev_IP_Tstart_G_Out,
          Tstart_M_In=Ev_IP_Tstart_M_In,
          Tstart_M_Out=Ev_IP_Tstart_M_Out,
          Tstart_F_In=Ev_IP_Tstart_F_In,
          Tstart_F_Out=Ev_IP_Tstart_F_Out,
          hstart_F_In=Ev_IP_hstart_F_In,
          hstart_F_Out=Ev_IP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_IP_extSurfaceTub,
          use_T=use_T_Ev,
          fluidNomFlowRate=fluidIPNomFlowRate_Ev,
          fluidNomPressure=fluidIPNomPressure_Ev) 
          annotation (extent=[-12,-12; 12,12]);
        replaceable Components.HE Sh_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_LP_N_G,
          N_F=Sh_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Sh_LP_exchSurface_G,
          exchSurface_F=Sh_LP_exchSurface_F,
          gasVol=Sh_LP_gasVol,
          fluidVol=Sh_LP_fluidVol,
          metalVol=Sh_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh_LP_Tstart_G_In,
          Tstart_G_Out=Sh_LP_Tstart_G_Out,
          Tstart_M_In=Sh_LP_Tstart_M_In,
          Tstart_M_Out=Sh_LP_Tstart_M_Out,
          Tstart_F_In=Sh_LP_Tstart_F_In,
          Tstart_F_Out=Sh_LP_Tstart_F_Out,
          hstart_F_In=Sh_LP_hstart_F_In,
          hstart_F_Out=Sh_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Sh_LP_extSurfaceTub,
          use_T=use_T_Sh,
          fluidNomFlowRate=fluidLPNomFlowRate_Sh,
          fluidNomPressure=fluidLPNomPressure_Sh) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_LP_N_G,
          N_F=Sh_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Sh_LP_exchSurface_G,
          exchSurface_F=Sh_LP_exchSurface_F,
          gasVol=Sh_LP_gasVol,
          fluidVol=Sh_LP_fluidVol,
          metalVol=Sh_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh_LP_Tstart_G_In,
          Tstart_G_Out=Sh_LP_Tstart_G_Out,
          Tstart_M_In=Sh_LP_Tstart_M_In,
          Tstart_M_Out=Sh_LP_Tstart_M_Out,
          Tstart_F_In=Sh_LP_Tstart_F_In,
          Tstart_F_Out=Sh_LP_Tstart_F_Out,
          hstart_F_In=Sh_LP_hstart_F_In,
          hstart_F_Out=Sh_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Sh_LP_extSurfaceTub,
          use_T=use_T_Sh,
          fluidNomFlowRate=fluidLPNomFlowRate_Sh,
          fluidNomPressure=fluidLPNomPressure_Sh) 
                                   annotation (extent=[68,-12; 92,12]);
        replaceable Components.HE2ph Ev_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_HP_N_G,
          N_F=Ev_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ev,
          fluidNomPressure=fluidHPNomPressure_Ev,
          exchSurface_G=Ev_HP_exchSurface_G,
          exchSurface_F=Ev_HP_exchSurface_F,
          extSurfaceTub=Ev_HP_extSurfaceTub,
          gasVol=Ev_HP_gasVol,
          fluidVol=Ev_HP_fluidVol,
          metalVol=Ev_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_HP_Tstart_G_In,
          Tstart_G_Out=Ev_HP_Tstart_G_Out,
          Tstart_M_In=Ev_HP_Tstart_M_In,
          Tstart_M_Out=Ev_HP_Tstart_M_Out,
          Tstart_F_In=Ev_HP_Tstart_F_In,
          Tstart_F_Out=Ev_HP_Tstart_F_Out,
          hstart_F_In=Ev_HP_hstart_F_In,
          hstart_F_Out=Ev_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_HP_N_G,
          N_F=Ev_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ev,
          fluidNomPressure=fluidHPNomPressure_Ev,
          exchSurface_G=Ev_HP_exchSurface_G,
          exchSurface_F=Ev_HP_exchSurface_F,
          extSurfaceTub=Ev_HP_extSurfaceTub,
          gasVol=Ev_HP_gasVol,
          fluidVol=Ev_HP_fluidVol,
          metalVol=Ev_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_HP_Tstart_G_In,
          Tstart_G_Out=Ev_HP_Tstart_G_Out,
          Tstart_M_In=Ev_HP_Tstart_M_In,
          Tstart_M_Out=Ev_HP_Tstart_M_Out,
          Tstart_F_In=Ev_HP_Tstart_F_In,
          Tstart_F_Out=Ev_HP_Tstart_F_Out,
          hstart_F_In=Ev_HP_hstart_F_In,
          hstart_F_Out=Ev_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) 
          annotation (extent=[-192,-12; -168,12]);
        replaceable Components.HE Sh_IP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_IP_N_G,
          N_F=Sh_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidIPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Sh_IP_exchSurface_G,
          exchSurface_F=Sh_IP_exchSurface_F,
          extSurfaceTub=Sh_IP_extSurfaceTub,
          gasVol=Sh_IP_gasVol,
          fluidVol=Sh_IP_fluidVol,
          metalVol=Sh_IP_metalVol,
          rhomcm=rhomcm,
          use_T=use_T_Sh,
          SSInit=SSInit,
          Tstart_G_In=Sh_IP_Tstart_G_In,
          Tstart_G_Out=Sh_IP_Tstart_G_Out,
          Tstart_M_In=Sh_IP_Tstart_M_In,
          Tstart_M_Out=Sh_IP_Tstart_M_Out,
          Tstart_F_In=Sh_IP_Tstart_F_In,
          Tstart_F_Out=Sh_IP_Tstart_F_Out,
          hstart_F_In=Sh_IP_hstart_F_In,
          hstart_F_Out=Sh_IP_hstart_F_Out,
          fluidNomPressure=fluidIPNomPressure_Sh,
          lambda=lambda) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_IP_N_G,
          N_F=Sh_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidIPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidNomPressure_Sh,
          exchSurface_G=Sh_IP_exchSurface_G,
          exchSurface_F=Sh_IP_exchSurface_F,
          extSurfaceTub=Sh_IP_extSurfaceTub,
          gasVol=Sh_IP_gasVol,
          fluidVol=Sh_IP_fluidVol,
          metalVol=Sh_IP_metalVol,
          rhomcm=rhomcm,
          lambda=lamba,
          use_T=use_T_Sh,
          SSInit=SSInit,
          Tstart_G_In=Sh_IP_Tstart_G_In,
          Tstart_G_Out=Sh_IP_Tstart_G_Out,
          Tstart_M_In=Sh_IP_Tstart_M_In,
          Tstart_M_Out=Sh_IP_Tstart_M_Out,
          Tstart_F_In=Sh_IP_Tstart_F_In,
          Tstart_F_Out=Sh_IP_Tstart_F_Out,
          hstart_F_In=Sh_IP_hstart_F_In,
          hstart_F_Out=Sh_IP_hstart_F_Out) annotation (extent=[-132,-12; -108,
              12]);
        replaceable Components.BaseReader_gas stateGas_EvHPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[-160,-10; -140,10]);
        replaceable Components.BaseReader_gas stateGas_ShIPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[-100,-10; -80,10]);
        replaceable Components.BaseReader_gas stateGas_Ec2HPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[-40,-10; -20,10]);
        replaceable Components.BaseReader_gas stateGas_EvIPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[30,-10; 50,10]);
        replaceable Components.BaseReader_gas stateGas_ShLPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[100,-10; 120,10]);
        replaceable Components.BaseReader_gas stateGas_EcIPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[160,-10; 180,10]);
        replaceable Components.BaseReader_gas stateGas_EvLPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[220,-10; 240,10]);
        replaceable Components.BaseReader_water stateEvHP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-190,60; -170,40], rotation=90);
        replaceable Components.BaseReader_water stateShIP_in(
                                                  redeclare package Medium = 
              FluidMedium) extends Components.BaseReader_water( redeclare 
            package Medium = 
              FluidMedium) annotation (extent=[-130,60; -110,40], rotation=90);
        replaceable Components.BaseReader_water stateEc2HP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-70,60; -50,40],   rotation=90);
        replaceable Components.BaseReader_water stateEvIP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-10,60; 10,40],    rotation=90);
        replaceable Components.BaseReader_water stateShLP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[70,40; 90,60], rotation=270);
        replaceable Components.BaseReader_water stateEcIP_in(
                                           redeclare package Medium = 
              FluidMedium) extends Components.BaseReader_water( redeclare 
            package Medium = 
              FluidMedium) annotation (extent=[136,60; 156,40],   rotation=90);
        replaceable Components.BaseReader_water stateEvLP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[190,40; 210,60],
                                                              rotation=270);
        replaceable Components.BaseReader_water stateEcLP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[250,40; 270,60],
                                                              rotation=270);
        replaceable Components.BaseReader_water stateEvHP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = 
                     FlueGasMedium) 
                           annotation (extent=[-190,-60; -170,-40],
                                                                  rotation=270);
        replaceable Components.BaseReader_water stateShIP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-130,-40; -110,-60],
                                                                  rotation=90);
        replaceable Components.BaseReader_water stateEc2HP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-70,-60; -50,-40], rotation=270);
        replaceable Components.BaseReader_water stateEvIP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-10,-60; 10,-40],  rotation=270);
        replaceable Components.BaseReader_water stateShLP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[70,-40; 90,-60],   rotation=90);
        replaceable Components.BaseReader_water stateEcIP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[136,-60; 156,-40], rotation=270);
        replaceable Components.BaseReader_water stateEvLP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[210,-40; 190,-60],
                                                              rotation=90);
        replaceable Components.BaseReader_water stateEcLP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water(  redeclare package Medium = FluidMedium)
                           annotation (extent=[270,-40; 250,-60],
                                                              rotation=90);
        replaceable Components.BaseReader_water stateEc1HP_in(
                                           redeclare package Medium = 
              FluidMedium) extends Components.BaseReader_water( redeclare 
            package Medium = 
              FluidMedium) annotation (extent=[124,60; 144,40],   rotation=90);
        replaceable Components.BaseReader_water stateEc1HP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[124,-60; 144,-40], rotation=270);
        replaceable Components.BaseReader_gas stateGas_ShHPout(redeclare 
            package Medium = 
                     FlueGasMedium) extends Components.BaseReader_gas(redeclare 
            package Medium = FlueGasMedium) 
                             annotation (extent=[-220,-10; -200,10]);
        replaceable Components.BaseReader_water stateSh1HP_in(redeclare package
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-270,58; -250,38], rotation=90);
        replaceable Components.BaseReader_water stateRh1IP_in(redeclare package
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-258,58; -238,38], rotation=90);
        replaceable Components.BaseReader_water stateRh2IP_out(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-258,-40; -238,-60],
                                                                  rotation=90);
        replaceable Components.BaseReader_water stateSh2HP_out(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-270,-40; -250,-60],
                                                                  rotation=90);
      equation 
        connect(SensorsBus.T_Sh2HP_In, ShHP_RhIP.T_intermedA) annotation (
            points=[302,-60; -234,-60; -234,8.26; -239.86,8.26],style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.T_Rh2IP_In, ShHP_RhIP.T_intermedB) annotation (
            points=[302,-60; -234,-60; -234,5.46; -239.86,5.46],style(
            color=84,
            rgbcolor={255,170,213},
            thickness=1));
        connect(SensorsBus.T_Sh2HP_Out, ShHPOut_T.T) annotation (points=[302,-60;
              -234,-60; -234,-120; -240,-120],         style(color=84, rgbcolor=
               {255,170,213}));
        connect(SensorsBus.T_Rh2IP_Out, RhIPOut_T.T) annotation (points=[302,-60;
              -160,-60; -160,-98; -194,-98],  style(color=84, rgbcolor={255,170,
                213}));
        connect(ActuatorsBus.theta_attShHP, ShHP_RhIP.theta_valveA) annotation (
           points=[302,-100; 264,-100; 264,-92; -220,-92; -220,-5.88; -239.86,
              -5.88],                                          style(color=52,
              rgbcolor={213,255,170}));
        connect(ActuatorsBus.theta_attRhIP, ShHP_RhIP.theta_valveB) annotation (
           points=[302,-100; 264,-100; 264,-92; -220,-92; -220,-8.82; -239.86,
              -8.82],                                          style(color=52,
              rgbcolor={213,255,170}));
        connect(Ev_HP.gasOut,stateGas_EvHPout. inlet) annotation (points=[-168,0;
              -156,0],                       style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_EvHPout.outlet,Sh_IP. gasIn) annotation (points=[-144,0;
              -132,0],                                          style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_IP.gasOut,stateGas_ShIPout. inlet) annotation (points=[-108,0;
              -96,0],                                          style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_ShIPout.outlet,Ec2_HP. gasIn) annotation (points=[-84,0;
              -72,0],                                        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec2_HP.gasOut,stateGas_Ec2HPout. inlet) annotation (points=[-48,0;
              -36,0],                                        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_Ec2HPout.outlet,Ev_IP. gasIn) annotation (points=[-24,0;
              -12,0],                                        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_IP.gasOut,stateGas_EvIPout. inlet) annotation (points=[12,0; 34,
              0],                                         style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_EvIPout.outlet,Sh_LP. gasIn) annotation (points=[46,0; 68,
              0],                                      style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.gasOut,stateGas_ShLPout. inlet) annotation (points=[92,0;
              104,0],                                      style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_ShLPout.outlet,Ec1HP_EcIP. gasIn) annotation (points=[116,0;
              128,0],                                            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec1HP_EcIP.gasOut,stateGas_EcIPout. inlet) annotation (points=[152,0;
              164,0],                                            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_EcIPout.outlet,Ev_LP. gasIn) annotation (points=[176,0;
              188,0],                                     style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_LP.gasOut,stateGas_EvLPout. inlet) annotation (points=[212,0;
              224,0],                                        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_EvLPout.outlet,Ec_LP. gasIn) annotation (points=[236,0;
              248,0],                                     style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcLP_in.outlet,Ec_LP. waterIn) annotation (points=[260,44;
              260,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvLP_in.outlet,Ev_LP. waterIn) annotation (points=[200,44;
              200,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.waterIn,stateShLP_in. outlet) annotation (points=[80,12;
              80,44],     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_IP.waterIn,stateEvIP_in. outlet) annotation (points=[0,12; 0,
              44; 3.67382e-016,44],
            style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_IP.waterIn,stateShIP_in. outlet) annotation (points=[-120,12;
              -120,44],                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.waterIn,stateEvHP_in. outlet) annotation (points=[-180,12;
              -180,44], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvIP_out.inlet,Ev_IP. waterOut) annotation (points=[
              1.10215e-015,-44; 1.10215e-015,-36.5; 0,-36.5; 0,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShLP_out.inlet,Sh_LP. waterOut) annotation (points=[80,-44;
              80,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShIP_out.inlet,Sh_IP. waterOut) annotation (points=[-120,-44;
              -120,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcLP_out.inlet,Ec_LP. waterOut) annotation (points=[260,-44;
              260,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvLP_out.inlet,Ev_LP. waterOut) annotation (points=[200,-44;
              200,-12],                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvHP_out.inlet,Ev_HP. waterOut) annotation (points=[-180,-44;
              -180,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec1HP_EcIP.waterInB,stateEcIP_in. outlet) annotation (points=[144.8,12;
              146,12; 146,44],           style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc2HP_out.inlet,Ec2_HP. waterOut) annotation (points=[-60,-44;
              -60,-12],      style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec2_HP.waterIn,stateEc2HP_in. outlet) annotation (points=[-60,12;
              -60,44],     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc2HP_in.inlet,stateEc1HP_out. outlet) annotation (points=[-60,56;
              -60,80; -40,80; -40,-90; 134,-90; 134,-56],            style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcIP_out.inlet,Ec1HP_EcIP. waterOutB) annotation (points=[146,-44;
              146,-12; 144.8,-12],          style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc1HP_out.inlet,Ec1HP_EcIP. waterOutA) annotation (points=[134,-44;
              134,-12; 135.2,-12],           style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc1HP_in.outlet,Ec1HP_EcIP. waterInA) annotation (points=[134,44;
              135.2,44; 135.2,12],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.gasIn, stateGas_ShHPout.outlet) annotation (points=[-192,
              0; -204,0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_ShHPout.inlet, ShHP_RhIP.gasOut) annotation (points=[-216,0;
              -234,0; -234,1.77636e-015; -240,1.77636e-015],         style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateRh2IP_out.inlet, ShHP_RhIP.waterOutB) annotation (points=[
              -248,-44; -248,-14; -248.4,-14], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateSh2HP_out.inlet, ShHP_RhIP.waterOutA) annotation (points=[
              -260,-44; -260,-14; -259.6,-14], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateRh1IP_in.outlet, ShHP_RhIP.waterInB) annotation (points=[-248,42;
              -248,14; -248.4,14],          style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateSh1HP_in.outlet, ShHP_RhIP.waterInA) annotation (points=[-260,42;
              -260,14; -259.6,14],          style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcLP_in.inlet, Ec_LP_In) annotation (points=[260,56; 260,
              150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvLP_in.inlet, Ev_LP_In) annotation (points=[200,56; 200,
              150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShLP_in.inlet, Sh_LP_In) annotation (points=[80,56; 80,130;
              140,130; 140,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcIP_in.inlet, Ec_IP_In) annotation (points=[146,56; 146,
              120; 60,120; 60,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcIP_out.outlet, Ec_IP_Out) annotation (points=[146,-56;
              146,-70; 30,-70; 30,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc1HP_in.inlet, Ev_HP_In) annotation (points=[134,56; 134,
              110; -140,110; -140,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShIP_in.inlet, Sh_IP_In) annotation (points=[-120,56; -120,
              90; -60,90; -60,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvIP_in.inlet, Ev_IP_In) annotation (points=[-3.67382e-016,
              56; 0,56; 0,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvIP_out.outlet, Ev_IP_Out) annotation (points=[
              -1.10215e-015,-56; 0,-64; 0,-70; -30,-70; -30,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShLP_out.outlet, Sh_LP_Out) annotation (points=[80,-56; 80,
              -110; 200,-110; 200,-150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateSh1HP_in.inlet, Sh_HP_In) annotation (points=[-260,54;
              -260,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvHP_in.inlet, Ec_HP_In) annotation (points=[-180,56; -180,
              110; -200,110; -200,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvHP_out.outlet, Ev_HP_Out) annotation (points=[-180,-56;
              -180,-70; -210,-70; -210,100; -230,100; -230,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShIP_out.outlet, Sh_IP_Out) annotation (points=[-120,-56;
              -120,-100; 0,-100; 0,-150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_In, stateRh1IP_in.inlet) annotation (points=[-130,-150;
              -130,-120; -230,-120; -230,70; -248,70; -248,54], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvLP_out.outlet, Ev_LP_Out) annotation (points=[200,-56;
              200,-70; 170,-70; 170,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcLP_out.outlet, Ec_LP_Out) annotation (points=[260,-56;
              260,-68; 230,-68; 230,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc2HP_out.outlet, Ec_HP_Out) annotation (points=[-60,-56;
              -60,-70; -150,-70; -150,110; -170,110; -170,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ShHPOut_T.inlet, stateSh2HP_out.outlet) annotation (points=[
              -254,-130; -260,-130; -260,-56], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(RhIPOut_T.inlet, stateRh2IP_out.outlet) annotation (points=[
              -208,-108; -248,-108; -248,-56], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(RhIPOut_T.outlet, Rh_IP_Out) annotation (points=[-196,-108; -70,
              -108; -70,-150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ShHPOut_T.outlet, Sh_HP_Out) annotation (points=[-242,-130;
              -200,-130; -200,-150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ShHP_RhIP.gasIn, GasIn) annotation (points=[-268,1.77636e-015;
              -280,1.77636e-015; -280,1.77636e-015; -300,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ShHP_RhIP.LiquidWaterIn, LiquidWaterIn) annotation (points=[-268,
              -5.88; -280,-5.88; -280,90; -300,90],      style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(GasOut, Ec_LP.gasOut) annotation (points=[300,1.77636e-015; 288,
              -3.1606e-021; 288,0; 272,0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end HEG_3LRh;
      
      model HEG_3LRh_wa 
        "Heat Exchangers Group with three pressure level and reheat, without attemperation" 
        extends ThermoPower.PowerPlants.HRSG.Interfaces.HEG_3LRh_wa(
                                    Ec1_HP_Tstart_G_In = Ec_IP_Tstart_G_In,
                                    Ec1_HP_Tstart_G_Out = Ec_IP_Tstart_G_Out,
                                    Rh1_IP_Tstart_G_In = Sh1_HP_Tstart_G_In,
                                    Rh1_IP_Tstart_G_Out = Sh1_HP_Tstart_G_Out,
                                    Rh2_IP_Tstart_G_In = Sh2_HP_Tstart_G_In,
                                    Rh2_IP_Tstart_G_Out = Sh2_HP_Tstart_G_Out,
                                    Rh2_IP_N_G = Sh2_HP_N_G,
                                    Rh1_IP_N_G = Sh1_HP_N_G,
                                    Rh2_IP_gasVol = Sh2_HP_gasVol,
                                    Rh1_IP_gasVol = Sh1_HP_gasVol,
                                    Ec_IP_N_G = Ec1_HP_N_G,
                                    Ec_IP_gasVol = Ec1_HP_gasVol);
        
        parameter Real rhomcm 
          "Metal heat capacity per unit volume (density by specific heat capacity) [J/m^3.K]";
        parameter SI.ThermalConductivity lambda 
          "Thermal conductivity of the metal";
        constant Real pi=Modelica.Constants.pi;
        
        annotation (Diagram, Icon,
          DymolaStoredErrors);
        replaceable Components.ParHE Sh1HP_Rh1IP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          SSInit=SSInit,
          lambda=lambda,
          N_G=Sh1_HP_N_G,
          N_F_A=Sh1_HP_N_F,
          N_F_B=Rh1_IP_N_F,
          exchSurface_G_A=Sh1_HP_exchSurface_G,
          exchSurface_G_B=Rh1_IP_exchSurface_G,
          exchSurface_F_A=Sh1_HP_exchSurface_F,
          exchSurface_F_B=Rh1_IP_exchSurface_F,
          extSurfaceTub_A=Sh1_HP_extSurfaceTub,
          extSurfaceTub_B=Rh1_IP_extSurfaceTub,
          gasVol=Sh1_HP_gasVol,
          fluidVol_A=Sh1_HP_fluidVol,
          fluidVol_B=Rh1_IP_fluidVol,
          metalVol_A=Sh1_HP_metalVol,
          metalVol_B=Rh1_IP_metalVol,
          use_T=use_T_Sh,
          Tstart_G_In=Sh1_HP_Tstart_G_In,
          Tstart_G_Out=Sh1_HP_Tstart_G_Out,
          Tstart_M_A_In=Sh1_HP_Tstart_M_In,
          Tstart_M_A_Out=Sh1_HP_Tstart_M_Out,
          Tstart_F_A_In=Sh1_HP_Tstart_F_In,
          Tstart_F_A_Out=Sh1_HP_Tstart_F_Out,
          hstart_F_A_In=Sh1_HP_hstart_F_In,
          hstart_F_A_Out=Sh1_HP_hstart_F_Out,
          Tstart_M_B_In=Rh1_IP_Tstart_M_In,
          Tstart_M_B_Out=Rh1_IP_Tstart_M_Out,
          Tstart_F_B_In=Rh1_IP_Tstart_F_In,
          Tstart_F_B_Out=Rh1_IP_Tstart_F_Out,
          hstart_F_B_In=Rh1_IP_hstart_F_In,
          hstart_F_B_Out=Rh1_IP_hstart_F_Out,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Sh,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Rh,
          fluidNomPressure_A=fluidHPNomPressure_Sh,
          fluidNomPressure_B=fluidIPNomPressure_Rh,
          rhomcm_A=rhomcm,
          rhomcm_B=rhomcm) 
                         extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.ParallelHE(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          SSInit=SSInit,
          lambda=lambda,
          N_G=Sh1_HP_N_G,
          N_F_A=Sh1_HP_N_F,
          N_F_B=Rh1_IP_N_F,
          exchSurface_G_A=Sh1_HP_exchSurface_G,
          exchSurface_G_B=Rh1_IP_exchSurface_G,
          exchSurface_F_A=Sh1_HP_exchSurface_F,
          exchSurface_F_B=Rh1_IP_exchSurface_F,
          extSurfaceTub_A=Sh1_HP_extSurfaceTub,
          extSurfaceTub_B=Rh1_IP_extSurfaceTub,
          gasVol=Sh1_HP_gasVol,
          fluidVol_A=Sh1_HP_fluidVol,
          fluidVol_B=Rh1_IP_fluidVol,
          metalVol_A=Sh1_HP_metalVol,
          metalVol_B=Rh1_IP_metalVol,
          use_T=use_T_Sh,
          Tstart_G_In=Sh1_HP_Tstart_G_In,
          Tstart_G_Out=Sh1_HP_Tstart_G_Out,
          Tstart_M_A_In=Sh1_HP_Tstart_M_In,
          Tstart_M_A_Out=Sh1_HP_Tstart_M_Out,
          Tstart_F_A_In=Sh1_HP_Tstart_F_In,
          Tstart_F_A_Out=Sh1_HP_Tstart_F_Out,
          hstart_F_A_In=Sh1_HP_hstart_F_In,
          hstart_F_A_Out=Sh1_HP_hstart_F_Out,
          Tstart_M_B_In=Rh1_IP_Tstart_M_In,
          Tstart_M_B_Out=Rh1_IP_Tstart_M_Out,
          Tstart_F_B_In=Rh1_IP_Tstart_F_In,
          Tstart_F_B_Out=Rh1_IP_Tstart_F_Out,
          hstart_F_B_In=Rh1_IP_hstart_F_In,
          hstart_F_B_Out=Rh1_IP_hstart_F_Out,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Sh,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Rh,
          fluidNomPressure_A=fluidHPNomPressure_Sh,
          fluidNomPressure_B=fluidIPNomPressure_Rh,
          rhomcm_A=rhomcm,
          rhomcm_B=rhomcm) 
                         annotation (extent=[-228,-12; -204,12]);
        replaceable Components.ParHE Sh2HP_Rh2IP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          SSInit=SSInit,
          lambda=lambda,
          use_T=use_T_Ec,
          N_G=Sh2_HP_N_G,
          N_F_A=Sh2_HP_N_F,
          N_F_B=Rh2_IP_N_F,
          exchSurface_G_A=Sh2_HP_exchSurface_G,
          exchSurface_G_B=Rh2_IP_exchSurface_G,
          exchSurface_F_A=Sh2_HP_exchSurface_F,
          exchSurface_F_B=Rh2_IP_exchSurface_F,
          extSurfaceTub_A=Sh2_HP_extSurfaceTub,
          extSurfaceTub_B=Rh2_IP_extSurfaceTub,
          gasVol=Sh2_HP_gasVol,
          fluidVol_A=Sh2_HP_fluidVol,
          fluidVol_B=Rh2_IP_fluidVol,
          metalVol_A=Sh2_HP_metalVol,
          Tstart_G_In=Sh2_HP_Tstart_G_In,
          Tstart_G_Out=Sh2_HP_Tstart_G_Out,
          Tstart_M_A_In=Sh2_HP_Tstart_M_In,
          Tstart_M_A_Out=Sh2_HP_Tstart_M_Out,
          Tstart_F_A_In=Sh2_HP_Tstart_F_In,
          Tstart_F_A_Out=Sh2_HP_Tstart_F_Out,
          hstart_F_A_In=Sh2_HP_hstart_F_In,
          hstart_F_A_Out=Sh2_HP_hstart_F_Out,
          Tstart_M_B_In=Rh2_IP_Tstart_M_In,
          Tstart_M_B_Out=Rh2_IP_Tstart_M_Out,
          Tstart_F_B_In=Rh2_IP_Tstart_F_In,
          Tstart_F_B_Out=Rh2_IP_Tstart_F_Out,
          hstart_F_B_In=Rh2_IP_hstart_F_In,
          hstart_F_B_Out=Rh2_IP_hstart_F_Out,
          metalVol_B=Rh2_IP_metalVol,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Sh,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Rh,
          fluidNomPressure_A=fluidHPNomPressure_Sh,
          fluidNomPressure_B=fluidIPNomPressure_Rh,
          rhomcm_A=rhomcm,
          rhomcm_B=rhomcm) 
                         extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.ParallelHE(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          SSInit=SSInit,
          lambda=lambda,
          use_T=use_T_Ec,
          N_G=Sh2_HP_N_G,
          N_F_A=Sh2_HP_N_F,
          N_F_B=Rh2_IP_N_F,
          exchSurface_G_A=Sh2_HP_exchSurface_G,
          exchSurface_G_B=Rh2_IP_exchSurface_G,
          exchSurface_F_A=Sh2_HP_exchSurface_F,
          exchSurface_F_B=Rh2_IP_exchSurface_F,
          extSurfaceTub_A=Sh2_HP_extSurfaceTub,
          extSurfaceTub_B=Rh2_IP_extSurfaceTub,
          gasVol=Sh2_HP_gasVol,
          fluidVol_A=Sh2_HP_fluidVol,
          fluidVol_B=Rh2_IP_fluidVol,
          metalVol_A=Sh2_HP_metalVol,
          Tstart_G_In=Sh2_HP_Tstart_G_In,
          Tstart_G_Out=Sh2_HP_Tstart_G_Out,
          Tstart_M_A_In=Sh2_HP_Tstart_M_In,
          Tstart_M_A_Out=Sh2_HP_Tstart_M_Out,
          Tstart_F_A_In=Sh2_HP_Tstart_F_In,
          Tstart_F_A_Out=Sh2_HP_Tstart_F_Out,
          hstart_F_A_In=Sh2_HP_hstart_F_In,
          hstart_F_A_Out=Sh2_HP_hstart_F_Out,
          Tstart_M_B_In=Rh2_IP_Tstart_M_In,
          Tstart_M_B_Out=Rh2_IP_Tstart_M_Out,
          Tstart_F_B_In=Rh2_IP_Tstart_F_In,
          Tstart_F_B_Out=Rh2_IP_Tstart_F_Out,
          hstart_F_B_In=Rh2_IP_hstart_F_In,
          hstart_F_B_Out=Rh2_IP_hstart_F_Out,
          metalVol_B=Rh2_IP_metalVol,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Sh,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Rh,
          fluidNomPressure_A=fluidHPNomPressure_Sh,
          fluidNomPressure_B=fluidIPNomPressure_Rh,
          rhomcm_A=rhomcm,
          rhomcm_B=rhomcm) 
                         annotation (extent=[-280,-12; -256,12]);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas 
          stateGas_Sh2HP_Sh1HP(                         redeclare package 
            Medium = FlueGasMedium) annotation (extent=[-252,-10; -232,10]);
        replaceable Components.BaseReader_water stateRh1IP_out(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-240,-50; -220,-30],
                                                                  rotation=180);
        replaceable Components.BaseReader_water stateSh1HP_out(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-270,30; -250,50], rotation=180);
        replaceable Components.HE Ec2_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec2_HP_N_G,
          N_F=Ec2_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ec,
          fluidNomPressure=fluidHPNomPressure_Ec,
          exchSurface_G=Ec2_HP_exchSurface_G,
          exchSurface_F=Ec2_HP_exchSurface_F,
          extSurfaceTub=Ec2_HP_extSurfaceTub,
          gasVol=Ec2_HP_gasVol,
          fluidVol=Ec2_HP_fluidVol,
          metalVol=Ec2_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec2_HP_Tstart_G_In,
          Tstart_G_Out=Ec2_HP_Tstart_G_Out,
          Tstart_M_In=Ec2_HP_Tstart_M_In,
          Tstart_M_Out=Ec2_HP_Tstart_M_Out,
          Tstart_F_In=Ec2_HP_Tstart_F_In,
          Tstart_F_Out=Ec2_HP_Tstart_F_Out,
          hstart_F_In=Ec2_HP_hstart_F_In,
          hstart_F_Out=Ec2_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec2_HP_N_G,
          N_F=Ec2_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ec,
          fluidNomPressure=fluidHPNomPressure_Ec,
          exchSurface_G=Ec2_HP_exchSurface_G,
          exchSurface_F=Ec2_HP_exchSurface_F,
          extSurfaceTub=Ec2_HP_extSurfaceTub,
          gasVol=Ec2_HP_gasVol,
          fluidVol=Ec2_HP_fluidVol,
          metalVol=Ec2_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec2_HP_Tstart_G_In,
          Tstart_G_Out=Ec2_HP_Tstart_G_Out,
          Tstart_M_In=Ec2_HP_Tstart_M_In,
          Tstart_M_Out=Ec2_HP_Tstart_M_Out,
          Tstart_F_In=Ec2_HP_Tstart_F_In,
          Tstart_F_Out=Ec2_HP_Tstart_F_Out,
          hstart_F_In=Ec2_HP_hstart_F_In,
          hstart_F_Out=Ec2_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ec)          annotation (extent=[-52,-12; -28,12]);
        replaceable Components.ParHE Ec1HP_EcIP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec1_HP_N_G,
          N_F_A=Ec1_HP_N_F,
          N_F_B=Ec_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G_A=Ec1_HP_exchSurface_G,
          exchSurface_G_B=Ec_IP_exchSurface_G,
          exchSurface_F_A=Ec1_HP_exchSurface_F,
          exchSurface_F_B=Ec_IP_exchSurface_F,
          gasVol=Ec1_HP_gasVol,
          fluidVol_A=Ec1_HP_fluidVol,
          fluidVol_B=Ec_IP_fluidVol,
          metalVol_A=Ec1_HP_metalVol,
          metalVol_B=Ec_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec1_HP_Tstart_G_In,
          Tstart_G_Out=Ec1_HP_Tstart_G_Out,
          Tstart_M_A_In=Ec1_HP_Tstart_M_In,
          Tstart_M_A_Out=Ec1_HP_Tstart_M_Out,
          Tstart_F_A_In=Ec1_HP_Tstart_F_In,
          Tstart_F_A_Out=Ec1_HP_Tstart_F_Out,
          hstart_F_A_In=Ec1_HP_hstart_F_In,
          hstart_F_A_Out=Ec1_HP_hstart_F_Out,
          Tstart_M_B_In=Ec_IP_Tstart_M_In,
          Tstart_M_B_Out=Ec_IP_Tstart_M_Out,
          Tstart_F_B_In=Ec_IP_Tstart_F_In,
          Tstart_F_B_Out=Ec_IP_Tstart_F_Out,
          hstart_F_B_In=Ec_IP_hstart_F_In,
          hstart_F_B_Out=Ec_IP_hstart_F_Out,
          lambda=lambda,
          extSurfaceTub_A=Ec1_HP_extSurfaceTub,
          extSurfaceTub_B=Ec_IP_extSurfaceTub,
          use_T=use_T_Ec,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Ec,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Ec,
          fluidNomPressure_A=fluidHPNomPressure_Ec,
          fluidNomPressure_B=fluidIPNomPressure_Ec,
          rhomcm_A=rhomcm,
          rhomcm_B=rhomcm) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.ParallelHE(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec1_HP_N_G,
          N_F_A=Ec1_HP_N_F,
          N_F_B=Ec_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G_A=Ec1_HP_exchSurface_G,
          exchSurface_G_B=Ec_IP_exchSurface_G,
          exchSurface_F_A=Ec1_HP_exchSurface_F,
          exchSurface_F_B=Ec_IP_exchSurface_F,
          gasVol=Ec1_HP_gasVol,
          fluidVol_A=Ec1_HP_fluidVol,
          fluidVol_B=Ec_IP_fluidVol,
          metalVol_A=Ec1_HP_metalVol,
          metalVol_B=Ec_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec1_HP_Tstart_G_In,
          Tstart_G_Out=Ec1_HP_Tstart_G_Out,
          Tstart_M_A_In=Ec1_HP_Tstart_M_In,
          Tstart_M_A_Out=Ec1_HP_Tstart_M_Out,
          Tstart_F_A_In=Ec1_HP_Tstart_F_In,
          Tstart_F_A_Out=Ec1_HP_Tstart_F_Out,
          hstart_F_A_In=Ec1_HP_hstart_F_In,
          hstart_F_A_Out=Ec1_HP_hstart_F_Out,
          Tstart_M_B_In=Ec_IP_Tstart_M_In,
          Tstart_M_B_Out=Ec_IP_Tstart_M_Out,
          Tstart_F_B_In=Ec_IP_Tstart_F_In,
          Tstart_F_B_Out=Ec_IP_Tstart_F_Out,
          hstart_F_B_In=Ec_IP_hstart_F_In,
          hstart_F_B_Out=Ec_IP_hstart_F_Out,
          lambda=lambda,
          extSurfaceTub_A=Ec1_HP_extSurfaceTub,
          extSurfaceTub_B=Ec_IP_extSurfaceTub,
          use_T=use_T_Ec,
          fluidNomFlowRate_A=fluidHPNomFlowRate_Ec,
          fluidNomFlowRate_B=fluidIPNomFlowRate_Ec,
          fluidNomPressure_A=fluidHPNomPressure_Ec,
          fluidNomPressure_B=fluidIPNomPressure_Ec,
          rhomcm_A=rhomcm,
          rhomcm_B=rhomcm) 
                         annotation (extent=[128,-12; 152,12]);
        replaceable Components.HE Ec_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_LP_N_G,
          N_F=Ec_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ec_LP_exchSurface_G,
          exchSurface_F=Ec_LP_exchSurface_F,
          gasVol=Ec_LP_gasVol,
          fluidVol=Ec_LP_fluidVol,
          metalVol=Ec_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_LP_Tstart_G_In,
          Tstart_G_Out=Ec_LP_Tstart_G_Out,
          Tstart_M_In=Ec_LP_Tstart_M_In,
          Tstart_M_Out=Ec_LP_Tstart_M_Out,
          Tstart_F_In=Ec_LP_Tstart_F_In,
          Tstart_F_Out=Ec_LP_Tstart_F_Out,
          hstart_F_In=Ec_LP_hstart_F_In,
          hstart_F_Out=Ec_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ec_LP_extSurfaceTub,
          use_T=use_T_Ec,
          fluidNomFlowRate=fluidLPNomFlowRate_Ec,
          fluidNomPressure=fluidLPNomPressure_Ec) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ec_LP_N_G,
          N_F=Ec_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ec_LP_exchSurface_G,
          exchSurface_F=Ec_LP_exchSurface_F,
          gasVol=Ec_LP_gasVol,
          fluidVol=Ec_LP_fluidVol,
          metalVol=Ec_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ec_LP_Tstart_G_In,
          Tstart_G_Out=Ec_LP_Tstart_G_Out,
          Tstart_M_In=Ec_LP_Tstart_M_In,
          Tstart_M_Out=Ec_LP_Tstart_M_Out,
          Tstart_F_In=Ec_LP_Tstart_F_In,
          Tstart_F_Out=Ec_LP_Tstart_F_Out,
          hstart_F_In=Ec_LP_hstart_F_In,
          hstart_F_Out=Ec_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ec_LP_extSurfaceTub,
          use_T=use_T_Ec,
          fluidNomFlowRate=fluidLPNomFlowRate_Ec,
          fluidNomPressure=fluidLPNomPressure_Ec) 
                                         annotation (extent=[248,-12; 272,12]);
        replaceable Components.HE2ph Ev_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_LP_N_G,
          N_F=Ev_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ev_LP_exchSurface_G,
          exchSurface_F=Ev_LP_exchSurface_F,
          gasVol=Ev_LP_gasVol,
          fluidVol=Ev_LP_fluidVol,
          metalVol=Ev_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_LP_Tstart_G_In,
          Tstart_G_Out=Ev_LP_Tstart_G_Out,
          Tstart_M_In=Ev_LP_Tstart_M_In,
          Tstart_M_Out=Ev_LP_Tstart_M_Out,
          Tstart_F_In=Ev_LP_Tstart_F_In,
          Tstart_F_Out=Ev_LP_Tstart_F_Out,
          hstart_F_In=Ev_LP_hstart_F_In,
          hstart_F_Out=Ev_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_LP_extSurfaceTub,
          use_T=use_T_Ev,
          fluidNomFlowRate=fluidLPNomFlowRate_Ev,
          fluidNomPressure=fluidLPNomPressure_Ev) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_LP_N_G,
          N_F=Ev_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ev_LP_exchSurface_G,
          exchSurface_F=Ev_LP_exchSurface_F,
          gasVol=Ev_LP_gasVol,
          fluidVol=Ev_LP_fluidVol,
          metalVol=Ev_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_LP_Tstart_G_In,
          Tstart_G_Out=Ev_LP_Tstart_G_Out,
          Tstart_M_In=Ev_LP_Tstart_M_In,
          Tstart_M_Out=Ev_LP_Tstart_M_Out,
          Tstart_F_In=Ev_LP_Tstart_F_In,
          Tstart_F_Out=Ev_LP_Tstart_F_Out,
          hstart_F_In=Ev_LP_hstart_F_In,
          hstart_F_Out=Ev_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_LP_extSurfaceTub,
          use_T=use_T_Ev,
          fluidNomFlowRate=fluidLPNomFlowRate_Ev,
          fluidNomPressure=fluidLPNomPressure_Ev) 
                         annotation (extent=[188,-12; 212,12]);
        replaceable Components.HE2ph Ev_IP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_IP_N_G,
          N_F=Ev_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ev_IP_exchSurface_G,
          exchSurface_F=Ev_IP_exchSurface_F,
          gasVol=Ev_IP_gasVol,
          fluidVol=Ev_IP_fluidVol,
          metalVol=Ev_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_IP_Tstart_G_In,
          Tstart_G_Out=Ev_IP_Tstart_G_Out,
          Tstart_M_In=Ev_IP_Tstart_M_In,
          Tstart_M_Out=Ev_IP_Tstart_M_Out,
          Tstart_F_In=Ev_IP_Tstart_F_In,
          Tstart_F_Out=Ev_IP_Tstart_F_Out,
          hstart_F_In=Ev_IP_hstart_F_In,
          hstart_F_Out=Ev_IP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_IP_extSurfaceTub,
          use_T=use_T_Ev,
          fluidNomFlowRate=fluidIPNomFlowRate_Ev,
          fluidNomPressure=fluidIPNomPressure_Ev) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_IP_N_G,
          N_F=Ev_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Ev_IP_exchSurface_G,
          exchSurface_F=Ev_IP_exchSurface_F,
          gasVol=Ev_IP_gasVol,
          fluidVol=Ev_IP_fluidVol,
          metalVol=Ev_IP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_IP_Tstart_G_In,
          Tstart_G_Out=Ev_IP_Tstart_G_Out,
          Tstart_M_In=Ev_IP_Tstart_M_In,
          Tstart_M_Out=Ev_IP_Tstart_M_Out,
          Tstart_F_In=Ev_IP_Tstart_F_In,
          Tstart_F_Out=Ev_IP_Tstart_F_Out,
          hstart_F_In=Ev_IP_hstart_F_In,
          hstart_F_Out=Ev_IP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Ev_IP_extSurfaceTub,
          use_T=use_T_Ev,
          fluidNomFlowRate=fluidIPNomFlowRate_Ev,
          fluidNomPressure=fluidIPNomPressure_Ev) 
          annotation (extent=[8,-12; 32,12]);
        replaceable Components.HE Sh_LP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_LP_N_G,
          N_F=Sh_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Sh_LP_exchSurface_G,
          exchSurface_F=Sh_LP_exchSurface_F,
          gasVol=Sh_LP_gasVol,
          fluidVol=Sh_LP_fluidVol,
          metalVol=Sh_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh_LP_Tstart_G_In,
          Tstart_G_Out=Sh_LP_Tstart_G_Out,
          Tstart_M_In=Sh_LP_Tstart_M_In,
          Tstart_M_Out=Sh_LP_Tstart_M_Out,
          Tstart_F_In=Sh_LP_Tstart_F_In,
          Tstart_F_Out=Sh_LP_Tstart_F_Out,
          hstart_F_In=Sh_LP_hstart_F_In,
          hstart_F_Out=Sh_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Sh_LP_extSurfaceTub,
          use_T=use_T_Sh,
          fluidNomFlowRate=fluidLPNomFlowRate_Sh,
          fluidNomPressure=fluidLPNomPressure_Sh) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_LP_N_G,
          N_F=Sh_LP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Sh_LP_exchSurface_G,
          exchSurface_F=Sh_LP_exchSurface_F,
          gasVol=Sh_LP_gasVol,
          fluidVol=Sh_LP_fluidVol,
          metalVol=Sh_LP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Sh_LP_Tstart_G_In,
          Tstart_G_Out=Sh_LP_Tstart_G_Out,
          Tstart_M_In=Sh_LP_Tstart_M_In,
          Tstart_M_Out=Sh_LP_Tstart_M_Out,
          Tstart_F_In=Sh_LP_Tstart_F_In,
          Tstart_F_Out=Sh_LP_Tstart_F_Out,
          hstart_F_In=Sh_LP_hstart_F_In,
          hstart_F_Out=Sh_LP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          extSurfaceTub=Sh_LP_extSurfaceTub,
          use_T=use_T_Sh,
          fluidNomFlowRate=fluidLPNomFlowRate_Sh,
          fluidNomPressure=fluidLPNomPressure_Sh) 
                                   annotation (extent=[68,-12; 92,12]);
        replaceable Components.HE2ph Ev_HP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_HP_N_G,
          N_F=Ev_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ev,
          fluidNomPressure=fluidHPNomPressure_Ev,
          exchSurface_G=Ev_HP_exchSurface_G,
          exchSurface_F=Ev_HP_exchSurface_F,
          extSurfaceTub=Ev_HP_extSurfaceTub,
          gasVol=Ev_HP_gasVol,
          fluidVol=Ev_HP_fluidVol,
          metalVol=Ev_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_HP_Tstart_G_In,
          Tstart_G_Out=Ev_HP_Tstart_G_Out,
          Tstart_M_In=Ev_HP_Tstart_M_In,
          Tstart_M_Out=Ev_HP_Tstart_M_Out,
          Tstart_F_In=Ev_HP_Tstart_F_In,
          Tstart_F_Out=Ev_HP_Tstart_F_Out,
          hstart_F_In=Ev_HP_hstart_F_In,
          hstart_F_Out=Ev_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Ev_HP_N_G,
          N_F=Ev_HP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          gasNomPressure=gasNomPressure,
          fluidNomFlowRate=fluidHPNomFlowRate_Ev,
          fluidNomPressure=fluidHPNomPressure_Ev,
          exchSurface_G=Ev_HP_exchSurface_G,
          exchSurface_F=Ev_HP_exchSurface_F,
          extSurfaceTub=Ev_HP_extSurfaceTub,
          gasVol=Ev_HP_gasVol,
          fluidVol=Ev_HP_fluidVol,
          metalVol=Ev_HP_metalVol,
          SSInit=SSInit,
          Tstart_G_In=Ev_HP_Tstart_G_In,
          Tstart_G_Out=Ev_HP_Tstart_G_Out,
          Tstart_M_In=Ev_HP_Tstart_M_In,
          Tstart_M_Out=Ev_HP_Tstart_M_Out,
          Tstart_F_In=Ev_HP_Tstart_F_In,
          Tstart_F_Out=Ev_HP_Tstart_F_Out,
          hstart_F_In=Ev_HP_hstart_F_In,
          hstart_F_Out=Ev_HP_hstart_F_Out,
          rhomcm=rhomcm,
          lambda=lambda,
          use_T=use_T_Ev) 
          annotation (extent=[-172,-12; -148,12]);
        replaceable Components.HE Sh_IP(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_IP_N_G,
          N_F=Sh_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidIPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          exchSurface_G=Sh_IP_exchSurface_G,
          exchSurface_F=Sh_IP_exchSurface_F,
          extSurfaceTub=Sh_IP_extSurfaceTub,
          gasVol=Sh_IP_gasVol,
          fluidVol=Sh_IP_fluidVol,
          metalVol=Sh_IP_metalVol,
          rhomcm=rhomcm,
          use_T=use_T_Sh,
          SSInit=SSInit,
          Tstart_G_In=Sh_IP_Tstart_G_In,
          Tstart_G_Out=Sh_IP_Tstart_G_Out,
          Tstart_M_In=Sh_IP_Tstart_M_In,
          Tstart_M_Out=Sh_IP_Tstart_M_Out,
          Tstart_F_In=Sh_IP_Tstart_F_In,
          Tstart_F_Out=Sh_IP_Tstart_F_Out,
          hstart_F_In=Sh_IP_hstart_F_In,
          hstart_F_Out=Sh_IP_hstart_F_Out,
          fluidNomPressure=fluidIPNomPressure_Sh,
          lambda=lambda) extends 
          ThermoPower.PowerPlants.HRSG.Interfaces.HeatExchanger(
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          N_G=Sh_IP_N_G,
          N_F=Sh_IP_N_F,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate=fluidIPNomFlowRate_Sh,
          gasNomPressure=gasNomPressure,
          fluidNomPressure=fluidNomPressure_Sh,
          exchSurface_G=Sh_IP_exchSurface_G,
          exchSurface_F=Sh_IP_exchSurface_F,
          extSurfaceTub=Sh_IP_extSurfaceTub,
          gasVol=Sh_IP_gasVol,
          fluidVol=Sh_IP_fluidVol,
          metalVol=Sh_IP_metalVol,
          rhomcm=rhomcm,
          lambda=lamba,
          use_T=use_T_Sh,
          SSInit=SSInit,
          Tstart_G_In=Sh_IP_Tstart_G_In,
          Tstart_G_Out=Sh_IP_Tstart_G_Out,
          Tstart_M_In=Sh_IP_Tstart_M_In,
          Tstart_M_Out=Sh_IP_Tstart_M_Out,
          Tstart_F_In=Sh_IP_Tstart_F_In,
          Tstart_F_Out=Sh_IP_Tstart_F_Out,
          hstart_F_In=Sh_IP_hstart_F_In,
          hstart_F_Out=Sh_IP_hstart_F_Out) annotation (extent=[-112,-12; -88,12]);
        replaceable Components.BaseReader_gas stateGas_EvHPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[-140,-10; -120,10]);
        replaceable Components.BaseReader_gas stateGas_ShIPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[-80,-10; -60,10]);
        replaceable Components.BaseReader_gas stateGas_Ec2HPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[-20,-10; 0,10]);
        replaceable Components.BaseReader_gas stateGas_EvIPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[40,-10; 60,10]);
        replaceable Components.BaseReader_gas stateGas_ShLPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[100,-10; 120,10]);
        replaceable Components.BaseReader_gas stateGas_EcIPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[160,-10; 180,10]);
        replaceable Components.BaseReader_gas stateGas_EvLPout(
            redeclare package Medium = FlueGasMedium) extends 
          Components.BaseReader_gas(
            redeclare package Medium = FlueGasMedium) 
                             annotation (extent=[220,-10; 240,10]);
        replaceable Components.BaseReader_water stateEvHP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-170,60; -150,40], rotation=90);
        replaceable Components.BaseReader_water stateShIP_in(
                                                  redeclare package Medium = 
              FluidMedium) extends Components.BaseReader_water( redeclare 
            package Medium = 
              FluidMedium) annotation (extent=[-110,60; -90,40],  rotation=90);
        replaceable Components.BaseReader_water stateEc2HP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-50,60; -30,40],   rotation=90);
        replaceable Components.BaseReader_water stateEvIP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[10,60; 30,40],     rotation=90);
        replaceable Components.BaseReader_water stateShLP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[70,40; 90,60], rotation=270);
        replaceable Components.BaseReader_water stateEcIP_in(
                                           redeclare package Medium = 
              FluidMedium) extends Components.BaseReader_water( redeclare 
            package Medium = 
              FluidMedium) annotation (extent=[136,60; 156,40],   rotation=90);
        replaceable Components.BaseReader_water stateEvLP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[190,40; 210,60],
                                                              rotation=270);
        replaceable Components.BaseReader_water stateEcLP_in(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[250,40; 270,60],
                                                              rotation=270);
        replaceable Components.BaseReader_water stateEvHP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = 
                     FlueGasMedium) 
                           annotation (extent=[-170,-60; -150,-40],
                                                                  rotation=270);
        replaceable Components.BaseReader_water stateShIP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-110,-40; -90,-60],rotation=90);
        replaceable Components.BaseReader_water stateEc2HP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[-50,-60; -30,-40], rotation=270);
        replaceable Components.BaseReader_water stateEvIP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[10,-60; 30,-40],   rotation=270);
        replaceable Components.BaseReader_water stateShLP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[70,-40; 90,-60],   rotation=90);
        replaceable Components.BaseReader_water stateEcIP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[136,-60; 156,-40], rotation=270);
        replaceable Components.BaseReader_water stateEvLP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[210,-40; 190,-60],
                                                              rotation=90);
        replaceable Components.BaseReader_water stateEcLP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water(  redeclare package Medium = FluidMedium)
                           annotation (extent=[270,-40; 250,-60],
                                                              rotation=90);
        replaceable Components.BaseReader_water stateEc1HP_in(
                                           redeclare package Medium = 
              FluidMedium) extends Components.BaseReader_water( redeclare 
            package Medium = 
              FluidMedium) annotation (extent=[124,60; 144,40],   rotation=90);
        replaceable Components.BaseReader_water stateEc1HP_out(
            redeclare package Medium = FluidMedium) extends 
          Components.BaseReader_water( redeclare package Medium = FluidMedium) 
                           annotation (extent=[124,-60; 144,-40], rotation=270);
        replaceable Components.BaseReader_gas stateGas_ShHPout(redeclare 
            package Medium = 
                     FlueGasMedium) extends Components.BaseReader_gas(redeclare 
            package Medium = FlueGasMedium) 
                             annotation (extent=[-200,-10; -180,10]);
        replaceable Components.BaseReader_water stateSh1HP_in(redeclare package
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-230,58; -210,38], rotation=90);
        replaceable Components.BaseReader_water stateRh1IP_in(redeclare package
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-220,58; -200,38], rotation=90);
        replaceable Components.BaseReader_water stateRh2IP_out(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-272,-42; -252,-62],
                                                                  rotation=90);
        replaceable Components.BaseReader_water stateSh2HP_out(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-282,-42; -262,-62],
                                                                  rotation=90);
      equation 
        connect(stateGas_Sh2HP_Sh1HP.outlet, Sh1HP_Rh1IP.gasIn) annotation (
            points=[-236,0; -228,0],     style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateGas_Sh2HP_Sh1HP.inlet, Sh2HP_Rh2IP.gasOut) annotation (
            points=[-248,0; -256,0],     style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateRh1IP_out.inlet, Sh1HP_Rh1IP.waterOutB) annotation (points=[-224,-40;
              -211.2,-40; -211.2,-12],      style(thickness=2));
        connect(Sh2HP_Rh2IP.waterInA, stateSh1HP_out.outlet) annotation (points=[-272.8,
              12; -272.8,40; -266,40],      style(thickness=2));
        connect(Ev_HP.gasOut,stateGas_EvHPout. inlet) annotation (points=[-148,0;
              -136,0],                       style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_EvHPout.outlet,Sh_IP. gasIn) annotation (points=[-124,0;
              -112,0],                                          style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_IP.gasOut,stateGas_ShIPout. inlet) annotation (points=[-88,0;
              -76,0],                                          style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_ShIPout.outlet,Ec2_HP. gasIn) annotation (points=[-64,0;
              -52,0],                                        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec2_HP.gasOut,stateGas_Ec2HPout. inlet) annotation (points=[-28,0;
              -16,0],                                        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_Ec2HPout.outlet,Ev_IP. gasIn) annotation (points=[-4,0; 8,
              0],                                            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_IP.gasOut,stateGas_EvIPout. inlet) annotation (points=[32,0; 44,
              0],                                         style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_EvIPout.outlet,Sh_LP. gasIn) annotation (points=[56,0; 68,
              0],                                      style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.gasOut,stateGas_ShLPout. inlet) annotation (points=[92,0;
              104,0],                                      style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_ShLPout.outlet,Ec1HP_EcIP. gasIn) annotation (points=[116,0;
              128,0],                                            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec1HP_EcIP.gasOut,stateGas_EcIPout. inlet) annotation (points=[152,0;
              164,0],                                            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_EcIPout.outlet,Ev_LP. gasIn) annotation (points=[176,0;
              188,0],                                     style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_LP.gasOut,stateGas_EvLPout. inlet) annotation (points=[212,0;
              224,0],                                        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_EvLPout.outlet,Ec_LP. gasIn) annotation (points=[236,0;
              248,0],                                     style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcLP_in.outlet,Ec_LP. waterIn) annotation (points=[260,44;
              260,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvLP_in.outlet,Ev_LP. waterIn) annotation (points=[200,44;
              200,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP.waterIn,stateShLP_in. outlet) annotation (points=[80,12;
              80,44],     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_IP.waterIn,stateEvIP_in. outlet) annotation (points=[20,12;
              20,44],
            style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_IP.waterIn,stateShIP_in. outlet) annotation (points=[-100,12;
              -100,44],                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.waterIn,stateEvHP_in. outlet) annotation (points=[-160,12;
              -160,44], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvIP_out.inlet,Ev_IP. waterOut) annotation (points=[20,-44;
              20,-12],                                               style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShLP_out.inlet,Sh_LP. waterOut) annotation (points=[80,-44;
              80,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShIP_out.inlet,Sh_IP. waterOut) annotation (points=[-100,-44;
              -100,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcLP_out.inlet,Ec_LP. waterOut) annotation (points=[260,-44;
              260,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvLP_out.inlet,Ev_LP. waterOut) annotation (points=[200,-44;
              200,-12],                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvHP_out.inlet,Ev_HP. waterOut) annotation (points=[-160,-44;
              -160,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec1HP_EcIP.waterInB,stateEcIP_in. outlet) annotation (points=[144.8,12;
              146,12; 146,44],           style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc2HP_out.inlet,Ec2_HP. waterOut) annotation (points=[-40,-44;
              -40,-12],      style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ec2_HP.waterIn,stateEc2HP_in. outlet) annotation (points=[-40,12;
              -40,44],     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc2HP_in.inlet,stateEc1HP_out. outlet) annotation (points=[-40,56;
              -40,80; 110,80; 110,-66; 134,-66; 134,-56],            style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcIP_out.inlet,Ec1HP_EcIP. waterOutB) annotation (points=[146,-44;
              146,-12; 144.8,-12],          style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc1HP_out.inlet,Ec1HP_EcIP. waterOutA) annotation (points=[134,-44;
              134,-12; 135.2,-12],           style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc1HP_in.outlet,Ec1HP_EcIP. waterInA) annotation (points=[134,44;
              135.2,44; 135.2,12],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Ev_HP.gasIn,stateGas_ShHPout. outlet) annotation (points=[-172,
              0; -184,0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcLP_in.inlet, Ec_LP_In) annotation (points=[260,56; 260,
              150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvLP_in.inlet, Ev_LP_In) annotation (points=[200,56; 200,
              150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShLP_in.inlet, Sh_LP_In) annotation (points=[80,56; 80,130;
              140,130; 140,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcIP_in.inlet, Ec_IP_In) annotation (points=[146,56; 146,
              120; 60,120; 60,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcIP_out.outlet, Ec_IP_Out) annotation (points=[146,-56;
              146,-72; 50,-72; 50,100; 30,100; 30,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc1HP_in.inlet, Ev_HP_In) annotation (points=[134,56; 134,
              110; -140,110; -140,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShIP_in.inlet, Sh_IP_In) annotation (points=[-100,56; -100,
              90; -60,90; -60,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvIP_in.inlet, Ev_IP_In) annotation (points=[20,56; 20,100;
              0,100; 0,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvIP_out.outlet, Ev_IP_Out) annotation (points=[20,-56; 20,
              -70; -10,-70; -10,90; -30,90; -30,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvHP_in.inlet, Ec_HP_In) annotation (points=[-160,56; -160,
              100; -200,100; -200,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvLP_out.outlet, Ev_LP_Out) annotation (points=[200,-56;
              200,-70; 170,-70; 170,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEcLP_out.outlet, Ec_LP_Out) annotation (points=[260,-56;
              260,-68; 230,-68; 230,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEc2HP_out.outlet, Ec_HP_Out) annotation (points=[-40,-56;
              -40,-70; -130,-70; -130,106; -170,106; -170,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(GasOut, Ec_LP.gasOut) annotation (points=[300,1.77636e-015; 300,
              4; 288,0; 272,0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh2HP_Rh2IP.gasIn, GasIn) annotation (points=[-280,0; -288,0;
              -288,1.77636e-015; -300,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateGas_ShHPout.inlet, Sh1HP_Rh1IP.gasOut) annotation (points=
              [-196,0; -204,0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateRh2IP_out.inlet, Sh2HP_Rh2IP.waterOutB) annotation (points=
             [-262,-46; -262,-12; -263.2,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateSh2HP_out.inlet, Sh2HP_Rh2IP.waterOutA) annotation (points=
             [-272,-46; -272,-12; -272.8,-12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateRh1IP_in.outlet, Sh1HP_Rh1IP.waterInB) annotation (points=
              [-210,42; -210,12; -211.2,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateSh1HP_in.outlet, Sh1HP_Rh1IP.waterInA) annotation (points=
              [-220,42; -220,12; -220.8,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateSh1HP_in.inlet, Sh_HP_In) annotation (points=[-220,54;
              -220,66; -260,66; -260,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateEvHP_out.outlet, Ev_HP_Out) annotation (points=[-160,-56;
              -160,-70; -180,-70; -180,92; -230,92; -230,150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_HP_Out, stateSh2HP_out.outlet) annotation (points=[-200,-150;
              -200,-120; -272,-120; -272,-58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_In, stateRh1IP_in.inlet) annotation (points=[-130,-150;
              -130,-110; -190,-110; -190,66; -210,66; -210,54], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_Out, stateRh2IP_out.outlet) annotation (points=[-70,-150;
              -70,-100; -262,-100; -262,-58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_IP_Out, stateShIP_out.outlet) annotation (points=[0,-150; 0,
              -88; -100,-88; -100,-56], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateShLP_out.outlet, Sh_LP_Out) annotation (points=[80,-56; 80,
              -100; 200,-100; 200,-150], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh1HP_Rh1IP.waterOutA, stateSh1HP_out.inlet) annotation (points=
             [-220.8,-12; -220.8,-30; -236,-30; -236,40; -254,40], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateRh1IP_out.outlet, Sh2HP_Rh2IP.waterInB) annotation (points=
             [-236,-40; -246,-40; -246,22; -263.2,22; -263.2,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end HEG_3LRh_wa;
      
      model DG_2L_NC 
        "Drums Group with two pressure level, natural circulation and all ideal feed pump" 
        extends ThermoPower.PowerPlants.HRSG.Interfaces.DG_2L;
        annotation (Diagram, Icon);
        Water.SinkW blowDownHP(            redeclare package Medium = 
              FluidMedium, w0=0) 
          annotation (extent=[-130,-64; -90,-24],
                                            rotation=270);
        Components.DrumSensors HPd(
          redeclare package Medium = FluidMedium,
          rint=HPd_rint,
          rext=HPd_rext,
          L=HPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=HPd_pstart,
          hlstart=HPd_hlstart,
          hvstart=HPd_hvstart,
          Tmstart=HPd_Tmstart,
          Cm=HPd_Cm) "HP drum" 
                        annotation (extent=[-68,0; -148,80]);
        Water.SensW steamHP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-188,-132; -148,-172],
                                                  rotation=90);
        Water.ThroughW feedPumpLP(            redeclare package Medium = 
              FluidMedium)        annotation (extent=[140,-100; 180,-60],
            rotation=270);
        Water.SinkW blowDownLP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[72,-66; 112,-26],
                                            rotation=270);
        Components.DrumSensors LPd(
          redeclare package Medium = FluidMedium,
          rint=LPd_rint,
          rext=LPd_rext,
          L=LPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=LPd_pstart,
          hlstart=LPd_hlstart,
          hvstart=LPd_hvstart,
          Tmstart=LPd_Tmstart,
          Cm=LPd_Cm) "LP drum" 
                        annotation (extent=[132,-2; 52,78]);
        Water.SensW steamLP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[12,-130; 52,-170],
                                              rotation=90);
        Water.FlowSplit flowSplit1(           redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[72,-114; 112,-74],
                                               rotation=270);
        Water.FlowSplit flowSplit2(
          redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[-4,-126; 36,-86],rotation=180);
        Water.ThroughW feedPumpAtt(redeclare package Medium = FluidMedium) 
          "Feed pump for attemperation" 
                                annotation (extent=[-120,100; -160,140]);
      equation 
        connect(SensorsBus.p_drumHP,HPd. p_out) annotation (points=[200,60; 140,
              60; 140,180; -60,180; -60,70; -93.6,70; -93.6,69.6],
                                                           style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumHP,HPd. y_out) annotation (points=[200,60; 140,
              60; 140,180; -60,180; -60,56; -80.8,56],   style(color=84,
              rgbcolor={255,170,213}));
        connect(Steam_HP_Out,steamHP_w. outlet) annotation (points=[-160,-200;
              -160,-164], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamHP_w.inlet,HPd. steam) annotation (points=[-160,-140; -160,
              80; -132,80; -132,68; -131.2,68], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_HP,HPd. riser) annotation (points=[-130,-200; -130,
              -120; -140,-120; -140,17.2; -139.2,17.2],
                                                  style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_HP,HPd. feedwater) annotation (points=[-70,-200; -70,34;
              -69.2,34],  style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(blowDownHP.flange,HPd. blowdown) annotation (points=[-110,-24;
              -110,0.8; -108,0.8],           style(thickness=2));
        connect(ActuatorsBus.flowRate_feedLP,feedPumpLP. in_w0) 
          annotation (points=[200,20; 200,-72; 172,-72],            style(color=
                52, rgbcolor={213,255,170}));
        connect(feedPumpLP.outlet, WaterForLP) 
          annotation (points=[160,-100; 160,-200],         style(thickness=2));
        connect(feedPumpLP.inlet, WaterIn) annotation (points=[160,-60; 160,120;
              200,120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(SensorsBus.p_drumLP,LPd. p_out) annotation (points=[200,60; 140,
              60; 140,68; 106.4,68; 106.4,67.6],      style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.y_drumLP,LPd. y_out) annotation (points=[200,60; 140,
              60; 140,54; 119.2,54],              style(color=84, rgbcolor={255,
                170,213}));
        connect(steamLP_w.inlet,LPd. steam) annotation (points=[40,-138; 40,78;
              68.8,78; 68.8,66],   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_LP,LPd. riser) annotation (points=[70,-200; 70,-80;
              60.8,-80; 60.8,15.2],    style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_LP,LPd. feedwater) annotation (points=[130,-200; 130,32;
              130.8,32], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(blowDownLP.flange,LPd. blowdown) 
          annotation (points=[92,-26; 92,-1.2],  style(thickness=2));
        connect(Steam_LP_Out, steamLP_w.outlet) annotation (points=[40,-200; 40,
              -162], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit1.in1, LPd.downcomer) annotation (points=[92,-82; 120,
              -82; 120,10], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ActuatorsBus.flowRate_attemp,feedPumpAtt. in_w0) annotation (
            points=[200,20; 220,-32; 222,160; -132,160; -132,132],
                                     style(color=52, rgbcolor={213,255,170}));
        connect(flowSplit1.out2, flowSplit2.in1) annotation (points=[84,-106; 28,
              -106], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit2.out2, feedPumpAtt.inlet) annotation (points=[4,-98;
              -30,-98; -30,120; -120,120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(feedPumpAtt.outlet, LiquidWaterOut) annotation (points=[-160,
              120; -200,120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit2.out1, WaterForHP) annotation (points=[4,-114.4; -40,
              -114.4; -40,-200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit1.out1, ToRiser_LP) annotation (points=[100.4,-106;
              100.4,-151; 100,-151; 100,-200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ToRiser_HP, HPd.downcomer) annotation (points=[-100,-200; -100,
              -120; -80,-120; -80,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end DG_2L_NC;
      
      model DG_3L_CC 
        "Drums Group with three pressure level, controlled circulation and all ideal feed pump" 
        extends ThermoPower.PowerPlants.HRSG.Interfaces.DG_3L;
        parameter SI.MassFlowRate RiserHPFlowRate=0 
          "Nominal mass flowrate through the riser of HP";
        parameter SI.MassFlowRate RiserIPFlowRate=0 
          "Nominal mass flowrate through the riser of IP";
        parameter SI.MassFlowRate RiserLPFlowRate=0 
          "Nominal mass flowrate through the riser of LP";
        annotation (Diagram);
        Water.ThroughW feedPumpAtt(redeclare package Medium = FluidMedium) 
          "Feed pump for attemperation" 
                                annotation (extent=[-162,160; -202,200]);
        Water.FlowSplit flowSplit2(
          redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[100,-160; 140,-120],
                                               rotation=180);
        Water.FlowSplit flowSplit3(
          redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[52,-168; 92,-128],
                                               rotation=180);
        Water.ThroughW feedPumpIP(            redeclare package Medium = 
              FluidMedium)      annotation (extent=[40,-260; 80,-220],
                                                                     rotation=
              270);
        Water.ThroughW feedPumpHP(            redeclare package Medium = 
              FluidMedium)      annotation (extent=[-160,-260; -120,-220],
                                                                       rotation=
             270);
        Water.ThroughW circulationPumpLP(            redeclare package Medium 
            = FluidMedium, w0=RiserLPFlowRate) 
                                annotation (extent=[180,-200; 220,-240],
                                                                   rotation=90);
        Water.SinkW blowDownHP(            redeclare package Medium = 
              FluidMedium, w0=0) 
          annotation (extent=[-234,-84; -194,-44],
                                            rotation=270);
        Water.SinkW blowDownLP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[166,-84; 206,-44],
                                            rotation=270);
        Water.SinkW blowDownIP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[-34,-84; 6,-44],
                                            rotation=270);
        Components.DrumSensors HPd(
          redeclare package Medium = FluidMedium,
          rint=HPd_rint,
          rext=HPd_rext,
          L=HPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=HPd_pstart,
          hlstart=HPd_hlstart,
          hvstart=HPd_hvstart,
          Tmstart=HPd_Tmstart,
          Cm=HPd_Cm) "HP drum" 
                        annotation (extent=[-174,0; -254,80]);
        Components.DrumSensors IPd(
          redeclare package Medium = FluidMedium,
          rint=IPd_rint,
          rext=IPd_rext,
          L=IPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=IPd_pstart,
          hlstart=IPd_hlstart,
          hvstart=IPd_hvstart,
          Tmstart=IPd_Tmstart,
          Cm=IPd_Cm) "IP drum" 
                        annotation (extent=[26,0; -54,80]);
        Components.DrumSensors LPd(
          redeclare package Medium = FluidMedium,
          rint=LPd_rint,
          rext=LPd_rext,
          L=LPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=LPd_pstart,
          hlstart=LPd_hlstart,
          hvstart=LPd_hvstart,
          Tmstart=LPd_Tmstart,
          Cm=LPd_Cm) "LP drum" 
                        annotation (extent=[226,0; 146,80]);
        Water.ThroughW circulationPumpIP(            redeclare package Medium 
            = FluidMedium, w0=RiserIPFlowRate) 
                                annotation (extent=[20,-200; -20,-160],
                                                                     rotation=
              270);
        Water.ThroughW circulationPumpHP(            redeclare package Medium 
            = FluidMedium, w0=RiserHPFlowRate) 
                                annotation (extent=[-180,-200; -220,-160],
                                                                       rotation=
             270);
        Water.SensW steamHP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-288,-200; -248,-240],
                                                  rotation=90);
        Water.SensW steamIP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-88,-200; -48,-240],
                                               rotation=90);
        Water.SensW steamLP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[112,-200; 152,-240],
                                              rotation=90);
        Water.FlowSplit flowSplit1(           redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[172,-142; 212,-102],
                                               rotation=270);
        Water.ThroughW feedPumpLP(            redeclare package Medium = 
              FluidMedium)        annotation (extent=[240,-126; 280,-86],
            rotation=270);
      equation 
        connect(feedPumpAtt.outlet, LiquidWaterOut) 
          annotation (points=[-202,180; -300,180],
                                                style(thickness=2));
        connect(ActuatorsBus.flowRate_attemp, feedPumpAtt.in_w0) annotation (
            points=[300,100; 180,100; 180,220; -174,220; -174,192],
                                     style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedHP,feedPumpHP. in_w0) annotation (
            points=[300,100; -110,100; -110,-232; -128,-232],
            style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedIP,feedPumpIP. in_w0) annotation (
            points=[300,100; 90,100; 90,-232; 72,-232],          style(color=52,
              rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedLP,feedPumpLP. in_w0) 
          annotation (points=[300,100; 300,-98; 272,-98],           style(color=
                52, rgbcolor={213,255,170}));
        connect(SensorsBus.w_steamHP,steamHP_w. w) annotation (points=[300,160;
              240,160; 240,280; -280,280; -280,20; -300,20; -300,-260; -280,
              -260; -280,-236],
                    style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.w_steamIP,steamIP_w. w) annotation (points=[300,160;
              240,160; 240,280; -100,280; -100,-260; -80,-260; -80,-236],
                                                                 style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.w_steamLP,steamLP_w. w) annotation (points=[300,160;
              240,160; 240,280; 100,280; 100,-260; 120,-260; 120,-236],
                                                style(color=84, rgbcolor={255,
                170,213}));
        connect(SensorsBus.p_drumHP,HPd. p_out) annotation (points=[300,160;
              240,160; 240,280; -160,280; -160,68; -199.6,68; -199.6,69.6],
                                                           style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.p_drumIP,IPd. p_out) annotation (points=[300,160;
              240,160; 240,280; 40,280; 40,69.6; 0.4,69.6],
                                          style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.p_drumLP,LPd. p_out) annotation (points=[300,160;
              240,160; 240,68; 200.4,68; 200.4,69.6], style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.y_drumHP,HPd. y_out) annotation (points=[300,160;
              240,160; 240,280; -160,280; -160,56; -186.8,56],
                                                         style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumIP,IPd. y_out) annotation (points=[300,160;
              240,160; 240,280; 40,280; 40,56; 13.2,56],
                                      style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumLP,LPd. y_out) annotation (points=[300,160;
              240,160; 240,56; 213.2,56],         style(color=84, rgbcolor={255,
                170,213}));
        connect(Steam_HP_Out,steamHP_w. outlet) annotation (points=[-260,-300;
              -260,-232], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamHP_w.inlet,HPd. steam) annotation (points=[-260,-208; -260,
              80; -238,80; -238,68; -237.2,68], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpHP.inlet,HPd. downcomer) annotation (points=[-200,
              -160; -200,-100; -186,-100; -186,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ToRiser_HP,circulationPumpHP. outlet) annotation (points=[-200,
              -300; -200,-200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_HP,HPd. riser) annotation (points=[-230,-300; -230,
              -100; -248,-100; -248,17.2; -245.2,17.2],
                                                  style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_HP,HPd. feedwater) annotation (points=[-170,-300; -170,34;
              -175.2,34], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Steam_IP_Out,steamIP_w. outlet) annotation (points=[-60,-300;
              -60,-232],
                     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_IP,IPd. riser) annotation (points=[-30,-300; -30,-100;
              -45.2,-100; -45.2,17.2], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpIP.inlet,IPd. downcomer) annotation (points=[
              -3.67382e-015,-160; 0,-160; 0,-100; 14,-100; 14,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpIP.outlet, ToRiser_IP) annotation (points=[
              3.67382e-015,-200; 3.67382e-015,-300; 0,-300],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamIP_w.inlet,IPd. steam) annotation (points=[-60,-208; -60,
              80; -38,80; -38,68; -37.2,68],
                                         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_IP,IPd. feedwater) annotation (points=[30,-300; 30,34;
              24.8,34],
                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamLP_w.inlet,LPd. steam) annotation (points=[140,-208; 140,
              80; 162.8,80; 162.8,68],
                                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_LP,LPd. riser) annotation (points=[170,-300; 170,-100;
              154.8,-100; 154.8,17.2], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Steam_LP_Out,steamLP_w. outlet) annotation (points=[140,-300;
              140,-232],
                     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_LP,LPd. feedwater) annotation (points=[230,-300; 230,34;
              224.8,34], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpLP.inlet,flowSplit1. out1) annotation (points=[200,-200;
              200,-134; 200.4,-134],           style(thickness=2));
        connect(ToRiser_LP,circulationPumpLP. outlet) 
          annotation (points=[200,-300; 200,-240], style(thickness=2));
        connect(flowSplit1.in1,LPd. downcomer) annotation (points=[192,-110;
              192,-100; 214,-100; 214,12], style(thickness=2));
        connect(flowSplit3.out1, feedPumpIP.inlet) 
                                                  annotation (points=[60,-156.4;
              60,-188.2; 60,-220; 60,-220],style(thickness=2));
        connect(flowSplit3.out2, feedPumpHP.inlet) 
                                                  annotation (points=[60,-140;
              -140,-140; -140,-220], style(thickness=2));
        connect(feedPumpIP.outlet, WaterForIP) annotation (points=[60,-260; 60,
              -280; 60,-280; 60,-300], style(thickness=2));
        connect(feedPumpHP.outlet, WaterForHP) 
          annotation (points=[-140,-260; -140,-300], style(thickness=2));
        connect(feedPumpLP.outlet, WaterForLP) 
          annotation (points=[260,-126; 260,-300],         style(thickness=2));
        connect(blowDownHP.flange,HPd. blowdown) annotation (points=[-214,-44;
              -214,0.8],                     style(thickness=2));
        connect(blowDownIP.flange,IPd. blowdown) 
          annotation (points=[-14,-44; -14,-21.6; -14,0.8; -14,0.8],
                                                          style(thickness=2));
        connect(blowDownLP.flange,LPd. blowdown) 
          annotation (points=[186,-44; 186,0.8], style(thickness=2));
        connect(feedPumpLP.inlet, WaterIn) annotation (points=[260,-86; 260,240;
              300,240], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit1.out2, flowSplit2.in1) annotation (points=[184,-134;
              184,-140; 132,-140], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit2.out1, flowSplit3.in1) annotation (points=[108,-148.4;
              107,-148.4; 107,-148; 84,-148], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit2.out2, feedPumpAtt.inlet) annotation (points=[108,
              -132; 108,180; -162,180], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end DG_3L_CC;
      
      model DG_3L_CC_wa 
        "Drums Group with three pressure level, controlled circulation and without attemperation" 
        extends ThermoPower.PowerPlants.HRSG.Interfaces.DG_3L_wa;
        parameter SI.MassFlowRate RiserHPFlowRate=0 
          "Nominal mass flowrate through the riser of HP";
        parameter SI.MassFlowRate RiserIPFlowRate=0 
          "Nominal mass flowrate through the riser of IP";
        parameter SI.MassFlowRate RiserLPFlowRate=0 
          "Nominal mass flowrate through the riser of LP";
        
        //Total Feed Pump Parameter
        parameter SI.Conversions.NonSIunits.AngularVelocity_rpm n0_TFP 
          "Nominal rpm"                                                              annotation (Dialog(group = "Total Feed Pump (TFP)"));
        parameter SI.Pressure outletTFPNomPressure = fluidLPNomPressure 
          "Nominal live steam pressure"                                          annotation (Dialog(group = "Total Feed Pump (TFP)"));
        parameter SI.Pressure inletTFPNomPressure 
          "Nominal condensation pressure"                                         annotation (Dialog(group = "Total Feed Pump (TFP)"));
        parameter SI.MassFlowRate TFPNomFlowRate "Nominal steam mass flow rate"
                                                                                annotation (Dialog(group = "Total Feed Pump (TFP)"));
        parameter SI.SpecificEnthalpy hstart_TFP 
          "Fluid Specific Enthalpy Start Value" annotation (Dialog(group = "Total Feed Pump (TFP)"));
        
        annotation (Diagram);
        Components.PrescribedSpeedPump totalFeedPump(
          redeclare package WaterMedium = FluidMedium,
          rho_nom=1000,
          n0=n0_TFP,
          nominalSteamPressure=outletTFPNomPressure,
          nominalCondensationPressure=inletTFPNomPressure,
          nominalSteamFlow=TFPNomFlowRate,
          hstart=hstart_TFP,
          q_nom={0.0898,0,0.1},
          head_nom={72.74,130,0}) annotation (extent=[180,220; 220,180]);
        Water.FlowSplit flowSplit2(
          redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[52,-168; 92,-128],
                                               rotation=180);
        Water.ThroughW feedPumpIP(            redeclare package Medium = 
              FluidMedium)      annotation (extent=[40,-260; 80,-220],
                                                                     rotation=
              270);
        Water.ThroughW feedPumpHP(            redeclare package Medium = 
              FluidMedium)      annotation (extent=[-160,-260; -120,-220],
                                                                       rotation=
             270);
        Water.ThroughW circulationPumpLP(            redeclare package Medium 
            = FluidMedium, w0=RiserLPFlowRate) 
                                annotation (extent=[180,-200; 220,-240],
                                                                   rotation=90);
        Water.SinkW blowDownHP(            redeclare package Medium = 
              FluidMedium, w0=0) 
          annotation (extent=[-234,-84; -194,-44],
                                            rotation=270);
        Water.SinkW blowDownLP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[166,-84; 206,-44],
                                            rotation=270);
        Water.SinkW blowDownIP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[-34,-84; 6,-44],
                                            rotation=270);
        Components.DrumSensors HPd(
          redeclare package Medium = FluidMedium,
          rint=HPd_rint,
          rext=HPd_rext,
          L=HPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=HPd_pstart,
          hlstart=HPd_hlstart,
          hvstart=HPd_hvstart,
          Tmstart=HPd_Tmstart,
          Cm=HPd_Cm) "HP drum" 
                        annotation (extent=[-174,0; -254,80]);
        Components.DrumSensors IPd(
          redeclare package Medium = FluidMedium,
          rint=IPd_rint,
          rext=IPd_rext,
          L=IPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=IPd_pstart,
          hlstart=IPd_hlstart,
          hvstart=IPd_hvstart,
          Tmstart=IPd_Tmstart,
          Cm=IPd_Cm) "IP drum" 
                        annotation (extent=[26,0; -54,80]);
        Components.DrumSensors LPd(
          redeclare package Medium = FluidMedium,
          rint=LPd_rint,
          rext=LPd_rext,
          L=LPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=LPd_pstart,
          hlstart=LPd_hlstart,
          hvstart=LPd_hvstart,
          Tmstart=LPd_Tmstart,
          Cm=LPd_Cm) "LP drum" 
                        annotation (extent=[226,0; 146,80]);
        Water.ThroughW circulationPumpIP(            redeclare package Medium 
            = FluidMedium, w0=RiserIPFlowRate) 
                                annotation (extent=[20,-200; -20,-160],
                                                                     rotation=
              270);
        Water.ThroughW circulationPumpHP(            redeclare package Medium 
            = FluidMedium, w0=RiserHPFlowRate) 
                                annotation (extent=[-180,-200; -220,-160],
                                                                       rotation=
             270);
        Water.SensW steamHP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-288,-200; -248,-240],
                                                  rotation=90);
        Water.SensW steamIP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-88,-200; -48,-240],
                                               rotation=90);
        Water.SensW steamLP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[112,-200; 152,-240],
                                              rotation=90);
        Water.FlowSplit flowSplit1(           redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[172,-142; 212,-102],
                                               rotation=270);
      equation 
        connect(totalFeedPump.inlet, WaterIn)       annotation (points=[180,200;
              160,200; 160,240; 300,240],
                                     style(thickness=2));
        connect(ActuatorsBus.nPump_feedLP, totalFeedPump.pumpSpeed_rpm) 
          annotation (points=[300,100; 160,100; 160,188; 178.4,188],
            style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedHP,feedPumpHP. in_w0) annotation (
            points=[300,100; -110,100; -110,-232; -128,-232],
            style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedIP,feedPumpIP. in_w0) annotation (
            points=[300,100; 90,100; 90,-232; 72,-232],          style(color=52,
              rgbcolor={213,255,170}));
        connect(SensorsBus.w_steamHP,steamHP_w. w) annotation (points=[300,160;
              240,160; 240,280; -280,280; -280,20; -300,20; -300,-260; -280,
              -260; -280,-236],
                    style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.w_steamIP,steamIP_w. w) annotation (points=[300,160;
              240,160; 240,280; -100,280; -100,-260; -80,-260; -80,-236],
                                                                 style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.w_steamLP,steamLP_w. w) annotation (points=[300,160;
              240,160; 240,280; 100,280; 100,-260; 120,-260; 120,-236],
                                                style(color=84, rgbcolor={255,
                170,213}));
        connect(SensorsBus.p_drumHP,HPd. p_out) annotation (points=[300,160;
              240,160; 240,280; -160,280; -160,68; -199.6,68; -199.6,69.6],
                                                           style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.p_drumIP,IPd. p_out) annotation (points=[300,160;
              240,160; 240,280; 40,280; 40,69.6; 0.4,69.6],
                                          style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.p_drumLP,LPd. p_out) annotation (points=[300,160;
              240,160; 240,68; 200.4,68; 200.4,69.6], style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.y_drumHP,HPd. y_out) annotation (points=[300,160;
              240,160; 240,280; -160,280; -160,56; -186.8,56],
                                                         style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumIP,IPd. y_out) annotation (points=[300,160;
              240,160; 240,280; 40,280; 40,56; 13.2,56],
                                      style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumLP,LPd. y_out) annotation (points=[300,160;
              240,160; 240,56; 213.2,56],         style(color=84, rgbcolor={255,
                170,213}));
        connect(Steam_HP_Out,steamHP_w. outlet) annotation (points=[-260,-300;
              -260,-232], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamHP_w.inlet,HPd. steam) annotation (points=[-260,-208; -260,
              80; -238,80; -238,68; -237.2,68], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpHP.inlet,HPd. downcomer) annotation (points=[-200,
              -160; -200,-100; -186,-100; -186,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ToRiser_HP,circulationPumpHP. outlet) annotation (points=[-200,
              -300; -200,-200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_HP,HPd. riser) annotation (points=[-230,-300; -230,
              -100; -248,-100; -248,17.2; -245.2,17.2],
                                                  style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_HP,HPd. feedwater) annotation (points=[-170,-300; -170,34;
              -175.2,34], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Steam_IP_Out,steamIP_w. outlet) annotation (points=[-60,-300;
              -60,-232],
                     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_IP,IPd. riser) annotation (points=[-30,-300; -30,-100;
              -45.2,-100; -45.2,17.2], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpIP.inlet,IPd. downcomer) annotation (points=[
              -3.67382e-015,-160; 0,-160; 0,-100; 14,-100; 14,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpIP.outlet, ToRiser_IP) annotation (points=[
              3.67382e-015,-200; 3.67382e-015,-300; 0,-300],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamIP_w.inlet,IPd. steam) annotation (points=[-60,-208; -60,
              80; -38,80; -38,68; -37.2,68],
                                         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_IP,IPd. feedwater) annotation (points=[30,-300; 30,34;
              24.8,34],
                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamLP_w.inlet,LPd. steam) annotation (points=[140,-208; 140,
              80; 162.8,80; 162.8,68],
                                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_LP,LPd. riser) annotation (points=[170,-300; 170,-100;
              154.8,-100; 154.8,17.2], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Steam_LP_Out,steamLP_w. outlet) annotation (points=[140,-300;
              140,-232],
                     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_LP,LPd. feedwater) annotation (points=[230,-300; 230,34;
              224.8,34], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpLP.inlet,flowSplit1. out1) annotation (points=[200,-200;
              200,-134; 200.4,-134],           style(thickness=2));
        connect(ToRiser_LP,circulationPumpLP. outlet) 
          annotation (points=[200,-300; 200,-240], style(thickness=2));
        connect(flowSplit1.in1,LPd. downcomer) annotation (points=[192,-110;
              192,-100; 214,-100; 214,12], style(thickness=2));
        connect(flowSplit2.out1,feedPumpIP. inlet) 
                                                  annotation (points=[60,-156.4;
              60,-188.2; 60,-220; 60,-220],style(thickness=2));
        connect(flowSplit2.out2,feedPumpHP. inlet) 
                                                  annotation (points=[60,-140;
              -140,-140; -140,-220], style(thickness=2));
        connect(feedPumpIP.outlet, WaterForIP) annotation (points=[60,-260; 60,
              -280; 60,-280; 60,-300], style(thickness=2));
        connect(feedPumpHP.outlet, WaterForHP) 
          annotation (points=[-140,-260; -140,-300], style(thickness=2));
        connect(blowDownHP.flange,HPd. blowdown) annotation (points=[-214,-44;
              -214,0.8],                     style(thickness=2));
        connect(blowDownIP.flange,IPd. blowdown) 
          annotation (points=[-14,-44; -14,-21.6; -14,0.8; -14,0.8],
                                                          style(thickness=2));
        connect(blowDownLP.flange,LPd. blowdown) 
          annotation (points=[186,-44; 186,0.8], style(thickness=2));
        connect(flowSplit1.out2, flowSplit2.in1) annotation (points=[184,-134;
              184,-148; 84,-148], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(totalFeedPump.outlet, WaterForLP) annotation (points=[220,200;
              260,200; 260,-300], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end DG_3L_CC_wa;
      
      model DG_3L_CC_wafp "Drums Group with three pressure level, controlled circulation, without
   attemperation and all ideal feed pump" 
        extends ThermoPower.PowerPlants.HRSG.Interfaces.DG_3L_wa;
        parameter SI.MassFlowRate RiserHPFlowRate=0 
          "Nominal mass flowrate through the riser of HP";
        parameter SI.MassFlowRate RiserIPFlowRate=0 
          "Nominal mass flowrate through the riser of IP";
        parameter SI.MassFlowRate RiserLPFlowRate=0 
          "Nominal mass flowrate through the riser of LP";
        
        annotation (Diagram);
        Water.FlowSplit flowSplit2(
          redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[52,-168; 92,-128],
                                               rotation=180);
        Water.ThroughW feedPumpIP(            redeclare package Medium = 
              FluidMedium)      annotation (extent=[40,-260; 80,-220],
                                                                     rotation=
              270);
        Water.ThroughW feedPumpHP(            redeclare package Medium = 
              FluidMedium)      annotation (extent=[-160,-260; -120,-220],
                                                                       rotation=
             270);
        Water.ThroughW circulationPumpLP(            redeclare package Medium 
            = FluidMedium, w0=RiserLPFlowRate) 
                                annotation (extent=[180,-200; 220,-240],
                                                                   rotation=90);
        Water.SinkW blowDownHP(            redeclare package Medium = 
              FluidMedium, w0=0) 
          annotation (extent=[-234,-84; -194,-44],
                                            rotation=270);
        Water.SinkW blowDownLP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[166,-84; 206,-44],
                                            rotation=270);
        Water.SinkW blowDownIP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[-34,-84; 6,-44],
                                            rotation=270);
        Components.DrumSensors HPd(
          redeclare package Medium = FluidMedium,
          rint=HPd_rint,
          rext=HPd_rext,
          L=HPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=HPd_pstart,
          hlstart=HPd_hlstart,
          hvstart=HPd_hvstart,
          Tmstart=HPd_Tmstart,
          Cm=HPd_Cm) "HP drum" 
                        annotation (extent=[-174,0; -254,80]);
        Components.DrumSensors IPd(
          redeclare package Medium = FluidMedium,
          rint=IPd_rint,
          rext=IPd_rext,
          L=IPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=IPd_pstart,
          hlstart=IPd_hlstart,
          hvstart=IPd_hvstart,
          Tmstart=IPd_Tmstart,
          Cm=IPd_Cm) "IP drum" 
                        annotation (extent=[26,0; -54,80]);
        Components.DrumSensors LPd(
          redeclare package Medium = FluidMedium,
          rint=LPd_rint,
          rext=LPd_rext,
          L=LPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=LPd_pstart,
          hlstart=LPd_hlstart,
          hvstart=LPd_hvstart,
          Tmstart=LPd_Tmstart,
          Cm=LPd_Cm) "LP drum" 
                        annotation (extent=[226,0; 146,80]);
        Water.ThroughW circulationPumpIP(            redeclare package Medium 
            = FluidMedium, w0=RiserIPFlowRate) 
                                annotation (extent=[20,-200; -20,-160],
                                                                     rotation=
              270);
        Water.ThroughW circulationPumpHP(            redeclare package Medium 
            = FluidMedium, w0=RiserHPFlowRate) 
                                annotation (extent=[-180,-200; -220,-160],
                                                                       rotation=
             270);
        Water.SensW steamHP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-288,-200; -248,-240],
                                                  rotation=90);
        Water.SensW steamIP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-88,-200; -48,-240],
                                               rotation=90);
        Water.SensW steamLP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[112,-200; 152,-240],
                                              rotation=90);
        Water.FlowSplit flowSplit1(           redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[172,-142; 212,-102],
                                               rotation=270);
        Water.ThroughW feedPumpLP(            redeclare package Medium = 
              FluidMedium)        annotation (extent=[240,-126; 280,-86],
            rotation=270);
      equation 
        connect(ActuatorsBus.flowRate_feedHP,feedPumpHP. in_w0) annotation (
            points=[300,100; -110,100; -110,-232; -128,-232],
            style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedIP,feedPumpIP. in_w0) annotation (
            points=[300,100; 90,100; 90,-232; 72,-232],          style(color=52,
              rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedLP,feedPumpLP. in_w0) 
          annotation (points=[300,100; 300,-98; 272,-98],           style(color=
                52, rgbcolor={213,255,170}));
        connect(SensorsBus.w_steamHP,steamHP_w. w) annotation (points=[300,160;
              240,160; 240,280; -280,280; -280,20; -300,20; -300,-260; -280,
              -260; -280,-236],
                    style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.w_steamIP,steamIP_w. w) annotation (points=[300,160;
              240,160; 240,280; -100,280; -100,-260; -80,-260; -80,-236],
                                                                 style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.w_steamLP,steamLP_w. w) annotation (points=[300,160;
              240,160; 240,280; 100,280; 100,-260; 120,-260; 120,-236],
                                                style(color=84, rgbcolor={255,
                170,213}));
        connect(SensorsBus.p_drumHP,HPd. p_out) annotation (points=[300,160;
              240,160; 240,280; -160,280; -160,68; -199.6,68; -199.6,69.6],
                                                           style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.p_drumIP,IPd. p_out) annotation (points=[300,160;
              240,160; 240,280; 40,280; 40,69.6; 0.4,69.6],
                                          style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.p_drumLP,LPd. p_out) annotation (points=[300,160;
              240,160; 240,68; 200.4,68; 200.4,69.6], style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.y_drumHP,HPd. y_out) annotation (points=[300,160;
              240,160; 240,280; -160,280; -160,56; -186.8,56],
                                                         style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumIP,IPd. y_out) annotation (points=[300,160;
              240,160; 240,280; 40,280; 40,56; 13.2,56],
                                      style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumLP,LPd. y_out) annotation (points=[300,160;
              240,160; 240,56; 213.2,56],         style(color=84, rgbcolor={255,
                170,213}));
        connect(Steam_HP_Out,steamHP_w. outlet) annotation (points=[-260,-300;
              -260,-232], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamHP_w.inlet,HPd. steam) annotation (points=[-260,-208; -260,
              80; -238,80; -238,68; -237.2,68], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpHP.inlet,HPd. downcomer) annotation (points=[-200,
              -160; -200,-100; -186,-100; -186,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ToRiser_HP,circulationPumpHP. outlet) annotation (points=[-200,
              -300; -200,-200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_HP,HPd. riser) annotation (points=[-230,-300; -230,
              -100; -248,-100; -248,17.2; -245.2,17.2],
                                                  style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_HP,HPd. feedwater) annotation (points=[-170,-300; -170,34;
              -175.2,34], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Steam_IP_Out,steamIP_w. outlet) annotation (points=[-60,-300;
              -60,-232],
                     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_IP,IPd. riser) annotation (points=[-30,-300; -30,-100;
              -45.2,-100; -45.2,17.2], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpIP.inlet,IPd. downcomer) annotation (points=[
              -3.67382e-015,-160; 0,-160; 0,-100; 14,-100; 14,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpIP.outlet, ToRiser_IP) annotation (points=[
              3.67382e-015,-200; 3.67382e-015,-300; 0,-300],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamIP_w.inlet,IPd. steam) annotation (points=[-60,-208; -60,
              80; -38,80; -38,68; -37.2,68],
                                         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_IP,IPd. feedwater) annotation (points=[30,-300; 30,34;
              24.8,34],
                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamLP_w.inlet,LPd. steam) annotation (points=[140,-208; 140,
              80; 162.8,80; 162.8,68],
                                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_LP,LPd. riser) annotation (points=[170,-300; 170,-100;
              154.8,-100; 154.8,17.2], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Steam_LP_Out,steamLP_w. outlet) annotation (points=[140,-300;
              140,-232],
                     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_LP,LPd. feedwater) annotation (points=[230,-300; 230,34;
              224.8,34], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpLP.inlet,flowSplit1. out1) annotation (points=[200,-200;
              200,-134; 200.4,-134],           style(thickness=2));
        connect(ToRiser_LP,circulationPumpLP. outlet) 
          annotation (points=[200,-300; 200,-240], style(thickness=2));
        connect(flowSplit1.in1,LPd. downcomer) annotation (points=[192,-110;
              192,-100; 214,-100; 214,12], style(thickness=2));
        connect(flowSplit2.out1,feedPumpIP. inlet) 
                                                  annotation (points=[60,-156.4;
              60,-188.2; 60,-220; 60,-220],style(thickness=2));
        connect(flowSplit2.out2,feedPumpHP. inlet) 
                                                  annotation (points=[60,-140;
              -140,-140; -140,-220], style(thickness=2));
        connect(feedPumpLP.outlet, WaterForLP) 
          annotation (points=[260,-126; 260,-300],         style(thickness=2));
        connect(blowDownHP.flange,HPd. blowdown) annotation (points=[-214,-44;
              -214,0.8],                     style(thickness=2));
        connect(blowDownIP.flange,IPd. blowdown) 
          annotation (points=[-14,-44; -14,-21.6; -14,0.8; -14,0.8],
                                                          style(thickness=2));
        connect(blowDownLP.flange,LPd. blowdown) 
          annotation (points=[186,-44; 186,0.8], style(thickness=2));
        connect(feedPumpLP.inlet, WaterIn) annotation (points=[260,-86; 260,240;
              300,240], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit2.in1, flowSplit1.out2) annotation (points=[84,-148;
              184,-148; 184,-134], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(WaterForIP, feedPumpIP.outlet) annotation (points=[60,-300; 60,
              -260; 60,-260], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(WaterForHP, feedPumpHP.outlet) annotation (points=[-140,-300;
              -140,-300; -140,-260], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end DG_3L_CC_wafp;
      
      model DG_3L_tap_CC_wa "Drums Group with three pressure level and tappings of saturated water
   for external heater, controlled circulation and without attemperation" 
        extends ThermoPower.PowerPlants.HRSG.Interfaces.DG_3L_tap_wa;
        //Flow Rate of evaporators circulation
        parameter SI.MassFlowRate RiserHPFlowRate=0 
          "Nominal mass flowrate through the riser of HP";
        parameter SI.MassFlowRate RiserIPFlowRate=0 
          "Nominal mass flowrate through the riser of IP";
        parameter SI.MassFlowRate RiserLPFlowRate=0 
          "Nominal mass flowrate through the riser of LP";
        
        //Total Feed Pump Parameter
        parameter SI.Conversions.NonSIunits.AngularVelocity_rpm n0_TFP 
          "Nominal rpm"                                                              annotation (Dialog(group = "Total Feed Pump (TFP)"));
        parameter SI.Pressure outletTFPNomPressure = fluidLPNomPressure 
          "Nominal live steam pressure"                                          annotation (Dialog(group = "Total Feed Pump (TFP)"));
        parameter SI.Pressure inletTFPNomPressure 
          "Nominal condensation pressure"                                         annotation (Dialog(group = "Total Feed Pump (TFP)"));
        parameter SI.MassFlowRate TFPNomFlowRate "Nominal steam mass flow rate"
                                                                                annotation (Dialog(group = "Total Feed Pump (TFP)"));
        parameter SI.SpecificEnthalpy hstart_TFP 
          "Fluid Specific Enthalpy Start Value" annotation (Dialog(group = "Total Feed Pump (TFP)"));
        
        //mixer for external tappings 
        parameter SI.Volume mixHP_V "Internal volume of the HP steam mixer";
        parameter SI.Volume mixIP_V "Internal volume of the IP steam mixer";
        
        Water.FlowSplit flowSplit1(redeclare package Medium = FluidMedium) 
          annotation (extent=[218,134; 258,174],
                                               rotation=270);
        Water.FlowSplit flowSplit3(redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[-186,-140; -146,-100],
                                               rotation=90);
        Water.FlowSplit flowSplit6(redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[14,-142; 54,-102],
                                               rotation=90);
        Water.Mixer mixHP(redeclare package Medium = FluidMedium,
          pstart=HPd_pstart,
          hstart=HPd_hvstart,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          V=mixHP_V)      annotation (extent=[-292,-76; -252,-36],
                                                                 rotation=270);
        Water.Mixer mixIP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          V=mixIP_V,
          pstart=IPd_pstart,
          hstart=IPd_hvstart) 
                           annotation (extent=[-92,-78; -52,-38],
                                                                rotation=270);
        annotation (Diagram);
        Components.PrescribedSpeedPump prescribedSpeedPump(
          redeclare package WaterMedium = FluidMedium,
          rho_nom=1000,
          n0=n0_TFP,
          nominalSteamPressure=outletTFPNomPressure,
          nominalCondensationPressure=inletTFPNomPressure,
          nominalSteamFlow=TFPNomFlowRate,
          hstart=hstart_TFP,
          q_nom={0.0898,0,0.1},
          head_nom={72.74,130,0}) annotation (extent=[180,220; 220,180]);
        Water.FlowSplit flowSplit2(
          redeclare package Medium = FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[52,-174; 92,-134],
                                               rotation=180);
        Water.ThroughW feedPumpIP(            redeclare package Medium = 
              FluidMedium)      annotation (extent=[40,-260; 80,-220],
                                                                     rotation=
              270);
        Water.ThroughW feedPumpHP(            redeclare package Medium = 
              FluidMedium)      annotation (extent=[-160,-260; -120,-220],
                                                                       rotation=
             270);
        Water.ThroughW circulationPumpLP(            redeclare package Medium 
            = FluidMedium, w0=RiserLPFlowRate) 
                                annotation (extent=[180,-200; 220,-240],
                                                                   rotation=90);
        Water.SinkW blowDownHP(            redeclare package Medium = 
              FluidMedium, w0=0) 
          annotation (extent=[-234,-84; -194,-44],
                                            rotation=270);
        Water.SinkW blowDownLP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[166,-84; 206,-44],
                                            rotation=270);
        Water.SinkW blowDownIP(            redeclare package Medium = 
              FluidMedium,
            w0=0) 
          annotation (extent=[-34,-84; 6,-44],
                                            rotation=270);
        Components.DrumSensors HPd(
          redeclare package Medium = FluidMedium,
          rint=HPd_rint,
          rext=HPd_rext,
          L=HPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=HPd_pstart,
          hlstart=HPd_hlstart,
          hvstart=HPd_hvstart,
          Tmstart=HPd_Tmstart,
          Cm=HPd_Cm) "HP drum" 
                        annotation (extent=[-174,0; -254,80]);
        Components.DrumSensors IPd(
          redeclare package Medium = FluidMedium,
          rint=IPd_rint,
          rext=IPd_rext,
          L=IPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=IPd_pstart,
          hlstart=IPd_hlstart,
          hvstart=IPd_hvstart,
          Tmstart=IPd_Tmstart,
          Cm=IPd_Cm) "IP drum" 
                        annotation (extent=[26,0; -54,80]);
        Components.DrumSensors LPd(
          redeclare package Medium = FluidMedium,
          rint=LPd_rint,
          rext=LPd_rext,
          L=LPd_L,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          pstart=LPd_pstart,
          hlstart=LPd_hlstart,
          hvstart=LPd_hvstart,
          Tmstart=LPd_Tmstart,
          Cm=LPd_Cm) "LP drum" 
                        annotation (extent=[226,0; 146,80]);
        Water.ThroughW circulationPumpIP(            redeclare package Medium 
            = FluidMedium, w0=RiserIPFlowRate) 
                                annotation (extent=[20,-200; -20,-160],
                                                                     rotation=
              270);
        Water.ThroughW circulationPumpHP(            redeclare package Medium 
            = FluidMedium, w0=RiserHPFlowRate) 
                                annotation (extent=[-180,-200; -220,-160],
                                                                       rotation=
             270);
        Water.SensW steamHP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-288,-200; -248,-240],
                                                  rotation=90);
        Water.SensW steamIP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-88,-200; -48,-240],
                                               rotation=90);
        Water.SensW steamLP_w(            redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[112,-200; 152,-240],
                                              rotation=90);
        Water.FlowSplit flowSplit4(           redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false) 
          annotation (extent=[172,-142; 212,-102],
                                               rotation=270);
      equation 
        connect(HPsteamFromExUse, mixHP.in2) annotation (points=[-240,300; -240,
              120; -284,120; -284,-40.2],    style(thickness=2));
        connect(mixIP.in2, IPsteamFromExUse) annotation (points=[-84,-42.2; -84,
              100; -200,100; -200,300], style(thickness=2));
        connect(flowSplit3.out2, tapHPwater) annotation (points=[-158,-108;
              -158,266; -140,266; -140,300],
                                          style(thickness=2));
        connect(flowSplit6.out2, tapIPwater) annotation (points=[42,-110; 42,
              202; -100,202; -100,300],                  style(thickness=2));
        connect(tapLPwater, flowSplit1.out2) 
          annotation (points=[-62,300; -62,210; 120,210; 120,120; 230,120; 230,
              142],                                      style(thickness=2));
        connect(prescribedSpeedPump.inlet, WaterIn) annotation (points=[180,200;
              160,200; 160,240; 300,240],
                                     style(thickness=2));
        connect(ActuatorsBus.nPump_feedLP,prescribedSpeedPump. pumpSpeed_rpm) 
          annotation (points=[300,100; 160,100; 160,188; 178.4,188],
            style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedHP,feedPumpHP. in_w0) annotation (
            points=[300,100; -110,100; -110,-232; -128,-232],
            style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.flowRate_feedIP,feedPumpIP. in_w0) annotation (
            points=[300,100; 90,100; 90,-232; 72,-232],          style(color=52,
              rgbcolor={213,255,170}));
        connect(SensorsBus.w_steamHP,steamHP_w. w) annotation (points=[300,160;
              240,160; 240,280; -300,280; -300,-260; -280,-260; -280,-236],
                    style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.w_steamIP,steamIP_w. w) annotation (points=[300,160;
              240,160; 240,280; -104,280; -104,-260; -80,-260; -80,-236],
                                                                 style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.w_steamLP,steamLP_w. w) annotation (points=[300,160;
              240,160; 240,280; 100,280; 100,-260; 120,-260; 120,-236],
                                                style(color=84, rgbcolor={255,
                170,213}));
        connect(SensorsBus.p_drumHP,HPd. p_out) annotation (points=[300,160;
              240,160; 240,280; -148,280; -148,68; -199.6,68; -199.6,69.6],
                                                           style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.p_drumIP,IPd. p_out) annotation (points=[300,160;
              240,160; 240,280; 46,280; 46,70; 24,70; 24,69.6; 0.4,69.6],
                                          style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.p_drumLP,LPd. p_out) annotation (points=[300,160;
              240,160; 240,68; 200.4,68; 200.4,69.6], style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.y_drumHP,HPd. y_out) annotation (points=[300,160;
              240,160; 240,280; -148,280; -148,56; -186.8,56],
                                                         style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumIP,IPd. y_out) annotation (points=[300,160;
              240,160; 240,280; 46,280; 46,56; 13.2,56],
                                      style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.y_drumLP,LPd. y_out) annotation (points=[300,160;
              240,160; 240,56; 213.2,56],         style(color=84, rgbcolor={255,
                170,213}));
        connect(Steam_HP_Out,steamHP_w. outlet) annotation (points=[-260,-300;
              -260,-232], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpHP.inlet,HPd. downcomer) annotation (points=[-200,
              -160; -200,-100; -186,-100; -186,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ToRiser_HP,circulationPumpHP. outlet) annotation (points=[-200,
              -300; -200,-200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_HP,HPd. riser) annotation (points=[-230,-300; -230,
              -100; -248,-100; -248,17.2; -245.2,17.2],
                                                  style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Steam_IP_Out,steamIP_w. outlet) annotation (points=[-60,-300;
              -60,-232],
                     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_IP,IPd. riser) annotation (points=[-30,-300; -30,-100;
              -45.2,-100; -45.2,17.2], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpIP.inlet,IPd. downcomer) annotation (points=[
              -3.67382e-015,-160; 0,-160; 0,-100; 14,-100; 14,12], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpIP.outlet, ToRiser_IP) annotation (points=[
              3.67382e-015,-200; 3.67382e-015,-300; 0,-300],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamLP_w.inlet,LPd. steam) annotation (points=[140,-208; 140,
              68; 162.8,68],       style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(FromRiser_LP,LPd. riser) annotation (points=[170,-300; 170,-100;
              154.8,-100; 154.8,17.2], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Steam_LP_Out,steamLP_w. outlet) annotation (points=[140,-300;
              140,-232],
                     style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_LP,LPd. feedwater) annotation (points=[230,-300; 230,34;
              224.8,34], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(circulationPumpLP.inlet,flowSplit4. out1) annotation (points=[200,-200;
              200,-134; 200.4,-134],           style(thickness=2));
        connect(ToRiser_LP,circulationPumpLP. outlet) 
          annotation (points=[200,-300; 200,-240], style(thickness=2));
        connect(flowSplit4.in1,LPd. downcomer) annotation (points=[192,-110;
              192,-100; 214,-100; 214,12], style(thickness=2));
        connect(flowSplit2.out1,feedPumpIP. inlet) 
                                                  annotation (points=[60,-162.4;
              60,-191.2; 60,-220; 60,-220],style(thickness=2));
        connect(flowSplit2.out2,feedPumpHP. inlet) 
                                                  annotation (points=[60,-146;
              -140,-146; -140,-220], style(thickness=2));
        connect(feedPumpIP.outlet, WaterForIP) annotation (points=[60,-260; 60,
              -280; 60,-280; 60,-300], style(thickness=2));
        connect(feedPumpHP.outlet, WaterForHP) 
          annotation (points=[-140,-260; -140,-300], style(thickness=2));
        connect(blowDownHP.flange,HPd. blowdown) annotation (points=[-214,-44;
              -214,0.8],                     style(thickness=2));
        connect(blowDownIP.flange,IPd. blowdown) 
          annotation (points=[-14,-44; -14,-21.6; -14,0.8; -14,0.8],
                                                          style(thickness=2));
        connect(blowDownLP.flange,LPd. blowdown) 
          annotation (points=[186,-44; 186,0.8], style(thickness=2));
        connect(flowSplit4.out2, flowSplit2.in1) annotation (points=[184,-134;
              184,-154; 84,-154], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamHP_w.inlet, mixHP.out) annotation (points=[-260,-208; -260,
              -120; -272,-120; -272,-76], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(mixHP.in1, HPd.steam) annotation (points=[-260,-40; -260,68;
              -237.2,68], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(steamIP_w.inlet, mixIP.out) annotation (points=[-60,-208; -60,
              -120; -72,-120; -72,-78], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(mixIP.in1, IPd.steam) annotation (points=[-60,-42; -60,68;
              -37.2,68], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HPd.feedwater, flowSplit3.out1) annotation (points=[-175.2,34;
              -174.4,34; -174.4,-108], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_HP, flowSplit3.in1) annotation (points=[-170,-300; -170,
              -160; -166,-160; -166,-132], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(IPd.feedwater, flowSplit6.out1) annotation (points=[24.8,34;
              25.6,34; 25.6,-110], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Feed_IP, flowSplit6.in1) annotation (points=[30,-300; 30,-160;
              34,-160; 34,-134], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(flowSplit1.in1, prescribedSpeedPump.outlet) annotation (points=
              [238,166; 238,200; 220,200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(WaterForLP, flowSplit1.out1) annotation (points=[260,-300; 260,
              120; 246,120; 246,132; 246.4,142], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end DG_3L_tap_CC_wa;
      
      model HRSG_3LRh_wa 
        "Heat Recovery Steam Generator with three pressure level and reheat, without attemperation" 
        extends Interfaces.HRSG_3LRh;
        
        annotation (Diagram, Icon);
        ThermoPower.PowerPlants.HRSG.Examples.DG_3L_CC_wa drums(
          HPd_rint=1.067,
          HPd_rext=1.167,
          HPd_L=11.920,
          HPd_Cm=0,
          IPd_rint=0.915,
          IPd_rext=1.015,
          IPd_L=7,
          IPd_Cm=0,
          LPd_rint=1.143,
          LPd_rext=1.243,
          LPd_L=11.503,
          LPd_Cm=0,
          RiserHPFlowRate=175.5,
          RiserIPFlowRate=67.5,
          RiserLPFlowRate=41.5,
          redeclare package FluidMedium = FluidMedium,
          SSInit=false,
          fluidLPNomPressure=7.19048e5,
          LPd_hvstart=2.76051e6,
          LPd_hlstart=6.68356e5,
          fluidHPNomPressure=1.626e7,
          fluidIPNomPressure=3.3816e6,
          HPd_hvstart=2.53239e6,
          HPd_hlstart=1.5879e6,
          IPd_hvstart=2.794e6,
          n0_TFP=1500,
          inletTFPNomPressure=5398.2,
          TFPNomFlowRate=89.8,
          hstart_TFP=1.43495e5,
          IPd_hlstart=1.0265e6) annotation (extent=[-100,0; 80,180]);
        HEG_3LRh_wa HeatExchangersGroup(
          gasNomFlowRate=585.5,
          fluidHPNomFlowRate_Sh=70.59,
          fluidHPNomPressure_Sh=134.3e5,
          fluidHPNomFlowRate_Ev=175.5,
          fluidHPNomPressure_Ev=137.1e5,
          fluidHPNomFlowRate_Ec=70.10,
          fluidHPNomPressure_Ec=138.9e5,
          fluidIPNomFlowRate_Rh=81.10,
          fluidIPNomPressure_Rh=28.4e5,
          fluidIPNomFlowRate_Sh=13.5,
          fluidIPNomPressure_Sh=29.5e5,
          fluidIPNomFlowRate_Ev=67.5,
          fluidIPNomPressure_Ev=37.16e5,
          fluidIPNomFlowRate_Ec=21.8,
          fluidIPNomPressure_Ec=48.6e5,
          fluidLPNomFlowRate_Sh=6.91,
          fluidLPNomPressure_Sh=6.6e5,
          fluidLPNomFlowRate_Ev=41.49,
          fluidLPNomPressure_Ev=15.34e5,
          fluidLPNomFlowRate_Ec=122.4,
          fluidLPNomPressure_Ec=19.8e5,
          Sh2_HP_N_G=3,
          Sh2_HP_N_F=5,
          Sh2_HP_exchSurface_G=3636,
          Sh2_HP_exchSurface_F=421.844,
          Sh2_HP_extSurfaceTub=540.913,
          Sh2_HP_gasVol=10,
          Sh2_HP_fluidVol=2.615,
          Sh2_HP_metalVol=1.685,
          Sh1_HP_N_G=3,
          Sh1_HP_N_F=7,
          Sh1_HP_exchSurface_G=8137.2,
          Sh1_HP_exchSurface_F=612.387,
          Sh1_HP_extSurfaceTub=721.256,
          Sh1_HP_gasVol=10,
          Sh1_HP_fluidVol=4.134,
          Sh1_HP_metalVol=1.600,
          Ev_HP_N_G=4,
          Ev_HP_N_F=4,
          Ev_HP_exchSurface_G=30501.9,
          Ev_HP_exchSurface_F=2296.328,
          Ev_HP_extSurfaceTub=2704.564,
          Ev_HP_gasVol=10,
          Ev_HP_fluidVol=15.500,
          Ev_HP_metalVol=6.001,
          Ec2_HP_N_G=3,
          Ec2_HP_N_F=6,
          Ec2_HP_exchSurface_G=20335,
          Ec2_HP_exchSurface_F=1451.506,
          Ec2_HP_extSurfaceTub=1803.043,
          Ec2_HP_gasVol=10,
          Ec2_HP_fluidVol=9.290,
          Ec2_HP_metalVol=5.045,
          Ec1_HP_N_G=3,
          Ec1_HP_N_F=5,
          Ec1_HP_exchSurface_G=12201.2,
          Ec1_HP_exchSurface_F=870.904,
          Ec1_HP_extSurfaceTub=1081.826,
          Ec1_HP_gasVol=10,
          Ec1_HP_fluidVol=5.574,
          Ec1_HP_metalVol=3.027,
          Rh2_IP_N_F=7,
          Rh2_IP_exchSurface_G=4630.2,
          Rh2_IP_exchSurface_F=873.079,
          Rh2_IP_extSurfaceTub=1009.143,
          Rh2_IP_fluidVol=8.403,
          Rh2_IP_metalVol=2.823,
          Rh1_IP_N_F=5,
          Rh1_IP_exchSurface_G=4630,
          Rh1_IP_exchSurface_F=900.387,
          Rh1_IP_extSurfaceTub=1009.250,
          Rh1_IP_fluidVol=8.936,
          Rh1_IP_metalVol=2.292,
          Sh_IP_N_G=3,
          Sh_IP_N_F=7,
          Sh_IP_exchSurface_G=2314.8,
          Sh_IP_exchSurface_F=450.218,
          Sh_IP_extSurfaceTub=504.652,
          Sh_IP_gasVol=10,
          Sh_IP_fluidVol=4.468,
          Sh_IP_metalVol=1.146,
          Ev_IP_N_G=4,
          Ev_IP_N_F=4,
          Ev_IP_exchSurface_G=24402,
          Ev_IP_exchSurface_F=1837.063,
          Ev_IP_extSurfaceTub=2163.652,
          Ev_IP_gasVol=10,
          Ev_IP_fluidVol=12.400,
          Ev_IP_metalVol=4.801,
          Ec_IP_N_G=3,
          Ec_IP_N_F=5,
          Ec_IP_exchSurface_G=4067.2,
          Ec_IP_exchSurface_F=306.177,
          Ec_IP_extSurfaceTub=360.609,
          Ec_IP_gasVol=10,
          Ec_IP_fluidVol=2.067,
          Ec_IP_metalVol=0.800,
          Sh_LP_N_G=3,
          Sh_LP_N_F=7,
          Sh_LP_exchSurface_G=1708.2,
          Sh_LP_exchSurface_F=225.073,
          Sh_LP_extSurfaceTub=252.286,
          Sh_LP_gasVol=10,
          Sh_LP_fluidVol=2.234,
          Sh_LP_metalVol=0.573,
          Ev_LP_N_G=4,
          Ev_LP_N_F=4,
          Ev_LP_exchSurface_G=24402,
          Ev_LP_exchSurface_F=2292.926,
          Ev_LP_extSurfaceTub=2592.300,
          Ev_LP_gasVol=10,
          Ev_LP_fluidVol=19.318,
          Ev_LP_metalVol=5.374,
          Ec_LP_N_G=3,
          Ec_LP_N_F=6,
          Ec_LP_exchSurface_G=40095.9,
          Ec_LP_exchSurface_F=3439.389,
          Ec_LP_extSurfaceTub=3888.449,
          Ec_LP_gasVol=10,
          Ec_LP_fluidVol=28.977,
          Ec_LP_metalVol=8.061,
          use_T_Ev=false,
          Sh2_HP_Tstart_G_In=884.65,
          Sh2_HP_Tstart_G_Out=837.31,
          Sh2_HP_Tstart_M_In=742.65,
          Sh2_HP_Tstart_M_Out=823.28,
          Sh2_HP_Tstart_F_In=742.65,
          Sh2_HP_Tstart_F_Out=823.28,
          Sh1_HP_Tstart_G_In=837.15,
          Sh1_HP_Tstart_G_Out=748.60,
          Sh1_HP_Tstart_M_In=606.59,
          Sh1_HP_Tstart_M_Out=743.18,
          Sh1_HP_Tstart_F_In=606.59,
          Sh1_HP_Tstart_F_Out=743.18,
          Ev_HP_Tstart_G_In=747.15,
          Ev_HP_Tstart_G_Out=620.30,
          Ev_HP_hstart_F_In=1.514e6,
          Ev_HP_hstart_F_Out=2.002e6,
          Ec2_HP_Tstart_G_In=614.15,
          Ec2_HP_Tstart_G_Out=558.98,
          Ec2_HP_Tstart_M_In=494.67,
          Ec2_HP_Tstart_M_Out=594.14,
          Ec2_HP_Tstart_F_In=494.67,
          Ec2_HP_Tstart_F_Out=594.14,
          Ec1_HP_Tstart_M_In=431.77,
          Ec1_HP_Tstart_M_Out=494.67,
          Ec1_HP_Tstart_F_In=431.77,
          Ec1_HP_Tstart_F_Out=494.67,
          Rh2_IP_Tstart_M_In=717.31,
          Rh2_IP_Tstart_M_Out=813.09,
          Rh2_IP_Tstart_F_In=717.31,
          Rh2_IP_Tstart_F_Out=813.09,
          Rh1_IP_Tstart_M_In=618.31,
          Rh1_IP_Tstart_M_Out=717.34,
          Rh1_IP_Tstart_F_In=618.31,
          Rh1_IP_Tstart_F_Out=717.34,
          Sh_IP_Tstart_G_In=620.15,
          Sh_IP_Tstart_G_Out=614.50,
          Sh_IP_Tstart_M_In=506.08,
          Sh_IP_Tstart_M_Out=605.11,
          Sh_IP_Tstart_F_In=506.08,
          Sh_IP_Tstart_F_Out=605.11,
          Ev_IP_Tstart_G_In=558.15,
          Ev_IP_Tstart_G_Out=518.51,
          Ev_IP_hstart_F_In=9.92e5,
          Ev_IP_hstart_F_Out=1.37e6,
          Ec_IP_Tstart_G_In=517.15,
          Ec_IP_Tstart_G_Out=480.11,
          Ec_IP_Tstart_M_In=430.24,
          Ec_IP_Tstart_M_Out=493.16,
          Ec_IP_Tstart_F_In=430.24,
          Ec_IP_Tstart_F_Out=493.16,
          Sh_LP_Tstart_G_In=519.15,
          Sh_LP_Tstart_G_Out=517.44,
          Sh_LP_Tstart_M_In=435.75,
          Sh_LP_Tstart_M_Out=505.04,
          Sh_LP_Tstart_F_In=435.75,
          Sh_LP_Tstart_F_Out=505.75,
          Ev_LP_Tstart_G_In=480.00,
          Ev_LP_Tstart_G_Out=453.47,
          Ev_LP_hstart_F_In=6.625e5,
          Ev_LP_hstart_F_Out=1.065e6,
          Ec_LP_Tstart_G_In=453.47,
          Ec_LP_Tstart_G_Out=372.35,
          Ec_LP_Tstart_M_In=331.05,
          Ec_LP_Tstart_M_Out=428.09,
          Ec_LP_Tstart_F_In=331.05,
          Ec_LP_Tstart_F_Out=428.09,
          rhomcm=7900*578.05,
          lambda=20,
          Ec_LP(gamma_G=46.8, gamma_F=4000),
          Ev_LP(gamma_G=127, gamma_F=20000),
          Ec1HP_EcIP(
            gamma_G_A=42,
            gamma_G_B=45,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh_LP(gamma_G=16.6, gamma_F=4000),
          Ev_IP(gamma_G=58.5, gamma_F=20000),
          Ec2_HP(gamma_G=56, gamma_F=4000),
          Sh_IP(gamma_G=33, gamma_F=4000),
          Ev_HP(gamma_G=46.5, gamma_F=20000),
          gasNomPressure=1e5,
          Sh1HP_Rh1IP(
            gamma_G_A=70,
            gamma_G_B=80,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh2HP_Rh2IP(
            gamma_G_A=83.97,
            gamma_G_B=80,
            gamma_F_A=4000,
            gamma_F_B=4000),
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          Ev_HP_Tstart_M_In=FluidMedium.temperature_ph(137.1e5, 1.514e6),
          Ev_HP_Tstart_M_Out=FluidMedium.temperature_ph(137.1e5, 2.002e6),
          Ev_IP_Tstart_M_In=FluidMedium.temperature_ph(37.16e5, 9.92e5),
          Ev_IP_Tstart_M_Out=FluidMedium.temperature_ph(37.16e5, 1.37e6),
          Ev_LP_Tstart_M_In=FluidMedium.temperature_ph(15.34e5, 6.625e5),
          Ev_LP_Tstart_M_Out=FluidMedium.temperature_ph(15.34e5, 1.065e6)) 
                             annotation (extent=[-100,-120; 80,-30]);
        replaceable Components.BaseReader_water stateInletWater(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[150,-120; 170,-100],
                                                                  rotation=90);
      equation 
        connect(ActuatorsBus, drums.ActuatorsBus)           annotation (points=[200,100;
              172,100; 172,120; 80,120],            style(color=52, rgbcolor={
                213,255,170}));
        connect(drums.SensorsBus, SensorsBus)           annotation (points=[80,138;
              172,138; 172,160; 200,160],              style(color=84, rgbcolor=
               {255,170,213}));
        connect(Sh_LP_Out, HeatExchangersGroup.Sh_LP_Out) annotation (points=[
              80,-200; 80,-140; 50,-140; 50,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_IP_Out, HeatExchangersGroup.Sh_IP_Out) annotation (points=[
              20,-200; 20,-160; -10,-160; -10,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_Out, HeatExchangersGroup.Rh_IP_Out) annotation (points=[
              -40,-200; -40,-160; -31,-160; -31,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_In, HeatExchangersGroup.Rh_IP_In) annotation (points=[
              -100,-200; -100,-160; -49,-160; -49,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_HP_Out, HeatExchangersGroup.Sh_HP_Out) annotation (points=[
              -160,-200; -160,-140; -70,-140; -70,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.GasIn, GasIn) annotation (points=[-100,-75;
              -144,-75; -144,-40; -200,-40], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(GasOut, HeatExchangersGroup.GasOut) annotation (points=[200,-40;
              120,-40; 120,-75; 80,-75], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_LP_In, drums.WaterForLP) annotation (
            points=[68,-30; 68,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_LP_In, drums.ToRiser_LP) annotation (
            points=[50,-30; 50,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_LP_Out, drums.FromRiser_LP) annotation (
            points=[41,-30; 42,-16; 41,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Sh_LP_In, drums.Steam_LP_Out) annotation (
            points=[32,-30; 32,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_IP_In, drums.WaterForIP) annotation (
            points=[8,-30; 8,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_IP_In, drums.ToRiser_IP) annotation (
            points=[-10,-30; -10,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Sh_IP_In, drums.Steam_IP_Out) annotation (
            points=[-28,-30; -28,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_HP_In, drums.WaterForHP) annotation (
            points=[-52,-30; -52,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_HP_In, drums.ToRiser_HP) annotation (
            points=[-70,-30; -70,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Sh_HP_In, drums.Steam_HP_Out) annotation (
            points=[-88,-30; -88,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_IP_Out, drums.FromRiser_IP) annotation (
            points=[-19,-30; -19,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_IP_Out, drums.Feed_IP) annotation (
            points=[-1,-30; -1,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_LP_Out, drums.Feed_LP) annotation (
            points=[59,-30; 59,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_HP_Out, drums.Feed_HP) annotation (
            points=[-61,-30; -61,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_HP_Out, drums.FromRiser_HP) annotation (
            points=[-79,-30; -79,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(WaterIn, stateInletWater.inlet) 
          annotation (points=[160,-200; 160,-116], style(thickness=2));
        connect(stateInletWater.outlet, drums.WaterIn) 
          annotation (points=[160,-104; 160,162; 80,162], style(thickness=2));
      end HRSG_3LRh_wa;
      
      model HRSG_3LRh_wafp 
        "Heat Recovery Steam Generator with three pressure level and reheat, without attemperation and all ideal feed pump" 
        extends Interfaces.HRSG_3LRh;
        
        annotation (Diagram);
        ThermoPower.PowerPlants.HRSG.Examples.DG_3L_CC_wafp drums(
          HPd_rint=1.067,
          HPd_rext=1.167,
          HPd_L=11.920,
          HPd_Cm=0,
          IPd_rint=0.915,
          IPd_rext=1.015,
          IPd_L=7,
          IPd_Cm=0,
          LPd_rint=1.143,
          LPd_rext=1.243,
          LPd_L=11.503,
          LPd_Cm=0,
          RiserHPFlowRate=175.5,
          RiserIPFlowRate=67.5,
          RiserLPFlowRate=41.5,
          redeclare package FluidMedium = FluidMedium,
          SSInit=false,
          fluidLPNomPressure=7.19048e5,
          LPd_hvstart=2.76051e6,
          LPd_hlstart=6.68356e5,
          fluidHPNomPressure=1.626e7,
          fluidIPNomPressure=3.3816e6,
          HPd_hvstart=2.53239e6,
          HPd_hlstart=1.5879e6,
          IPd_hvstart=2.794e6,
          IPd_hlstart=1.0265e6) annotation (extent=[-100,0; 80,180]);
        HEG_3LRh_wa HeatExchangersGroup(
          gasNomFlowRate=585.5,
          fluidHPNomFlowRate_Sh=70.59,
          fluidHPNomPressure_Sh=134.3e5,
          fluidHPNomFlowRate_Ev=175.5,
          fluidHPNomPressure_Ev=137.1e5,
          fluidHPNomFlowRate_Ec=70.10,
          fluidHPNomPressure_Ec=138.9e5,
          fluidIPNomFlowRate_Rh=81.10,
          fluidIPNomPressure_Rh=28.4e5,
          fluidIPNomFlowRate_Sh=13.5,
          fluidIPNomPressure_Sh=29.5e5,
          fluidIPNomFlowRate_Ev=67.5,
          fluidIPNomPressure_Ev=37.16e5,
          fluidIPNomFlowRate_Ec=21.8,
          fluidIPNomPressure_Ec=48.6e5,
          fluidLPNomFlowRate_Sh=6.91,
          fluidLPNomPressure_Sh=6.6e5,
          fluidLPNomFlowRate_Ev=41.49,
          fluidLPNomPressure_Ev=15.34e5,
          fluidLPNomFlowRate_Ec=122.4,
          fluidLPNomPressure_Ec=19.8e5,
          Sh2_HP_N_G=3,
          Sh2_HP_N_F=5,
          Sh2_HP_exchSurface_G=3636,
          Sh2_HP_exchSurface_F=421.844,
          Sh2_HP_extSurfaceTub=540.913,
          Sh2_HP_gasVol=10,
          Sh2_HP_fluidVol=2.615,
          Sh2_HP_metalVol=1.685,
          Sh1_HP_N_G=3,
          Sh1_HP_N_F=7,
          Sh1_HP_exchSurface_G=8137.2,
          Sh1_HP_exchSurface_F=612.387,
          Sh1_HP_extSurfaceTub=721.256,
          Sh1_HP_gasVol=10,
          Sh1_HP_fluidVol=4.134,
          Sh1_HP_metalVol=1.600,
          Ev_HP_N_G=4,
          Ev_HP_N_F=4,
          Ev_HP_exchSurface_G=30501.9,
          Ev_HP_exchSurface_F=2296.328,
          Ev_HP_extSurfaceTub=2704.564,
          Ev_HP_gasVol=10,
          Ev_HP_fluidVol=15.500,
          Ev_HP_metalVol=6.001,
          Ec2_HP_N_G=3,
          Ec2_HP_N_F=6,
          Ec2_HP_exchSurface_G=20335,
          Ec2_HP_exchSurface_F=1451.506,
          Ec2_HP_extSurfaceTub=1803.043,
          Ec2_HP_gasVol=10,
          Ec2_HP_fluidVol=9.290,
          Ec2_HP_metalVol=5.045,
          Ec1_HP_N_G=3,
          Ec1_HP_N_F=5,
          Ec1_HP_exchSurface_G=12201.2,
          Ec1_HP_exchSurface_F=870.904,
          Ec1_HP_extSurfaceTub=1081.826,
          Ec1_HP_gasVol=10,
          Ec1_HP_fluidVol=5.574,
          Ec1_HP_metalVol=3.027,
          Rh2_IP_N_F=7,
          Rh2_IP_exchSurface_G=4630.2,
          Rh2_IP_exchSurface_F=873.079,
          Rh2_IP_extSurfaceTub=1009.143,
          Rh2_IP_fluidVol=8.403,
          Rh2_IP_metalVol=2.823,
          Rh1_IP_N_F=5,
          Rh1_IP_exchSurface_G=4630,
          Rh1_IP_exchSurface_F=900.387,
          Rh1_IP_extSurfaceTub=1009.250,
          Rh1_IP_fluidVol=8.936,
          Rh1_IP_metalVol=2.292,
          Sh_IP_N_G=3,
          Sh_IP_N_F=7,
          Sh_IP_exchSurface_G=2314.8,
          Sh_IP_exchSurface_F=450.218,
          Sh_IP_extSurfaceTub=504.652,
          Sh_IP_gasVol=10,
          Sh_IP_fluidVol=4.468,
          Sh_IP_metalVol=1.146,
          Ev_IP_N_G=4,
          Ev_IP_N_F=4,
          Ev_IP_exchSurface_G=24402,
          Ev_IP_exchSurface_F=1837.063,
          Ev_IP_extSurfaceTub=2163.652,
          Ev_IP_gasVol=10,
          Ev_IP_fluidVol=12.400,
          Ev_IP_metalVol=4.801,
          Ec_IP_N_G=3,
          Ec_IP_N_F=5,
          Ec_IP_exchSurface_G=4067.2,
          Ec_IP_exchSurface_F=306.177,
          Ec_IP_extSurfaceTub=360.609,
          Ec_IP_gasVol=10,
          Ec_IP_fluidVol=2.067,
          Ec_IP_metalVol=0.800,
          Sh_LP_N_G=3,
          Sh_LP_N_F=7,
          Sh_LP_exchSurface_G=1708.2,
          Sh_LP_exchSurface_F=225.073,
          Sh_LP_extSurfaceTub=252.286,
          Sh_LP_gasVol=10,
          Sh_LP_fluidVol=2.234,
          Sh_LP_metalVol=0.573,
          Ev_LP_N_G=4,
          Ev_LP_N_F=4,
          Ev_LP_exchSurface_G=24402,
          Ev_LP_exchSurface_F=2292.926,
          Ev_LP_extSurfaceTub=2592.300,
          Ev_LP_gasVol=10,
          Ev_LP_fluidVol=19.318,
          Ev_LP_metalVol=5.374,
          Ec_LP_N_G=3,
          Ec_LP_N_F=6,
          Ec_LP_exchSurface_G=40095.9,
          Ec_LP_exchSurface_F=3439.389,
          Ec_LP_extSurfaceTub=3888.449,
          Ec_LP_gasVol=10,
          Ec_LP_fluidVol=28.977,
          Ec_LP_metalVol=8.061,
          use_T_Ev=false,
          Sh2_HP_Tstart_G_In=884.65,
          Sh2_HP_Tstart_G_Out=837.31,
          Sh2_HP_Tstart_M_In=742.65,
          Sh2_HP_Tstart_M_Out=823.28,
          Sh2_HP_Tstart_F_In=742.65,
          Sh2_HP_Tstart_F_Out=823.28,
          Sh1_HP_Tstart_G_In=837.15,
          Sh1_HP_Tstart_G_Out=748.60,
          Sh1_HP_Tstart_M_In=606.59,
          Sh1_HP_Tstart_M_Out=743.18,
          Sh1_HP_Tstart_F_In=606.59,
          Sh1_HP_Tstart_F_Out=743.18,
          Ev_HP_Tstart_G_In=747.15,
          Ev_HP_Tstart_G_Out=620.30,
          Ev_HP_hstart_F_In=1.514e6,
          Ev_HP_hstart_F_Out=2.002e6,
          Ec2_HP_Tstart_G_In=614.15,
          Ec2_HP_Tstart_G_Out=558.98,
          Ec2_HP_Tstart_M_In=494.67,
          Ec2_HP_Tstart_M_Out=594.14,
          Ec2_HP_Tstart_F_In=494.67,
          Ec2_HP_Tstart_F_Out=594.14,
          Ec1_HP_Tstart_M_In=431.77,
          Ec1_HP_Tstart_M_Out=494.67,
          Ec1_HP_Tstart_F_In=431.77,
          Ec1_HP_Tstart_F_Out=494.67,
          Rh2_IP_Tstart_M_In=717.31,
          Rh2_IP_Tstart_M_Out=813.09,
          Rh2_IP_Tstart_F_In=717.31,
          Rh2_IP_Tstart_F_Out=813.09,
          Rh1_IP_Tstart_M_In=618.31,
          Rh1_IP_Tstart_M_Out=717.34,
          Rh1_IP_Tstart_F_In=618.31,
          Rh1_IP_Tstart_F_Out=717.34,
          Sh_IP_Tstart_G_In=620.15,
          Sh_IP_Tstart_G_Out=614.50,
          Sh_IP_Tstart_M_In=506.08,
          Sh_IP_Tstart_M_Out=605.11,
          Sh_IP_Tstart_F_In=506.08,
          Sh_IP_Tstart_F_Out=605.11,
          Ev_IP_Tstart_G_In=558.15,
          Ev_IP_Tstart_G_Out=518.51,
          Ev_IP_hstart_F_In=9.92e5,
          Ev_IP_hstart_F_Out=1.37e6,
          Ec_IP_Tstart_G_In=517.15,
          Ec_IP_Tstart_G_Out=480.11,
          Ec_IP_Tstart_M_In=430.24,
          Ec_IP_Tstart_M_Out=493.16,
          Ec_IP_Tstart_F_In=430.24,
          Ec_IP_Tstart_F_Out=493.16,
          Sh_LP_Tstart_G_In=519.15,
          Sh_LP_Tstart_G_Out=517.44,
          Sh_LP_Tstart_M_In=435.75,
          Sh_LP_Tstart_M_Out=505.04,
          Sh_LP_Tstart_F_In=435.75,
          Sh_LP_Tstart_F_Out=505.75,
          Ev_LP_Tstart_G_In=480.00,
          Ev_LP_Tstart_G_Out=453.47,
          Ev_LP_hstart_F_In=6.625e5,
          Ev_LP_hstart_F_Out=1.065e6,
          Ec_LP_Tstart_G_In=453.47,
          Ec_LP_Tstart_G_Out=372.35,
          Ec_LP_Tstart_M_In=331.05,
          Ec_LP_Tstart_M_Out=428.09,
          Ec_LP_Tstart_F_In=331.05,
          Ec_LP_Tstart_F_Out=428.09,
          rhomcm=7900*578.05,
          lambda=20,
          Ec_LP(gamma_G=46.8, gamma_F=4000),
          Ev_LP(gamma_G=127, gamma_F=20000),
          Ec1HP_EcIP(
            gamma_G_A=42,
            gamma_G_B=45,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh_LP(gamma_G=16.6, gamma_F=4000),
          Ev_IP(gamma_G=58.5, gamma_F=20000),
          Ec2_HP(gamma_G=56, gamma_F=4000),
          Sh_IP(gamma_G=33, gamma_F=4000),
          Ev_HP(gamma_G=46.5, gamma_F=20000),
          gasNomPressure=1e5,
          Sh1HP_Rh1IP(
            gamma_G_A=70,
            gamma_G_B=80,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh2HP_Rh2IP(
            gamma_G_A=83.97,
            gamma_G_B=80,
            gamma_F_A=4000,
            gamma_F_B=4000),
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          Ev_HP_Tstart_M_In=FluidMedium.temperature_ph(137.1e5, 1.514e6),
          Ev_HP_Tstart_M_Out=FluidMedium.temperature_ph(137.1e5, 2.002e6),
          Ev_IP_Tstart_M_In=FluidMedium.temperature_ph(37.16e5, 9.92e5),
          Ev_IP_Tstart_M_Out=FluidMedium.temperature_ph(37.16e5, 1.37e6),
          Ev_LP_Tstart_M_In=FluidMedium.temperature_ph(15.34e5, 6.625e5),
          Ev_LP_Tstart_M_Out=FluidMedium.temperature_ph(15.34e5, 1.065e6)) 
                             annotation (extent=[-100,-120; 80,-30]);
        replaceable Components.BaseReader_water stateInletWater(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[150,-120; 170,-100],
                                                                  rotation=90);
      equation 
        connect(ActuatorsBus, drums.ActuatorsBus)           annotation (points=[200,100;
              140,100; 140,120; 80,120],            style(color=52, rgbcolor={
                213,255,170}));
        connect(drums.SensorsBus, SensorsBus)           annotation (points=[80,138;
              140,138; 140,160; 200,160],              style(color=84, rgbcolor=
               {255,170,213}));
        connect(HeatExchangersGroup.GasIn, GasIn) annotation (points=[-100,-75;
              -132,-75; -132,-40; -200,-40], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.GasOut, GasOut) annotation (points=[80,-75;
              140,-75; 140,-40; 200,-40], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_LP_In, drums.WaterForLP) annotation (
            points=[68,-30; 68,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_LP_In, drums.ToRiser_LP) annotation (
            points=[50,-30; 50,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_LP_Out, drums.FromRiser_LP) annotation (
            points=[41,-30; 42,-14; 41,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Sh_LP_In, drums.Steam_LP_Out) annotation (
            points=[32,-30; 32,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_IP_In, drums.WaterForIP) annotation (
            points=[8,-30; 8,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_IP_In, drums.ToRiser_IP) annotation (
            points=[-10,-30; -10,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Sh_IP_In, drums.Steam_IP_Out) annotation (
            points=[-28,-30; -28,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_HP_In, drums.WaterForHP) annotation (
            points=[-52,-30; -52,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_HP_In, drums.ToRiser_HP) annotation (
            points=[-70,-30; -70,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Sh_HP_In, drums.Steam_HP_Out) annotation (
            points=[-88,-30; -88,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_HP_Out, HeatExchangersGroup.Sh_HP_Out) annotation (points=[
              -160,-200; -160,-152; -70,-152; -70,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_IP_Out, HeatExchangersGroup.Sh_IP_Out) annotation (points=[
              20,-200; 20,-160; -10,-160; -10,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP_Out, HeatExchangersGroup.Sh_LP_Out) annotation (points=[
              80,-200; 80,-160; 50,-160; 50,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_HP_Out, drums.FromRiser_HP) annotation (
            points=[-79,-30; -79,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_HP_Out, drums.Feed_HP) annotation (
            points=[-61,-30; -61,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ev_IP_Out, drums.FromRiser_IP) annotation (
            points=[-19,-30; -19,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_IP_Out, drums.Feed_IP) annotation (
            points=[-1,-30; -1,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.Ec_LP_Out, drums.Feed_LP) annotation (
            points=[59,-30; 59,0], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_Out, HeatExchangersGroup.Rh_IP_Out) annotation (points=[
              -40,-200; -40,-160; -31,-160; -31,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_In, HeatExchangersGroup.Rh_IP_In) annotation (points=[
              -100,-200; -100,-160; -49,-160; -49,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(WaterIn, stateInletWater.inlet) 
          annotation (points=[160,-200; 160,-116], style(thickness=2));
        connect(stateInletWater.outlet, drums.WaterIn) 
          annotation (points=[160,-104; 160,162; 80,162], style(thickness=2));
      end HRSG_3LRh_wafp;
      
      model HRSG_tap_wa "Heat Recovery Steam Generator with three pressure level,
  reheat and tappings of saturated water for external heater, without attemperation" 
        extends Interfaces.HRSG_3LRh_tap;
        
        annotation (Diagram);
        ThermoPower.PowerPlants.HRSG.Examples.DG_3L_tap_CC_wa drums(
          HPd_rint=1.067,
          HPd_rext=1.167,
          HPd_L=11.920,
          HPd_Cm=0,
          IPd_rint=0.915,
          IPd_rext=1.015,
          IPd_L=7,
          IPd_Cm=0,
          LPd_rint=1.143,
          LPd_rext=1.243,
          LPd_L=11.503,
          LPd_Cm=0,
          RiserHPFlowRate=175.5,
          RiserIPFlowRate=67.5,
          RiserLPFlowRate=41.5,
          redeclare package FluidMedium = FluidMedium,
          SSInit=false,
          fluidLPNomPressure=7.19048e5,
          LPd_hvstart=2.76051e6,
          LPd_hlstart=6.68356e5,
          fluidHPNomPressure=1.626e7,
          fluidIPNomPressure=3.3816e6,
          HPd_hvstart=2.53239e6,
          HPd_hlstart=1.5879e6,
          IPd_hvstart=2.794e6,
          n0_TFP=1500,
          inletTFPNomPressure=5398.2,
          TFPNomFlowRate=89.8,
          hstart_TFP=1.43495e5,
          mixHP_V=5,
          mixIP_V=5,
          IPd_hlstart=1.0265e6) annotation (extent=[-100,-20; 80,160]);
        ThermoPower.PowerPlants.HRSG.Examples.HEG_3LRh_wa HeatExchangersGroup(
          gasNomFlowRate=585.5,
          fluidHPNomFlowRate_Sh=70.59,
          fluidHPNomPressure_Sh=134.3e5,
          fluidHPNomFlowRate_Ev=175.5,
          fluidHPNomPressure_Ev=137.1e5,
          fluidHPNomFlowRate_Ec=70.10,
          fluidHPNomPressure_Ec=138.9e5,
          fluidIPNomFlowRate_Rh=81.10,
          fluidIPNomPressure_Rh=28.4e5,
          fluidIPNomFlowRate_Sh=13.5,
          fluidIPNomPressure_Sh=29.5e5,
          fluidIPNomFlowRate_Ev=67.5,
          fluidIPNomPressure_Ev=37.16e5,
          fluidIPNomFlowRate_Ec=21.8,
          fluidIPNomPressure_Ec=48.6e5,
          fluidLPNomFlowRate_Sh=6.91,
          fluidLPNomPressure_Sh=6.6e5,
          fluidLPNomFlowRate_Ev=41.49,
          fluidLPNomPressure_Ev=15.34e5,
          fluidLPNomFlowRate_Ec=122.4,
          fluidLPNomPressure_Ec=19.8e5,
          Sh2_HP_N_G=3,
          Sh2_HP_N_F=5,
          Sh2_HP_exchSurface_G=3636,
          Sh2_HP_exchSurface_F=421.844,
          Sh2_HP_extSurfaceTub=540.913,
          Sh2_HP_gasVol=10,
          Sh2_HP_fluidVol=2.615,
          Sh2_HP_metalVol=1.685,
          Sh1_HP_N_G=3,
          Sh1_HP_N_F=7,
          Sh1_HP_exchSurface_G=8137.2,
          Sh1_HP_exchSurface_F=612.387,
          Sh1_HP_extSurfaceTub=721.256,
          Sh1_HP_gasVol=10,
          Sh1_HP_fluidVol=4.134,
          Sh1_HP_metalVol=1.600,
          Ev_HP_N_G=4,
          Ev_HP_N_F=4,
          Ev_HP_exchSurface_G=30501.9,
          Ev_HP_exchSurface_F=2296.328,
          Ev_HP_extSurfaceTub=2704.564,
          Ev_HP_gasVol=10,
          Ev_HP_fluidVol=15.500,
          Ev_HP_metalVol=6.001,
          Ec2_HP_N_G=3,
          Ec2_HP_N_F=6,
          Ec2_HP_exchSurface_G=20335,
          Ec2_HP_exchSurface_F=1451.506,
          Ec2_HP_extSurfaceTub=1803.043,
          Ec2_HP_gasVol=10,
          Ec2_HP_fluidVol=9.290,
          Ec2_HP_metalVol=5.045,
          Ec1_HP_N_G=3,
          Ec1_HP_N_F=5,
          Ec1_HP_exchSurface_G=12201.2,
          Ec1_HP_exchSurface_F=870.904,
          Ec1_HP_extSurfaceTub=1081.826,
          Ec1_HP_gasVol=10,
          Ec1_HP_fluidVol=5.574,
          Ec1_HP_metalVol=3.027,
          Rh2_IP_N_F=7,
          Rh2_IP_exchSurface_G=4630.2,
          Rh2_IP_exchSurface_F=873.079,
          Rh2_IP_extSurfaceTub=1009.143,
          Rh2_IP_fluidVol=8.403,
          Rh2_IP_metalVol=2.823,
          Rh1_IP_N_F=5,
          Rh1_IP_exchSurface_G=4630,
          Rh1_IP_exchSurface_F=900.387,
          Rh1_IP_extSurfaceTub=1009.250,
          Rh1_IP_fluidVol=8.936,
          Rh1_IP_metalVol=2.292,
          Sh_IP_N_G=3,
          Sh_IP_N_F=7,
          Sh_IP_exchSurface_G=2314.8,
          Sh_IP_exchSurface_F=450.218,
          Sh_IP_extSurfaceTub=504.652,
          Sh_IP_gasVol=10,
          Sh_IP_fluidVol=4.468,
          Sh_IP_metalVol=1.146,
          Ev_IP_N_G=4,
          Ev_IP_N_F=4,
          Ev_IP_exchSurface_G=24402,
          Ev_IP_exchSurface_F=1837.063,
          Ev_IP_extSurfaceTub=2163.652,
          Ev_IP_gasVol=10,
          Ev_IP_fluidVol=12.400,
          Ev_IP_metalVol=4.801,
          Ec_IP_N_G=3,
          Ec_IP_N_F=5,
          Ec_IP_exchSurface_G=4067.2,
          Ec_IP_exchSurface_F=306.177,
          Ec_IP_extSurfaceTub=360.609,
          Ec_IP_gasVol=10,
          Ec_IP_fluidVol=2.067,
          Ec_IP_metalVol=0.800,
          Sh_LP_N_G=3,
          Sh_LP_N_F=7,
          Sh_LP_exchSurface_G=1708.2,
          Sh_LP_exchSurface_F=225.073,
          Sh_LP_extSurfaceTub=252.286,
          Sh_LP_gasVol=10,
          Sh_LP_fluidVol=2.234,
          Sh_LP_metalVol=0.573,
          Ev_LP_N_G=4,
          Ev_LP_N_F=4,
          Ev_LP_exchSurface_G=24402,
          Ev_LP_exchSurface_F=2292.926,
          Ev_LP_extSurfaceTub=2592.300,
          Ev_LP_gasVol=10,
          Ev_LP_fluidVol=19.318,
          Ev_LP_metalVol=5.374,
          Ec_LP_N_G=3,
          Ec_LP_N_F=6,
          Ec_LP_exchSurface_G=40095.9,
          Ec_LP_exchSurface_F=3439.389,
          Ec_LP_extSurfaceTub=3888.449,
          Ec_LP_gasVol=10,
          Ec_LP_fluidVol=28.977,
          Ec_LP_metalVol=8.061,
          use_T_Ev=false,
          Sh2_HP_Tstart_G_In=884.65,
          Sh2_HP_Tstart_G_Out=837.31,
          Sh2_HP_Tstart_M_In=742.65,
          Sh2_HP_Tstart_M_Out=823.28,
          Sh2_HP_Tstart_F_In=742.65,
          Sh2_HP_Tstart_F_Out=823.28,
          Sh1_HP_Tstart_G_In=837.15,
          Sh1_HP_Tstart_G_Out=748.60,
          Sh1_HP_Tstart_M_In=606.59,
          Sh1_HP_Tstart_M_Out=743.18,
          Sh1_HP_Tstart_F_In=606.59,
          Sh1_HP_Tstart_F_Out=743.18,
          Ev_HP_Tstart_G_In=747.15,
          Ev_HP_Tstart_G_Out=620.30,
          Ev_HP_hstart_F_In=1.514e6,
          Ev_HP_hstart_F_Out=2.002e6,
          Ec2_HP_Tstart_G_In=614.15,
          Ec2_HP_Tstart_G_Out=558.98,
          Ec2_HP_Tstart_M_In=494.67,
          Ec2_HP_Tstart_M_Out=594.14,
          Ec2_HP_Tstart_F_In=494.67,
          Ec2_HP_Tstart_F_Out=594.14,
          Ec1_HP_Tstart_M_In=431.77,
          Ec1_HP_Tstart_M_Out=494.67,
          Ec1_HP_Tstart_F_In=431.77,
          Ec1_HP_Tstart_F_Out=494.67,
          Rh2_IP_Tstart_M_In=717.31,
          Rh2_IP_Tstart_M_Out=813.09,
          Rh2_IP_Tstart_F_In=717.31,
          Rh2_IP_Tstart_F_Out=813.09,
          Rh1_IP_Tstart_M_In=618.31,
          Rh1_IP_Tstart_M_Out=717.34,
          Rh1_IP_Tstart_F_In=618.31,
          Rh1_IP_Tstart_F_Out=717.34,
          Sh_IP_Tstart_G_In=620.15,
          Sh_IP_Tstart_G_Out=614.50,
          Sh_IP_Tstart_M_In=506.08,
          Sh_IP_Tstart_M_Out=605.11,
          Sh_IP_Tstart_F_In=506.08,
          Sh_IP_Tstart_F_Out=605.11,
          Ev_IP_Tstart_G_In=558.15,
          Ev_IP_Tstart_G_Out=518.51,
          Ev_IP_hstart_F_In=9.92e5,
          Ev_IP_hstart_F_Out=1.37e6,
          Ec_IP_Tstart_G_In=517.15,
          Ec_IP_Tstart_G_Out=480.11,
          Ec_IP_Tstart_M_In=430.24,
          Ec_IP_Tstart_M_Out=493.16,
          Ec_IP_Tstart_F_In=430.24,
          Ec_IP_Tstart_F_Out=493.16,
          Sh_LP_Tstart_G_In=519.15,
          Sh_LP_Tstart_G_Out=517.44,
          Sh_LP_Tstart_M_In=435.75,
          Sh_LP_Tstart_M_Out=505.04,
          Sh_LP_Tstart_F_In=435.75,
          Sh_LP_Tstart_F_Out=505.75,
          Ev_LP_Tstart_G_In=480.00,
          Ev_LP_Tstart_G_Out=453.47,
          Ev_LP_hstart_F_In=6.625e5,
          Ev_LP_hstart_F_Out=1.065e6,
          Ec_LP_Tstart_G_In=453.47,
          Ec_LP_Tstart_G_Out=372.35,
          Ec_LP_Tstart_M_In=331.05,
          Ec_LP_Tstart_M_Out=428.09,
          Ec_LP_Tstart_F_In=331.05,
          Ec_LP_Tstart_F_Out=428.09,
          rhomcm=7900*578.05,
          lambda=20,
          Ec_LP(gamma_G=46.8, gamma_F=4000),
          Ev_LP(gamma_G=127, gamma_F=20000),
          Ec1HP_EcIP(
            gamma_G_A=42,
            gamma_G_B=45,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh_LP(gamma_G=16.6, gamma_F=4000),
          Ev_IP(gamma_G=58.5, gamma_F=20000),
          Ec2_HP(gamma_G=56, gamma_F=4000),
          Sh_IP(gamma_G=33, gamma_F=4000),
          Ev_HP(gamma_G=46.5, gamma_F=20000),
          gasNomPressure=1e5,
          Sh1HP_Rh1IP(
            gamma_G_A=70,
            gamma_G_B=80,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh2HP_Rh2IP(
            gamma_G_A=83.97,
            gamma_G_B=80,
            gamma_F_A=4000,
            gamma_F_B=4000),
          redeclare package FlueGasMedium = FlueGasMedium,
          redeclare package FluidMedium = FluidMedium,
          Ev_HP_Tstart_M_In=FluidMedium.temperature_ph(137.1e5, 1.514e6),
          Ev_HP_Tstart_M_Out=FluidMedium.temperature_ph(137.1e5, 2.002e6),
          Ev_IP_Tstart_M_In=FluidMedium.temperature_ph(37.16e5, 9.92e5),
          Ev_IP_Tstart_M_Out=FluidMedium.temperature_ph(37.16e5, 1.37e6),
          Ev_LP_Tstart_M_In=FluidMedium.temperature_ph(15.34e5, 6.625e5),
          Ev_LP_Tstart_M_Out=FluidMedium.temperature_ph(15.34e5, 1.065e6)) 
                             annotation (extent=[-100,-140; 80,-50]);
        replaceable Components.BaseReader_water stateInletWater(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[150,-120; 170,-100],
                                                                  rotation=90);
      equation 
        connect(ActuatorsBus, drums.ActuatorsBus)           annotation (points=[200,100;
              80,100],                              style(color=52, rgbcolor={
                213,255,170}));
        connect(drums.SensorsBus, SensorsBus)           annotation (points=[80,118;
              132,118; 132,160; 200,160],              style(color=84, rgbcolor=
               {255,170,213}));
        connect(drums.tapLPwater, LPwater_Out) annotation (points=[-28.6,160;
              -28,160; -28,172; 80,172; 80,200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.tapIPwater, IPwater_Out) annotation (points=[-40,160; -40,
              180; 22,180; 22,200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.tapHPwater, HPwater_Out) annotation (points=[-52,160; -52,
              180; -100,180; -100,200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.IPsteamFromExUse, IPsteam_In) annotation (points=[-70,160;
              -70,184; -40,184; -40,200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.HPsteamFromExUse, HPsteam_In) annotation (points=[-82,160;
              -82,172; -160,172; -160,200], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(GasOut, HeatExchangersGroup.GasOut) annotation (points=[200,-40;
              130,-40; 130,-95; 80,-95], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HeatExchangersGroup.GasIn, GasIn) annotation (points=[-100,-95;
              -144,-95; -144,-40; -200,-40], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_HP_Out, HeatExchangersGroup.Sh_HP_Out) annotation (points=[
              -160,-200; -160,-150; -70,-150; -70,-140], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_In, HeatExchangersGroup.Rh_IP_In) annotation (points=[
              -100,-200; -100,-160; -49,-160; -49,-140], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Rh_IP_Out, HeatExchangersGroup.Rh_IP_Out) annotation (points=[
              -40,-200; -40,-168; -31,-168; -31,-140], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_IP_Out, HeatExchangersGroup.Sh_IP_Out) annotation (points=[
              20,-200; 22,-200; 22,-164; -10,-164; -10,-140], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(Sh_LP_Out, HeatExchangersGroup.Sh_LP_Out) annotation (points=[
              80,-200; 80,-162; 50,-162; 50,-140], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.Steam_HP_Out, HeatExchangersGroup.Sh_HP_In) annotation (
            points=[-88,-20; -88,-50],          style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.FromRiser_HP, HeatExchangersGroup.Ev_HP_Out) annotation (
            points=[-79,-20; -79,-50],          style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.ToRiser_HP, HeatExchangersGroup.Ec_HP_In) annotation (
            points=[-70,-20; -70,-50], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.Feed_HP, HeatExchangersGroup.Ec_HP_Out) annotation (
            points=[-61,-20; -61,-50],                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.WaterForHP, HeatExchangersGroup.Ev_HP_In) annotation (
            points=[-52,-20; -52,-50], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.Steam_IP_Out, HeatExchangersGroup.Sh_IP_In) annotation (
            points=[-28,-20; -28,-50], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.FromRiser_IP, HeatExchangersGroup.Ev_IP_Out) annotation (
            points=[-19,-20; -19,-50],                   style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.ToRiser_IP, HeatExchangersGroup.Ev_IP_In) annotation (
            points=[-10,-20; -10,-50],          style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.Feed_IP, HeatExchangersGroup.Ec_IP_Out) annotation (
            points=[-1,-20; -1,-50],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.WaterForIP, HeatExchangersGroup.Ec_IP_In) annotation (
            points=[8,-20; 8,-50], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.Steam_LP_Out, HeatExchangersGroup.Sh_LP_In) annotation (
            points=[32,-20; 32,-50], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.FromRiser_LP, HeatExchangersGroup.Ev_LP_Out) annotation (
            points=[41,-20; 41,-50],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.ToRiser_LP, HeatExchangersGroup.Ev_LP_In) annotation (
            points=[50,-20; 50,-50],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.Feed_LP, HeatExchangersGroup.Ec_LP_Out) annotation (
            points=[59,-20; 58,-20; 58,-50; 59,-50], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(drums.WaterForLP, HeatExchangersGroup.Ec_LP_In) annotation (
            points=[68,-20; 68,-50], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(WaterIn, stateInletWater.inlet) 
          annotation (points=[160,-200; 160,-116], style(thickness=2));
        connect(stateInletWater.outlet, drums.WaterIn) 
          annotation (points=[160,-104; 160,142; 80,142], style(thickness=2));
      end HRSG_tap_wa;
      
    end Examples;
    
    package Tests 
      model computation_states 
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        parameter SI.SpecificEnthalpy h=2.39102e6 "value of specific enthalpy";
        parameter SI.Pressure p=5389.2 "value of pressure";
        parameter SI.Temperature T=288 "value of temperature";
        
        SI.Temperature Tf "Temperature (p,h)";
        SI.SpecificEnthalpy hf "Specific enthalpy (p,T)";
        SI.Temperature Ts "Saturation temperature (p)";
        SI.SpecificEnthalpy hv "Dew specific enthalpy (p)";
        SI.SpecificEnthalpy hl "Bubble specific enthalpy (p)";
        SI.Density rhov "Dew density (p)";
        SI.Density rhol "Bubble density (p)";
        FluidMedium.SaturationProperties sat "Saturation properties";
        
      equation 
        sat.psat = p;
        sat.Tsat = FluidMedium.saturationTemperature(p);
        
        Ts = sat.Tsat;
        hl=FluidMedium.bubbleEnthalpy(sat);
        hv=FluidMedium.dewEnthalpy(sat);
        Tf=FluidMedium.temperature_ph(p,h);
        hf=FluidMedium.specificEnthalpy_pT(p,T);
        rhov=FluidMedium.density_ph(p,h);
        rhol=FluidMedium.bubbleDensity(sat);
      end computation_states;
      
      model TestHE_simp 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        Water.SourceW sourseW_water(redeclare package Medium = FluidMedium,
              w0=70.59,
          p0=129.6e5,
          h=3.251e6)          annotation (extent=[-20,60; 0,80],  rotation=270);
        Water.SinkP sinkP_water(redeclare package Medium = FluidMedium,
          p0=129.6e5,
          h=3.328e6)      annotation (extent=[-20,-98; 0,-78],  rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=862) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          w0=585.5,
          redeclare package Medium = FlueGasMedium,
          T=884.65)          annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.HE_simp hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=3,
          N_F=5,
          exchSurface_G=540.913,
          exchSurface_F=421.844,
          gasVol=10,
          fluidVol=2.615,
          metalVol=1.685,
          rhomcm=7780*688,
          lambda=20,
          gasNomFlowRate=585.5,
          gamma_G=83.97,
          gamma_F=4000,
          Tstart_G_In=884.65,
          Tstart_F_In=742.65,
          fluidNomFlowRate=70.59,
          fluidNomPressure=129.6e5,
          gasNomPressure=0,
          Tstart_M_In=743,
          Tstart_M_Out=824.28,
          Tstart_F_Out=769.84,
          SSInit=false,
          Tstart_G_Out=876.35) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SensT T_waterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,32; 4,52], rotation=270);
        Water.SensT T_waterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,-62; 4,-42], rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 10,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -30,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(sinkP_water.flange, T_waterOut.outlet) annotation (points=[-10,-78;
              -10,-68; -10,-68; -10,-58],      style(thickness=2));
        connect(T_waterOut.inlet, hE.waterOut) 
          annotation (points=[-10,-46; -10,-20], style(thickness=2));
        connect(T_waterIn.inlet, sourseW_water.flange) annotation (points=[-10,48;
              -10,54; -10,60; -10,60],     style(thickness=2));
        connect(T_waterIn.outlet, hE.waterIn) 
          annotation (points=[-10,36; -10,20], style(thickness=2));
      end TestHE_simp;
      
      model TestEcLP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 "Nominal mass flowrate";
        parameter SI.Temperature Tstart_G_In=453.47 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=372.35 
          "Outlet gas temperature start value";
        
        //fluid
        parameter SI.MassFlowRate fluidNomFlowRate=89.82 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure=6e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G=35 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_In=307.05 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_Out=428.09 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_In=307.05 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_Out=428.09 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_Out) 
          "Nominal specific enthalpy";
        parameter Boolean SSInit = false "Steady-state initialization";
        
        Water.SourceW sourseW_water(redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate,
          p0=fluidNomPressure,
          h=hstart_F_In)      annotation (extent=[-10,50; 10,70], rotation=270);
        Water.SinkP sinkP_water(redeclare package Medium = FluidMedium,
          p0=fluidNomPressure,
          h=hstart_F_Out) annotation (extent=[-10,-70; 10,-50], rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-10; 70,10]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          w0=gasNomFlowRate,
          T=Tstart_G_In)     annotation (extent=[-70,-10; -50,10]);
        annotation (Diagram);
        Components.HE hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=3,
          N_F=6,
          exchSurface_G=40095.9,
          exchSurface_F=3439.389,
          extSurfaceTub=3888.449,
          gasVol=10,
          fluidVol=28.977,
          metalVol=8.061,
          rhomcm=7900*578.05,
          lambda=20,
          gasNomFlowRate=585.5,
          fluidNomFlowRate=fluidNomFlowRate,
          fluidNomPressure=fluidNomPressure,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_In=Tstart_M_In,
          Tstart_M_Out=Tstart_M_Out,
          Tstart_F_In=Tstart_F_In,
          Tstart_F_Out=Tstart_F_Out,
          gamma_G=gamma_G,
          gamma_F=gamma_F,
          SSInit=SSInit,
          gasNomPressure=5e5) 
          annotation (extent=[-30,-30; 30,30]);
      equation 
        connect(hE.waterIn, sourseW_water.flange) annotation (points=[0,30; 0,
              50; -1.83691e-015,50], style(thickness=2));
        connect(hE.waterOut, sinkP_water.flange) annotation (points=[0,-30; 0,
              -50; 1.83691e-015,-50], style(thickness=2));
        connect(hE.gasIn, sourceW_gas.flange) annotation (points=[-30,0; -50,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(hE.gasOut, sinkP_gas.flange) annotation (points=[30,0; 50,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
      end TestEcLP;
      
      model TestEvLP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 "Nominal mass flowrate";
        parameter SI.Temperature Tstart_G_In=480 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=453.47 
          "Outlet gas temperature start value";
        
        //fluid
        parameter SI.MassFlowRate fluidNomFlowRate=41.49 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure=15.34e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_In=Tstart_F_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_Out=Tstart_F_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_In=FluidMedium.temperature_ph(fluidNomPressure,hstart_F_In) 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_Out=FluidMedium.temperature_ph(fluidNomPressure,hstart_F_Out) 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_In=6.626e5 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_Out=1.065e6 
          "Nominal specific enthalpy";
        
        Water.SourceW sourseW_water(redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate,
          p0=fluidNomPressure,
          h=hstart_F_In)      annotation (extent=[-20,60; 0,80],  rotation=270);
        Water.SinkP sinkP_water(redeclare package Medium = FluidMedium,
          p0=fluidNomPressure,
          h=hstart_F_Out) annotation (extent=[-20,-98; 0,-78],  rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          w0=gasNomFlowRate,
          T=Tstart_G_In)     annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.HE2ph hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=4,
          N_F=4,
          exchSurface_G=24402,
          exchSurface_F=2292.926,
          extSurfaceTub=2592.300,
          gasVol=10,
          fluidVol=19.318,
          metalVol=5.374,
          rhomcm=7900*578.05,
          lambda=20,
          gasNomFlowRate=585.5,
          gasNomPressure=0,
          fluidNomFlowRate=fluidNomFlowRate,
          fluidNomPressure=fluidNomPressure,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_In=Tstart_M_In,
          Tstart_M_Out=Tstart_M_Out,
          Tstart_F_In=Tstart_F_In,
          Tstart_F_Out=Tstart_F_Out,
          gamma_G=gamma_G,
          gamma_F=gamma_F,
          SSInit=true) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SensT T_waterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,32; 4,52], rotation=270);
        Water.SensT T_waterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,-62; 4,-42], rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 10,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -30,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(sinkP_water.flange, T_waterOut.outlet) annotation (points=[-10,-78;
              -10,-68; -10,-68; -10,-58],      style(thickness=2));
        connect(T_waterOut.inlet, hE.waterOut) 
          annotation (points=[-10,-46; -10,-20], style(thickness=2));
        connect(T_waterIn.inlet, sourseW_water.flange) annotation (points=[-10,48;
              -10,60],                     style(thickness=2));
        connect(T_waterIn.outlet, hE.waterIn) 
          annotation (points=[-10,36; -10,20], style(thickness=2));
      end TestEvLP;
      
      model TestShLP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 "Nominal mass flowrate";
        parameter SI.Temperature Tstart_G_In=519.15 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=517.44 
          "Outlet gas temperature start value";
        
        //fluid
        parameter SI.MassFlowRate fluidNomFlowRate=6.91 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure=6.6e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G=50 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_In=Tstart_F_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_Out=Tstart_F_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_In=435.75 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_Out=505.04 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_Out) 
          "Nominal specific enthalpy";
        
        Water.SourceW sourseW_water(redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate,
          p0=fluidNomPressure,
          h=hstart_F_In)      annotation (extent=[-20,60; 0,80],  rotation=270);
        Water.SinkP sinkP_water(redeclare package Medium = FluidMedium,
          p0=fluidNomPressure,
          h=hstart_F_Out) annotation (extent=[-20,-98; 0,-78],  rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          w0=gasNomFlowRate,
          T=Tstart_G_In)     annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.HE hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=3,
          N_F=7,
          exchSurface_G=1708.2,
          exchSurface_F=225.073,
          extSurfaceTub=252.286,
          gasVol=10,
          fluidVol=2.234,
          metalVol=0.573,
          rhomcm=7900*578.05,
          lambda=20,
          gasNomFlowRate=585.5,
          gasNomPressure=0,
          fluidNomFlowRate=fluidNomFlowRate,
          fluidNomPressure=fluidNomPressure,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_In=Tstart_M_In,
          Tstart_M_Out=Tstart_M_Out,
          Tstart_F_In=Tstart_F_In,
          Tstart_F_Out=Tstart_F_Out,
          gamma_G=gamma_G,
          gamma_F=gamma_F,
          SSInit=true) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SensT T_waterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,32; 4,52], rotation=270);
        Water.SensT T_waterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,-62; 4,-42], rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 6,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -26,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(sinkP_water.flange, T_waterOut.outlet) annotation (points=[-10,-78;
              -10,-68; -10,-68; -10,-58],      style(thickness=2));
        connect(T_waterOut.inlet, hE.waterOut) 
          annotation (points=[-10,-46; -10,-16], style(thickness=2));
        connect(T_waterIn.inlet, sourseW_water.flange) annotation (points=[-10,48;
              -10,54; -10,60; -10,60],     style(thickness=2));
        connect(T_waterIn.outlet, hE.waterIn) 
          annotation (points=[-10,36; -10,16], style(thickness=2));
      end TestShLP;
      
      model TestEc1HP_EcIP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 
          "Nominal flow rate through the gas side";
        parameter SI.Temperature Tstart_G_In=517.15 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=480.11 
          "Outlet gas temperature start value";
        
        //fluid A
        parameter SI.MassFlowRate fluidNomFlowRate_A=70.1 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure_A=138.9e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G_A=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F_A=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_A_In=Tstart_F_A_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_A_Out=Tstart_F_A_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_A_In=431.77 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_A_Out=494.67 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_A_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,Tstart_F_A_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_A_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,Tstart_F_A_Out) 
          "Nominal specific enthalpy";
        
        //fluid B
        parameter SI.MassFlowRate fluidNomFlowRate_B=21.8 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure_B=48.6e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G_B=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F_B=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_B_In=Tstart_F_B_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_B_Out=Tstart_F_B_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_B_In=430.24 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_B_Out=493.16 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_B_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,Tstart_F_B_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_B_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,Tstart_F_B_Out) 
          "Nominal specific enthalpy";
        Water.SourceW sourseW_water_A(
          redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate_A,
          p0=fluidNomPressure_A,
          h=hstart_F_A_In)    annotation (extent=[-38,64; -18,84],rotation=270);
        Water.SinkP sinkP_water_A(
          redeclare package Medium = FluidMedium,
          p0=fluidNomPressure_A,
          h=hstart_F_A_Out) 
                          annotation (extent=[-38,-96; -18,-76],rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[60,-10; 80,10]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          T=Tstart_G_In,
          w0=gasNomFlowRate) annotation (extent=[-94,-10; -74,10]);
        annotation (Diagram);
        Components.ParHE hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=3,
          gasVol=10,
          lambda=20,
          N_F_A=5,
          exchSurface_G_A=12201.200,
          exchSurface_F_A=870.904,
          extSurfaceTub_A=1081.826,
          fluidVol_A=5.574,
          metalVol_A=3.027,
          rhomcm_A=7900*578.05,
          N_F_B=5,
          exchSurface_G_B=4067.200,
          exchSurface_F_B=306.177,
          extSurfaceTub_B=360.609,
          fluidVol_B=2.067,
          metalVol_B=0.800,
          rhomcm_B=7900*578.05,
          SSInit=true,
          counterCurrent_A=true,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate_A=fluidNomFlowRate_A,
          fluidNomFlowRate_B=fluidNomFlowRate_B,
          fluidNomPressure_A=fluidNomPressure_A,
          fluidNomPressure_B=fluidNomPressure_B,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_A_In=Tstart_M_A_In,
          Tstart_M_A_Out=Tstart_M_A_Out,
          Tstart_F_A_In=Tstart_F_A_In,
          Tstart_F_A_Out=Tstart_F_A_Out,
          Tstart_M_B_In=Tstart_M_B_In,
          Tstart_M_B_Out=Tstart_M_B_Out,
          Tstart_F_B_In=Tstart_F_B_In,
          Tstart_F_B_Out=Tstart_F_B_Out,
          gamma_G_A=gamma_G_A,
          gamma_G_B=gamma_G_B,
          gamma_F_A=gamma_F_A,
          gamma_F_B=gamma_F_B,
          counterCurrent_B=true,
          gasNomPressure=1e5) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SinkP sinkP_water_B(
          redeclare package Medium = FluidMedium,
          p0=fluidNomPressure_B,
          h=hstart_F_B_Out) 
                          annotation (extent=[-2,-96; 18,-76],  rotation=270);
        Water.SourceW sourseW_water_B(
          redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate_B,
          p0=fluidNomPressure_B,
          h=hstart_F_B_In)    annotation (extent=[-4,64; 16,84],  rotation=270);
        Water.SensT T_waterIn_A(redeclare package Medium = FluidMedium) 
          annotation (extent=[-34,28; -14,48],
                                             rotation=270);
        Water.SensT T_waterOut_A(redeclare package Medium = FluidMedium) 
          annotation (extent=[-34,-52; -14,-32],
                                               rotation=270);
        Water.SensT T_waterOut_B(redeclare package Medium = FluidMedium) 
          annotation (extent=[2,-52; 22,-32],  rotation=270);
        Water.SensT T_waterIn_B(redeclare package Medium = FluidMedium) 
          annotation (extent=[0,28; 20,48],  rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
        
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 6,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 60,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -26,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -74,0],                                     style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_waterOut_A.outlet, sinkP_water_A.flange) annotation (points=[-28,-48;
              -28,-62; -28,-76; -28,-76],          style(thickness=2));
        connect(sinkP_water_B.flange, T_waterOut_B.outlet) annotation (points=[8,-76; 8,
              -69; 8,-69; 8,-62; 8,-48; 8,-48],              style(thickness=2));
        connect(T_waterOut_B.inlet, hE.waterOutB) annotation (points=[8,-36; 8,
              -26; -2,-26; -2,-16], style(thickness=2));
        connect(T_waterOut_A.inlet, hE.waterOutA) annotation (points=[-28,-36;
              -28,-28; -18,-28; -18,-16], style(thickness=2));
        connect(hE.waterInA, T_waterIn_A.outlet) annotation (points=[-18,16;
              -18,24; -28,24; -28,32], style(thickness=2));
        connect(hE.waterInB, T_waterIn_B.outlet) 
          annotation (points=[-2,16; -2,24; 6,24; 6,32], style(thickness=2));
        connect(T_waterIn_B.inlet, sourseW_water_B.flange) 
          annotation (points=[6,44; 6,49; 6,49; 6,54; 6,64; 6,64],
                                                       style(thickness=2));
        connect(T_waterIn_A.inlet, sourseW_water_A.flange) annotation (points=[-28,44;
              -28,54; -28,64; -28,64],         style(thickness=2));
      end TestEc1HP_EcIP;
      
      model TestEvIP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 "Nominal mass flowrate";
        parameter SI.Temperature Tstart_G_In=558.15 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=518.51 
          "Outlet gas temperature start value";
        
        //fluid
        parameter SI.MassFlowRate fluidNomFlowRate=67.5 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure=37.16e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_In=Tstart_F_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_Out=Tstart_F_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_In=FluidMedium.temperature_ph(fluidNomPressure,hstart_F_In) 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_Out=FluidMedium.temperature_ph(fluidNomPressure,hstart_F_Out) 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_In=9.920e5 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_Out=1.370e6 
          "Nominal specific enthalpy";
        
        Water.SourceW sourseW_water(redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate,
          p0=fluidNomPressure,
          h=hstart_F_In)      annotation (extent=[-20,60; 0,80],  rotation=270);
        Water.SinkP sinkP_water(redeclare package Medium = FluidMedium,
          p0=fluidNomPressure,
          h=hstart_F_Out) annotation (extent=[-20,-98; 0,-78],  rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          w0=gasNomFlowRate,
          T=Tstart_G_In)     annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.HE2ph hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=4,
          N_F=4,
          exchSurface_G=24402,
          exchSurface_F=1837.063,
          extSurfaceTub=2163.652,
          gasVol=10,
          fluidVol=12.400,
          metalVol=4.801,
          rhomcm=7900*578.05,
          lambda=20,
          gasNomFlowRate=585.5,
          gasNomPressure=0,
          fluidNomFlowRate=fluidNomFlowRate,
          fluidNomPressure=fluidNomPressure,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_In=Tstart_M_In,
          Tstart_M_Out=Tstart_M_Out,
          Tstart_F_In=Tstart_F_In,
          Tstart_F_Out=Tstart_F_Out,
          gamma_G=gamma_G,
          gamma_F=gamma_F,
          SSInit=true) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SensT T_waterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,32; 4,52], rotation=270);
        Water.SensT T_waterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,-62; 4,-42], rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 6,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -26,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(sinkP_water.flange, T_waterOut.outlet) annotation (points=[-10,-78;
              -10,-68; -10,-68; -10,-58],      style(thickness=2));
        connect(T_waterOut.inlet, hE.waterOut) 
          annotation (points=[-10,-46; -10,-16], style(thickness=2));
        connect(T_waterIn.inlet, sourseW_water.flange) annotation (points=[-10,48;
              -10,54; -10,60; -10,60],     style(thickness=2));
        connect(T_waterIn.outlet, hE.waterIn) 
          annotation (points=[-10,36; -10,16], style(thickness=2));
      end TestEvIP;
      
      model TestShIP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 "Nominal mass flowrate";
        parameter SI.Temperature Tstart_G_In=620.14 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=614.5 
          "Outlet gas temperature start value";
        
        //fluid
        parameter SI.MassFlowRate fluidNomFlowRate=13.5 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure=29.5e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G=33 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_In=Tstart_F_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_Out=Tstart_F_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_In=506.08 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_Out=605.11 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_Out) 
          "Nominal specific enthalpy";
        
        Water.SourceW sourseW_water(redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate,
          p0=fluidNomPressure,
          h=hstart_F_In)      annotation (extent=[-20,60; 0,80],  rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          w0=gasNomFlowRate,
          T=Tstart_G_In)     annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.HE hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=3,
          N_F=7,
          exchSurface_G=2314.8,
          exchSurface_F=450.218,
          extSurfaceTub=504.652,
          gasVol=10,
          fluidVol=4.468,
          metalVol=1.146,
          rhomcm=7900*578.05,
          lambda=20,
          gasNomFlowRate=585.5,
          gasNomPressure=0,
          fluidNomFlowRate=fluidNomFlowRate,
          fluidNomPressure=fluidNomPressure,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_In=Tstart_M_In,
          Tstart_M_Out=Tstart_M_Out,
          Tstart_F_In=Tstart_F_In,
          Tstart_F_Out=Tstart_F_Out,
          gamma_G=gamma_G,
          gamma_F=gamma_F,
          SSInit=true) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SensT T_waterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,32; 4,52], rotation=270);
        Water.SensT T_waterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,-62; 4,-42], rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
        Water.SinkP OutIP(redeclare package Medium = FluidMedium, p0=0) 
                           annotation (extent=[-42,-88; -54,-76],
                                                                rotation=0);
        Water.ValveLin valveLinIP(redeclare package Medium = FluidMedium, Kv=
              fluidNomFlowRate/fluidNomPressure) 
                                 annotation (extent=[-20,-88; -32,-76]);
        Modelica.Blocks.Sources.Constant const 
          annotation (extent=[-86,-50; -76,-40]);
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 6,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -26,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_waterOut.inlet, hE.waterOut) 
          annotation (points=[-10,-46; -10,-16], style(thickness=2));
        connect(T_waterIn.inlet, sourseW_water.flange) annotation (points=[-10,48;
              -10,54; -10,60; -10,60],     style(thickness=2));
        connect(T_waterIn.outlet, hE.waterIn) 
          annotation (points=[-10,36; -10,16], style(thickness=2));
        connect(valveLinIP.outlet,OutIP. flange) 
          annotation (points=[-32,-82; -42,-82],
                                               style(thickness=2));
        connect(valveLinIP.inlet, T_waterOut.outlet) 
          annotation (points=[-20,-82; -10,-82; -10,-58], style(thickness=2));
        connect(const.y, valveLinIP.cmd) annotation (points=[-75.5,-45; -26,-45;
              -26,-77.2], style(color=74, rgbcolor={0,0,127}));
      end TestShIP;
      
      model TestEc2HP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 "Nominal mass flowrate";
        parameter SI.Temperature Tstart_G_In=614.15 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=558.98 
          "Outlet gas temperature start value";
        
        //fluid
        parameter SI.MassFlowRate fluidNomFlowRate=70.1 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure=138.6e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G=60 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_In=Tstart_F_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_Out=Tstart_F_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_In=484.77 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_Out=594.14 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure,Tstart_F_Out) 
          "Nominal specific enthalpy";
        
        Water.SourceW sourseW_water(redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate,
          p0=fluidNomPressure,
          h=hstart_F_In)      annotation (extent=[-20,60; 0,80],  rotation=270);
        Water.SinkP sinkP_water(redeclare package Medium = FluidMedium,
          p0=fluidNomPressure,
          h=hstart_F_Out) annotation (extent=[-20,-98; 0,-78],  rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          w0=gasNomFlowRate,
          T=Tstart_G_In)     annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.HE hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=3,
          N_F=6,
          exchSurface_G=20335,
          exchSurface_F=1451.506,
          extSurfaceTub=1803.043,
          gasVol=10,
          fluidVol=9.290,
          metalVol=5.045,
          rhomcm=7900*578.05,
          lambda=20,
          gasNomFlowRate=585.5,
          gasNomPressure=0,
          fluidNomFlowRate=fluidNomFlowRate,
          fluidNomPressure=fluidNomPressure,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_In=Tstart_M_In,
          Tstart_M_Out=Tstart_M_Out,
          Tstart_F_In=Tstart_F_In,
          Tstart_F_Out=Tstart_F_Out,
          gamma_G=gamma_G,
          gamma_F=gamma_F,
          SSInit=true) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SensT T_waterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,32; 4,52], rotation=270);
        Water.SensT T_waterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,-62; 4,-42], rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 6,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -26,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(sinkP_water.flange, T_waterOut.outlet) annotation (points=[-10,-78;
              -10,-68; -10,-68; -10,-58],      style(thickness=2));
        connect(T_waterOut.inlet, hE.waterOut) 
          annotation (points=[-10,-46; -10,-16], style(thickness=2));
        connect(T_waterIn.inlet, sourseW_water.flange) annotation (points=[-10,48;
              -10,54; -10,60; -10,60],     style(thickness=2));
        connect(T_waterIn.outlet, hE.waterIn) 
          annotation (points=[-10,36; -10,16], style(thickness=2));
      end TestEc2HP;
      
      model TestEvHP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 "Nominal mass flowrate";
        parameter SI.Temperature Tstart_G_In=747.15 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=620.3 
          "Outlet gas temperature start value";
        
        //fluid
        parameter SI.MassFlowRate fluidNomFlowRate=175.5 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure=137.1e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_In=Tstart_F_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_Out=Tstart_F_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_In=FluidMedium.temperature_ph(fluidNomPressure,hstart_F_In) 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_Out=FluidMedium.temperature_ph(fluidNomPressure,hstart_F_Out) 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_In=1.514e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_Out=2.002e6 
          "Nominal specific enthalpy";
        
        Water.SourceW sourseW_water(redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate,
          p0=fluidNomPressure,
          h=hstart_F_In)      annotation (extent=[-20,60; 0,80],  rotation=270);
        Water.SinkP sinkP_water(redeclare package Medium = FluidMedium,
          p0=fluidNomPressure,
          h=hstart_F_Out) annotation (extent=[-20,-98; 0,-78],  rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          w0=gasNomFlowRate,
          T=Tstart_G_In)     annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.HE2ph hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=4,
          N_F=4,
          exchSurface_G=30501.9,
          exchSurface_F=2296.328,
          extSurfaceTub=2704.564,
          gasVol=10,
          fluidVol=15.500,
          metalVol=6.001,
          rhomcm=7900*612.58,
          lambda=20,
          gasNomFlowRate=585.5,
          gasNomPressure=0,
          fluidNomFlowRate=fluidNomFlowRate,
          fluidNomPressure=fluidNomPressure,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_In=Tstart_M_In,
          Tstart_M_Out=Tstart_M_Out,
          Tstart_F_In=Tstart_F_In,
          Tstart_F_Out=Tstart_F_Out,
          gamma_G=gamma_G,
          gamma_F=gamma_F,
          SSInit=true) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SensT T_waterIn(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,32; 4,52], rotation=270);
        Water.SensT T_waterOut(redeclare package Medium = FluidMedium) 
          annotation (extent=[-16,-62; 4,-42], rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 6,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -26,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(sinkP_water.flange, T_waterOut.outlet) annotation (points=[-10,-78;
              -10,-68; -10,-68; -10,-58],      style(thickness=2));
        connect(T_waterOut.inlet, hE.waterOut) 
          annotation (points=[-10,-46; -10,-16], style(thickness=2));
        connect(T_waterIn.inlet, sourseW_water.flange) annotation (points=[-10,48;
              -10,54; -10,60; -10,60],     style(thickness=2));
        connect(T_waterIn.outlet, hE.waterIn) 
          annotation (points=[-10,36; -10,16], style(thickness=2));
      end TestEvHP;
      
      model TestSh1HP_Rh1IP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 
          "Nominal flow rate through the gas side";
        parameter SI.Temperature Tstart_G_In=837.15 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=748.6 
          "Outlet gas temperature start value";
        
        //fluid A
        parameter SI.MassFlowRate fluidNomFlowRate_A=70.59 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure_A=134.3e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G_A=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F_A=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_A_In=Tstart_F_A_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_A_Out=Tstart_F_A_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_A_In=606.59 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_A_Out=743.18 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_A_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,Tstart_F_A_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_A_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,Tstart_F_A_Out) 
          "Nominal specific enthalpy";
        
        //fluid B
        parameter SI.MassFlowRate fluidNomFlowRate_B=81.1 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure_B=28.4e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G_B=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F_B=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_B_In=Tstart_F_B_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_B_Out=Tstart_F_B_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_B_In=618.31 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_B_Out=717.34 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_B_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,Tstart_F_B_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_B_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,Tstart_F_B_Out) 
          "Nominal specific enthalpy";
        
        Water.SourceW sourseW_water_A(
          redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate_A,
          p0=fluidNomPressure_A,
          h=hstart_F_A_In)    annotation (extent=[-38,64; -18,84],rotation=270);
        Water.SinkP sinkP_water_A(
          redeclare package Medium = FluidMedium,
          p0=fluidNomPressure_A,
          h=hstart_F_A_Out) 
                          annotation (extent=[-38,-96; -18,-76],rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          T=Tstart_G_In,
          w0=gasNomFlowRate) annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.ParHE hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=3,
          gasVol=10,
          lambda=20,
          gasNomPressure=0,
          N_F_A=7,
          exchSurface_G_A=8137.2,
          exchSurface_F_A=612.387,
          extSurfaceTub_A=721.256,
          fluidVol_A=4.134,
          metalVol_A=1.600,
          rhomcm_A=7800*575.22,
          N_F_B=5,
          exchSurface_F_B=4630,
          exchSurface_G_B=900.387,
          extSurfaceTub_B=1009.250,
          fluidVol_B=8.936,
          metalVol_B=2.292,
          rhomcm_B=7850*575.64,
          SSInit=true,
          counterCurrent_A=true,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate_A=fluidNomFlowRate_A,
          fluidNomFlowRate_B=fluidNomFlowRate_B,
          fluidNomPressure_A=fluidNomPressure_A,
          fluidNomPressure_B=fluidNomPressure_B,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_A_In=Tstart_M_A_In,
          Tstart_M_A_Out=Tstart_M_A_Out,
          Tstart_F_A_In=Tstart_F_A_In,
          Tstart_F_A_Out=Tstart_F_A_Out,
          Tstart_M_B_In=Tstart_M_B_In,
          Tstart_M_B_Out=Tstart_M_B_Out,
          Tstart_F_B_In=Tstart_F_B_In,
          Tstart_F_B_Out=Tstart_F_B_Out,
          gamma_G_A=gamma_G_A,
          gamma_G_B=gamma_G_B,
          gamma_F_A=gamma_F_A,
          gamma_F_B=gamma_F_B,
          counterCurrent_B=true) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SinkP sinkP_water_B(
          redeclare package Medium = FluidMedium,
          p0=fluidNomPressure_B,
          h=hstart_F_B_Out) 
                          annotation (extent=[-2,-96; 18,-76],  rotation=270);
        Water.SourceW sourseW_water_B(
          redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate_B,
          p0=fluidNomPressure_B,
          h=hstart_F_B_In)    annotation (extent=[-4,64; 16,84],  rotation=270);
        Water.SensT T_waterIn_A(redeclare package Medium = FluidMedium) 
          annotation (extent=[-34,28; -14,48],
                                             rotation=270);
        Water.SensT T_waterOut_A(redeclare package Medium = FluidMedium) 
          annotation (extent=[-34,-52; -14,-32],
                                               rotation=270);
        Water.SensT T_waterOut_B(redeclare package Medium = FluidMedium) 
          annotation (extent=[2,-52; 22,-32],  rotation=270);
        Water.SensT T_waterIn_B(redeclare package Medium = FluidMedium) 
          annotation (extent=[0,28; 20,48],  rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 6,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -26,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_waterOut_A.outlet, sinkP_water_A.flange) annotation (points=[-28,-48;
              -28,-62; -28,-76; -28,-76],          style(thickness=2));
        connect(sinkP_water_B.flange, T_waterOut_B.outlet) annotation (points=[8,-76; 8,
              -69; 8,-69; 8,-62; 8,-48; 8,-48],              style(thickness=2));
        connect(T_waterOut_B.inlet, hE.waterOutB) annotation (points=[8,-36; 8,
              -26; -2,-26; -2,-16], style(thickness=2));
        connect(T_waterOut_A.inlet, hE.waterOutA) annotation (points=[-28,-36;
              -28,-28; -18,-28; -18,-16], style(thickness=2));
        connect(hE.waterInA, T_waterIn_A.outlet) annotation (points=[-18,16;
              -18,24; -28,24; -28,32], style(thickness=2));
        connect(hE.waterInB, T_waterIn_B.outlet) 
          annotation (points=[-2,16; -2,24; 6,24; 6,32], style(thickness=2));
        connect(T_waterIn_B.inlet, sourseW_water_B.flange) 
          annotation (points=[6,44; 6,49; 6,49; 6,54; 6,64; 6,64],
                                                       style(thickness=2));
        connect(T_waterIn_A.inlet, sourseW_water_A.flange) annotation (points=[-28,44;
              -28,54; -28,64; -28,64],         style(thickness=2));
      end TestSh1HP_Rh1IP;
      
      model TestSh2HP_Rh2IP 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //gas
        parameter SI.MassFlowRate gasNomFlowRate=585.5 
          "Nominal flow rate through the gas side";
        parameter SI.Temperature Tstart_G_In=884.65 
          "Inlet gas temperature start value";
        parameter SI.Temperature Tstart_G_Out=823.15 
          "Outlet gas temperature start value";
        
        //fluid A
        parameter SI.MassFlowRate fluidNomFlowRate_A=70.59 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure_A=130.5e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G_A=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F_A=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_A_In=Tstart_F_A_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_A_Out=Tstart_F_A_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_A_In=769.486 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_A_Out=823.28 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_A_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,Tstart_F_A_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_A_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure_A,Tstart_F_A_Out) 
          "Nominal specific enthalpy";
        
        //fluid B
        parameter SI.MassFlowRate fluidNomFlowRate_B=81.1 
          "Nominal flow rate through the fluid side";
        parameter SI.Pressure fluidNomPressure_B=28.2e5 
          "Nominal pressure in the fluid side inlet";
        parameter SI.CoefficientOfHeatTransfer gamma_G_B=40 
          "Constant heat transfer coefficient in the gas side";
        parameter SI.CoefficientOfHeatTransfer gamma_F_B=4000 
          "Constant heat transfer coefficient in the fluid side";
        parameter SI.Temperature Tstart_M_B_In=Tstart_F_B_In 
          "Inlet metal wall temperature start value";
        parameter SI.Temperature Tstart_M_B_Out=Tstart_F_B_Out 
          "Outlet metal wall temperature start value";
        parameter SI.Temperature Tstart_F_B_In=757.896 
          "Inlet fluid temperature start value";
        parameter SI.Temperature Tstart_F_B_Out=813.09 
          "Outlet fluid temperature start value";
        parameter SI.SpecificEnthalpy hstart_F_B_In=FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,Tstart_F_B_In) 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy hstart_F_B_Out=FluidMedium.specificEnthalpy_pT(fluidNomPressure_B,Tstart_F_B_Out) 
          "Nominal specific enthalpy";
        
        Water.SourceW sourseW_water_A(
          redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate_A,
          p0=fluidNomPressure_A,
          h=hstart_F_A_In)    annotation (extent=[-38,64; -18,84],rotation=270);
        Water.SinkP sinkP_water_A(
          redeclare package Medium = FluidMedium,
          p0=fluidNomPressure_A,
          h=hstart_F_A_Out) 
                          annotation (extent=[-38,-96; -18,-76],rotation=270);
        Gas.SinkP sinkP_gas(redeclare package Medium = FlueGasMedium, T=Tstart_G_Out) 
                         annotation (extent=[50,-12; 76,12]);
        Gas.SourceW sourceW_gas(
          redeclare package Medium = FlueGasMedium,
          T=Tstart_G_In,
          w0=gasNomFlowRate) annotation (extent=[-90,-14; -68,14]);
        annotation (Diagram);
        Components.ParHE hE(redeclare package FluidMedium = FluidMedium,
          redeclare package FlueGasMedium = FlueGasMedium,
          N_G=3,
          gasVol=10,
          lambda=20,
          gasNomPressure=0,
          N_F_A=5,
          exchSurface_G_A=3636,
          exchSurface_F_A=421.844,
          extSurfaceTub_A=540.913,
          fluidVol_A=2.615,
          metalVol_A=1.685,
          rhomcm_A=7780*688.31,
          N_F_B=7,
          exchSurface_F_B=4630.2,
          exchSurface_G_B=873.079,
          extSurfaceTub_B=1009.143,
          fluidVol_B=8.403,
          metalVol_B=2.823,
          rhomcm_B=7800*574.93,
          SSInit=true,
          counterCurrent_A=true,
          gasNomFlowRate=gasNomFlowRate,
          fluidNomFlowRate_A=fluidNomFlowRate_A,
          fluidNomFlowRate_B=fluidNomFlowRate_B,
          fluidNomPressure_A=fluidNomPressure_A,
          fluidNomPressure_B=fluidNomPressure_B,
          Tstart_G_In=Tstart_G_In,
          Tstart_G_Out=Tstart_G_Out,
          Tstart_M_A_In=Tstart_M_A_In,
          Tstart_M_A_Out=Tstart_M_A_Out,
          Tstart_F_A_In=Tstart_F_A_In,
          Tstart_F_A_Out=Tstart_F_A_Out,
          Tstart_M_B_In=Tstart_M_B_In,
          Tstart_M_B_Out=Tstart_M_B_Out,
          Tstart_F_B_In=Tstart_F_B_In,
          Tstart_F_B_Out=Tstart_F_B_Out,
          gamma_G_A=gamma_G_A,
          gamma_G_B=gamma_G_B,
          gamma_F_A=gamma_F_A,
          gamma_F_B=gamma_F_B,
          counterCurrent_B=true) 
          annotation (extent=[-30,-20; 10,20]);
        Water.SinkP sinkP_water_B(
          redeclare package Medium = FluidMedium,
          p0=fluidNomPressure_B,
          h=hstart_F_B_Out) 
                          annotation (extent=[-2,-96; 18,-76],  rotation=270);
        Water.SourceW sourseW_water_B(
          redeclare package Medium = FluidMedium,
          w0=fluidNomFlowRate_B,
          p0=fluidNomPressure_B,
          h=hstart_F_B_In)    annotation (extent=[-4,64; 16,84],  rotation=270);
        Water.SensT T_waterIn_A(redeclare package Medium = FluidMedium) 
          annotation (extent=[-34,28; -14,48],
                                             rotation=270);
        Water.SensT T_waterOut_A(redeclare package Medium = FluidMedium) 
          annotation (extent=[-34,-52; -14,-32],
                                               rotation=270);
        Water.SensT T_waterOut_B(redeclare package Medium = FluidMedium) 
          annotation (extent=[2,-52; 22,-32],  rotation=270);
        Water.SensT T_waterIn_B(redeclare package Medium = FluidMedium) 
          annotation (extent=[0,28; 20,48],  rotation=270);
        Gas.SensT T_gasIn(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[-58,-6; -38,14]);
        Gas.SensT T_gasOut(redeclare package Medium = FlueGasMedium) 
          annotation (extent=[20,-6; 40,14]);
        
      equation 
        connect(T_gasOut.inlet, hE.gasOut) annotation (points=[24,0; 6,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasOut.outlet, sinkP_gas.flange) annotation (points=[36,0; 50,
              0], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.outlet, hE.gasIn) annotation (points=[-42,0; -26,0],
            style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_gasIn.inlet, sourceW_gas.flange) annotation (points=[-54,0;
              -61,0; -61,1.77636e-015; -68,1.77636e-015], style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(T_waterOut_A.outlet, sinkP_water_A.flange) annotation (points=[-28,-48;
              -28,-62; -28,-76; -28,-76],          style(thickness=2));
        connect(sinkP_water_B.flange, T_waterOut_B.outlet) annotation (points=[8,-76; 8,
              -69; 8,-69; 8,-62; 8,-48; 8,-48],              style(thickness=2));
        connect(T_waterOut_B.inlet, hE.waterOutB) annotation (points=[8,-36; 8,
              -26; -2,-26; -2,-16], style(thickness=2));
        connect(T_waterOut_A.inlet, hE.waterOutA) annotation (points=[-28,-36;
              -28,-28; -18,-28; -18,-16], style(thickness=2));
        connect(hE.waterInA, T_waterIn_A.outlet) annotation (points=[-18,16;
              -18,24; -28,24; -28,32], style(thickness=2));
        connect(hE.waterInB, T_waterIn_B.outlet) 
          annotation (points=[-2,16; -2,24; 6,24; 6,32], style(thickness=2));
        connect(T_waterIn_B.inlet, sourseW_water_B.flange) 
          annotation (points=[6,44; 6,49; 6,49; 6,54; 6,64; 6,64],
                                                       style(thickness=2));
        connect(T_waterIn_A.inlet, sourseW_water_A.flange) annotation (points=[-28,44;
              -28,54; -28,64; -28,64],         style(thickness=2));
      end TestSh2HP_Rh2IP;
      
      model TestHEG_3LRh_wa 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        //HP
        parameter SI.MassFlowRate fluidHPNomFlowRate_Sh=67.6 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidHPNomPressure_Sh=138.9e5 "Nominal pressure";
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ev=175.5 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidHPNomPressure_Ev=138.9e5 "Nominal pressure";
        parameter SI.MassFlowRate fluidHPNomFlowRate_Ec=67.6 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidHPNomPressure_Ec=138.9e5 "Nominal pressure";
        parameter SI.SpecificEnthalpy Sh1_HP_hstart_F_In= 2.657e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_In= 1.514e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ev_HP_hstart_F_Out= 1.9423e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ec1_HP_hstart_F_In= 6.775e5 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ec2_HP_hstart_F_Out= 1.45077e6 
          "Nominal specific enthalpy";
        
        //IP
        parameter SI.MassFlowRate fluidIPNomFlowRate_Rh=81.10 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidIPNomPressure_Rh=33.8e5 "Nominal pressure";
        parameter SI.MassFlowRate fluidIPNomFlowRate_Sh=13.5 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidIPNomPressure_Sh=33.8e5 "Nominal pressure";
        parameter SI.MassFlowRate fluidIPNomFlowRate_Ev=67.5 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidIPNomPressure_Ev=33.8e5 "Nominal pressure";
        parameter SI.MassFlowRate fluidIPNomFlowRate_Ec=13.5 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidIPNomPressure_Ec=33.8e5 "Nominal pressure";
        parameter SI.SpecificEnthalpy Rh1_IP_hstart_F_In= 3.22e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Rh2_IP_hstart_F_Out=3.64853e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Sh_IP_hstart_F_In=2.802e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ev_IP_hstart_F_In= 9.92e5 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ev_IP_hstart_F_Out= 1.36395e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ec_IP_hstart_F_In=6.654e5 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ec_IP_hstart_F_Out=9.70768e5 
          "Nominal specific enthalpy";
        
        //LP
        parameter SI.MassFlowRate fluidLPNomFlowRate_Sh=8.72 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidLPNomPressure_Sh=7.19e5 "Nominal pressure";
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ev=41.49 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidLPNomPressure_Ev=7.19e5 "Nominal pressure";
        parameter SI.MassFlowRate fluidLPNomFlowRate_Ec=89.82 
          "Nominal mass flowrate";
        parameter SI.Pressure fluidLPNomPressure_Ec=7.19e5 "Nominal pressure";
        parameter SI.SpecificEnthalpy Sh_LP_hstart_F_In= 2.760e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_In= 6.626e5 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ev_LP_hstart_F_Out=1.0227e6 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_In=2.44e5 
          "Nominal specific enthalpy";
        parameter SI.SpecificEnthalpy Ec_LP_hstart_F_Out=6.39929e5 
          "Nominal specific enthalpy";
        
        Water.SinkP OutHP(redeclare package Medium = FluidMedium, p0=0) 
                          annotation (extent=[-88,-90; -100,-78],
                                                              rotation=0);
        Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=375.386) 
                         annotation (extent=[88,-16; 100,-4]);
        Gas.SourceW sourceGas(
          redeclare package Medium = FlueGasMedium,
          w0=585.5,
          T=884.65)          annotation (extent=[-100,-16; -88,-4]);
        Water.SinkP sinkEvHP(
          redeclare package Medium = FluidMedium,
          p0=fluidHPNomPressure_Ev,
          h=Ev_HP_hstart_F_Out) 
                           annotation (extent=[-66,70; -54,82], rotation=90);
        Water.ValveLin valveLinHP(redeclare package Medium = FluidMedium, Kv=
              fluidHPNomFlowRate_Sh/fluidHPNomPressure_Sh) 
                                annotation (extent=[-68,-78; -80,-90]);
        Water.SinkP OutIP(redeclare package Medium = FluidMedium, p0=0) 
                           annotation (extent=[20,-90; 32,-78], rotation=0);
        Water.ValveLin valveLinIP(redeclare package Medium = FluidMedium, Kv=
              fluidIPNomFlowRate_Sh/fluidIPNomPressure_Sh) 
                                 annotation (extent=[4,-78; 16,-90]);
        Water.SinkP OutLP(redeclare package Medium = FluidMedium, p0=0) 
                           annotation (extent=[70,-92; 82,-80], rotation=0);
        Water.ValveLin valveLinLP(redeclare package Medium = FluidMedium, Kv=
              fluidLPNomFlowRate_Sh/fluidLPNomPressure_Sh) 
                                 annotation (extent=[50,-80; 62,-92]);
        annotation (Diagram, Icon);
        Water.SourceW sourceEvHP(
          redeclare package Medium = FluidMedium,
          w0=fluidHPNomFlowRate_Ev,
          p0=fluidHPNomPressure_Ev,
          h=Ev_HP_hstart_F_In) 
                              annotation (extent=[-58,58; -46,70], rotation=270);
        Water.SourceW sourceRhIP(
          redeclare package Medium = FluidMedium,
          w0=fluidIPNomFlowRate_Rh,
          p0=fluidIPNomPressure_Rh,
          h=Rh1_IP_hstart_F_In) 
                              annotation (extent=[-32,-72; -20,-60],
                                                                   rotation=90);
        Water.SinkP sinkRhIP(
          redeclare package Medium = FluidMedium,
          p0=fluidIPNomPressure_Rh,
          h=Rh2_IP_hstart_F_Out) 
                           annotation (extent=[-16,-60; -4,-72],rotation=90);
        Modelica.Blocks.Sources.Constant commandValve 
          annotation (extent=[-50,-90; -40,-80], rotation=270);
        Water.SinkP sinkEcHP(
          redeclare package Medium = FluidMedium,
          p0=fluidHPNomPressure_Ec,
          h=Ec2_HP_hstart_F_Out) 
                           annotation (extent=[-50,70; -38,82], rotation=90);
        Water.SourceW sourceEcHP(
          redeclare package Medium = FluidMedium,
          w0=fluidHPNomFlowRate_Ec,
          p0=fluidHPNomPressure_Ec,
          h=Ec1_HP_hstart_F_In) 
                              annotation (extent=[-42,58; -30,70], rotation=270);
        Water.SinkP sinkEvIP(
          redeclare package Medium = FluidMedium,
          p0=fluidIPNomPressure_Ev,
          h=Ev_IP_hstart_F_Out) 
                           annotation (extent=[-14,70; -2,82],  rotation=90);
        Water.SourceW sourceEvIP(
          redeclare package Medium = FluidMedium,
          w0=fluidIPNomFlowRate_Ev,
          p0=fluidIPNomPressure_Ev,
          h=Ev_IP_hstart_F_In) 
                              annotation (extent=[-6,58; 6,70],    rotation=270);
        Water.SinkP sinkEcIP(
          redeclare package Medium = FluidMedium,
          p0=fluidIPNomPressure_Ec,
          h=Ec_IP_hstart_F_Out) 
                           annotation (extent=[2,70; 14,82],    rotation=90);
        Water.SourceW sourceEcIP(
          redeclare package Medium = FluidMedium,
          w0=fluidIPNomFlowRate_Ec,
          p0=fluidIPNomPressure_Ec,
          h=Ec_IP_hstart_F_In) 
                              annotation (extent=[10,58; 22,70],   rotation=270);
        Water.SinkP sinkEvLP(
          redeclare package Medium = FluidMedium,
          p0=fluidLPNomPressure_Ev,
          h=Ev_LP_hstart_F_Out) 
                           annotation (extent=[38,70; 50,82],   rotation=90);
        Water.SourceW sourceEvLP(
          redeclare package Medium = FluidMedium,
          w0=fluidLPNomFlowRate_Ev,
          p0=fluidLPNomPressure_Ev,
          h=Ev_LP_hstart_F_In) 
                              annotation (extent=[46,70; 58,58],   rotation=90);
        Water.SinkP sinkEcLP(
          redeclare package Medium = FluidMedium,
          p0=fluidLPNomPressure_Ec,
          h=Ec_LP_hstart_F_Out) 
                           annotation (extent=[54,70; 66,82],   rotation=90);
        Water.SourceW sourceEcLP(
          redeclare package Medium = FluidMedium,
          w0=fluidLPNomFlowRate_Ec,
          p0=fluidLPNomPressure_Ec,
          h=Ec_LP_hstart_F_In) 
                              annotation (extent=[62,70; 74,58],   rotation=90);
        Water.SourceP sourceShHP(p0=fluidHPNomPressure_Sh, h=Sh1_HP_hstart_F_In) 
          annotation (extent=[-62,58; -74,70], rotation=270);
        Water.SourceP sourceShIP(p0=fluidIPNomPressure_Sh, h=Sh_IP_hstart_F_In) 
          annotation (extent=[-10,58; -22,70],
                                             rotation=270);
        Water.SourceP sourceShLP(p0=fluidLPNomPressure_Sh, h=Sh_LP_hstart_F_In) 
          annotation (extent=[28,70; 40,58], rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_in(
                                               redeclare package Medium = 
              FlueGasMedium) annotation (extent=[-84,-18; -68,-2],rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_out(
                                                redeclare package Medium = 
              FlueGasMedium) annotation (extent=[68,-18; 84,-2],rotation=0);
        ThermoPower.PowerPlants.HRSG.Examples.HEG_3LRh_wa hEG_3LRh_simp(
          gasNomFlowRate=585.5,
          fluidHPNomFlowRate_Sh=70.59,
          fluidHPNomPressure_Sh=134.3e5,
          fluidHPNomFlowRate_Ev=175.5,
          fluidHPNomPressure_Ev=137.1e5,
          fluidHPNomFlowRate_Ec=70.10,
          fluidHPNomPressure_Ec=138.9e5,
          fluidIPNomFlowRate_Rh=81.10,
          fluidIPNomPressure_Rh=28.4e5,
          fluidIPNomFlowRate_Sh=13.5,
          fluidIPNomPressure_Sh=29.5e5,
          fluidIPNomFlowRate_Ev=67.5,
          fluidIPNomPressure_Ev=37.16e5,
          fluidIPNomFlowRate_Ec=21.8,
          fluidIPNomPressure_Ec=48.6e5,
          fluidLPNomFlowRate_Sh=6.91,
          fluidLPNomPressure_Sh=6.6e5,
          fluidLPNomFlowRate_Ev=41.49,
          fluidLPNomPressure_Ev=15.34e5,
          fluidLPNomFlowRate_Ec=122.4,
          fluidLPNomPressure_Ec=19.8e5,
          Sh2_HP_N_G=3,
          Sh2_HP_N_F=5,
          Sh2_HP_exchSurface_G=3636,
          Sh2_HP_exchSurface_F=421.844,
          Sh2_HP_extSurfaceTub=540.913,
          Sh2_HP_gasVol=10,
          Sh2_HP_fluidVol=2.615,
          Sh2_HP_metalVol=1.685,
          Sh1_HP_N_G=3,
          Sh1_HP_N_F=7,
          Sh1_HP_exchSurface_G=8137.2,
          Sh1_HP_exchSurface_F=612.387,
          Sh1_HP_extSurfaceTub=721.256,
          Sh1_HP_gasVol=10,
          Sh1_HP_fluidVol=4.134,
          Sh1_HP_metalVol=1.600,
          Ev_HP_N_G=4,
          Ev_HP_N_F=4,
          Ev_HP_exchSurface_G=30501.9,
          Ev_HP_exchSurface_F=2296.328,
          Ev_HP_extSurfaceTub=2704.564,
          Ev_HP_gasVol=10,
          Ev_HP_fluidVol=15.500,
          Ev_HP_metalVol=6.001,
          Ec2_HP_N_G=3,
          Ec2_HP_N_F=6,
          Ec2_HP_exchSurface_G=20335,
          Ec2_HP_exchSurface_F=1451.506,
          Ec2_HP_extSurfaceTub=1803.043,
          Ec2_HP_gasVol=10,
          Ec2_HP_fluidVol=9.290,
          Ec2_HP_metalVol=5.045,
          Ec1_HP_N_G=3,
          Ec1_HP_N_F=5,
          Ec1_HP_exchSurface_G=12201.2,
          Ec1_HP_exchSurface_F=870.904,
          Ec1_HP_extSurfaceTub=1081.826,
          Ec1_HP_gasVol=10,
          Ec1_HP_fluidVol=5.574,
          Ec1_HP_metalVol=3.027,
          Rh2_IP_N_F=7,
          Rh2_IP_exchSurface_G=4630.2,
          Rh2_IP_exchSurface_F=873.079,
          Rh2_IP_extSurfaceTub=1009.143,
          Rh2_IP_fluidVol=8.403,
          Rh2_IP_metalVol=2.823,
          Rh1_IP_N_F=5,
          Rh1_IP_exchSurface_G=4630,
          Rh1_IP_exchSurface_F=900.387,
          Rh1_IP_extSurfaceTub=1009.250,
          Rh1_IP_fluidVol=8.936,
          Rh1_IP_metalVol=2.292,
          Sh_IP_N_G=3,
          Sh_IP_N_F=7,
          Sh_IP_exchSurface_G=2314.8,
          Sh_IP_exchSurface_F=450.218,
          Sh_IP_extSurfaceTub=504.652,
          Sh_IP_gasVol=10,
          Sh_IP_fluidVol=4.468,
          Sh_IP_metalVol=1.146,
          Ev_IP_N_G=4,
          Ev_IP_N_F=4,
          Ev_IP_exchSurface_G=24402,
          Ev_IP_exchSurface_F=1837.063,
          Ev_IP_extSurfaceTub=2163.652,
          Ev_IP_gasVol=10,
          Ev_IP_fluidVol=12.400,
          Ev_IP_metalVol=4.801,
          Ec_IP_N_G=3,
          Ec_IP_N_F=5,
          Ec_IP_exchSurface_G=4067.2,
          Ec_IP_exchSurface_F=306.177,
          Ec_IP_extSurfaceTub=360.609,
          Ec_IP_gasVol=10,
          Ec_IP_fluidVol=2.067,
          Ec_IP_metalVol=0.800,
          Sh_LP_N_G=3,
          Sh_LP_N_F=7,
          Sh_LP_exchSurface_G=1708.2,
          Sh_LP_exchSurface_F=225.073,
          Sh_LP_extSurfaceTub=252.286,
          Sh_LP_gasVol=10,
          Sh_LP_fluidVol=2.234,
          Sh_LP_metalVol=0.573,
          Ev_LP_N_G=4,
          Ev_LP_N_F=4,
          Ev_LP_exchSurface_G=24402,
          Ev_LP_exchSurface_F=2292.926,
          Ev_LP_extSurfaceTub=2592.300,
          Ev_LP_gasVol=10,
          Ev_LP_fluidVol=19.318,
          Ev_LP_metalVol=5.374,
          Ec_LP_N_G=3,
          Ec_LP_N_F=6,
          Ec_LP_exchSurface_G=40095.9,
          Ec_LP_exchSurface_F=3439.389,
          Ec_LP_extSurfaceTub=3888.449,
          Ec_LP_gasVol=10,
          Ec_LP_fluidVol=28.977,
          Ec_LP_metalVol=8.061,
          use_T_Ev=false,
          Sh2_HP_Tstart_G_In=884.65,
          Sh2_HP_Tstart_G_Out=837.31,
          Sh2_HP_Tstart_M_In=742.65,
          Sh2_HP_Tstart_M_Out=823.28,
          Sh2_HP_Tstart_F_In=742.65,
          Sh2_HP_Tstart_F_Out=823.28,
          Sh1_HP_Tstart_G_In=837.15,
          Sh1_HP_Tstart_G_Out=748.60,
          Sh1_HP_Tstart_M_In=606.59,
          Sh1_HP_Tstart_M_Out=743.18,
          Sh1_HP_Tstart_F_In=606.59,
          Sh1_HP_Tstart_F_Out=743.18,
          Ev_HP_Tstart_G_In=747.15,
          Ev_HP_Tstart_G_Out=620.30,
          Ev_HP_Tstart_M_In=FluidMedium.temperature_ph(fluidHPNomPressure_Ev, 1.514e6),
          Ev_HP_Tstart_M_Out=FluidMedium.temperature_ph(fluidHPNomPressure_Ev,
              2.002e6),
          Ev_HP_hstart_F_In=1.514e6,
          Ev_HP_hstart_F_Out=2.002e6,
          Ec2_HP_Tstart_G_In=614.15,
          Ec2_HP_Tstart_G_Out=558.98,
          Ec2_HP_Tstart_M_In=494.67,
          Ec2_HP_Tstart_M_Out=594.14,
          Ec2_HP_Tstart_F_In=494.67,
          Ec2_HP_Tstart_F_Out=594.14,
          Ec1_HP_Tstart_M_In=431.77,
          Ec1_HP_Tstart_M_Out=494.67,
          Ec1_HP_Tstart_F_In=431.77,
          Ec1_HP_Tstart_F_Out=494.67,
          Rh2_IP_Tstart_M_In=717.31,
          Rh2_IP_Tstart_M_Out=813.09,
          Rh2_IP_Tstart_F_In=717.31,
          Rh2_IP_Tstart_F_Out=813.09,
          Rh1_IP_Tstart_M_In=618.31,
          Rh1_IP_Tstart_M_Out=717.34,
          Rh1_IP_Tstart_F_In=618.31,
          Rh1_IP_Tstart_F_Out=717.34,
          Sh_IP_Tstart_G_In=620.15,
          Sh_IP_Tstart_G_Out=614.50,
          Sh_IP_Tstart_M_In=506.08,
          Sh_IP_Tstart_M_Out=605.11,
          Sh_IP_Tstart_F_In=506.08,
          Sh_IP_Tstart_F_Out=605.11,
          Ev_IP_Tstart_G_In=558.15,
          Ev_IP_Tstart_G_Out=518.51,
          Ev_IP_Tstart_M_In=FluidMedium.temperature_ph(fluidIPNomPressure_Ev, 9.92e5),
          Ev_IP_Tstart_M_Out=FluidMedium.temperature_ph(fluidIPNomPressure_Ev, 1.37e6),
          Ev_IP_hstart_F_In=9.92e5,
          Ev_IP_hstart_F_Out=1.37e6,
          Ec_IP_Tstart_G_In=517.15,
          Ec_IP_Tstart_G_Out=480.11,
          Ec_IP_Tstart_M_In=430.24,
          Ec_IP_Tstart_M_Out=493.16,
          Ec_IP_Tstart_F_In=430.24,
          Ec_IP_Tstart_F_Out=493.16,
          Sh_LP_Tstart_G_In=519.15,
          Sh_LP_Tstart_G_Out=517.44,
          Sh_LP_Tstart_M_In=435.75,
          Sh_LP_Tstart_M_Out=505.04,
          Sh_LP_Tstart_F_In=435.75,
          Sh_LP_Tstart_F_Out=505.75,
          Ev_LP_Tstart_G_In=480.00,
          Ev_LP_Tstart_G_Out=453.47,
          Ev_LP_Tstart_M_In=FluidMedium.temperature_ph(fluidLPNomPressure_Ev, 6.625e5),
          Ev_LP_Tstart_M_Out=FluidMedium.temperature_ph(fluidLPNomPressure_Ev,
              1.065e6),
          Ev_LP_hstart_F_In=6.625e5,
          Ev_LP_hstart_F_Out=1.065e6,
          Ec_LP_Tstart_G_In=453.47,
          Ec_LP_Tstart_G_Out=372.35,
          Ec_LP_Tstart_M_In=331.05,
          Ec_LP_Tstart_M_Out=428.09,
          Ec_LP_Tstart_F_In=331.05,
          Ec_LP_Tstart_F_Out=428.09,
          rhomcm=7900*578.05,
          lambda=20,
          Ec_LP(gamma_G=46.8, gamma_F=4000),
          Ev_LP(gamma_G=127, gamma_F=20000),
          Ec1HP_EcIP(
            gamma_G_A=42,
            gamma_G_B=45,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh_LP(gamma_G=16.6, gamma_F=4000),
          Ev_IP(gamma_G=58.5, gamma_F=20000),
          Ec2_HP(gamma_G=56, gamma_F=4000),
          Sh_IP(gamma_G=33, gamma_F=4000),
          Ev_HP(gamma_G=46.5, gamma_F=20000),
          gasNomPressure=1e5,
          Sh1HP_Rh1IP(
            gamma_G_A=70,
            gamma_G_B=80,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh2HP_Rh2IP(
            gamma_G_A=83.97,
            gamma_G_B=80,
            gamma_F_A=4000,
            gamma_F_B=4000),
          SSInit=false)      annotation (extent=[-60,-40; 60,20]);
      equation 
        connect(OutHP.flange, valveLinHP.outlet) 
          annotation (points=[-88,-84; -80,-84],style(thickness=2));
        connect(valveLinLP.outlet, OutLP.flange) 
          annotation (points=[62,-86; 70,-86], style(thickness=2));
        connect(valveLinIP.outlet, OutIP.flange) 
          annotation (points=[16,-84; 20,-84],  style(thickness=2));
        connect(commandValve.y, valveLinHP.cmd) annotation (points=[-45,-90.5;
              -45,-98; -74,-98; -74,-88.8], style(color=74, rgbcolor={0,0,127}));
        connect(commandValve.y, valveLinIP.cmd) annotation (points=[-45,-90.5;
              -45,-98; 10,-98; 10,-88.8], style(color=74, rgbcolor={0,0,127}));
        connect(commandValve.y, valveLinLP.cmd) annotation (points=[-45,-90.5;
              -45,-98; 56,-98; 56,-90.8], style(color=74, rgbcolor={0,0,127}));
        connect(stateGas_in.inlet, sourceGas.flange) annotation (points=[-80.8,
              -10; -88,-10],          style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=76,
            rgbfillColor={170,170,255},
            fillPattern=1));
        connect(sinkGas.flange, stateGas_out.outlet) annotation (points=[88,-10;
              80.8,-10],       style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=76,
            rgbfillColor={170,170,255},
            fillPattern=1));
        connect(stateGas_out.inlet, hEG_3LRh_simp.GasOut) annotation (points=[71.2,-10;
              60,-10],                  style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateGas_in.outlet, hEG_3LRh_simp.GasIn) annotation (points=[-71.2,
              -10; -60,-10],               style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(sinkRhIP.flange, hEG_3LRh_simp.Rh_IP_Out) annotation (points=[
              -10,-60; -10,-48; -14,-48; -14,-40], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceRhIP.flange, hEG_3LRh_simp.Rh_IP_In) annotation (points=[
              -26,-60; -26,-40], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveLinHP.inlet, hEG_3LRh_simp.Sh_HP_Out) annotation (points=[
              -68,-84; -58,-84; -58,-54; -40,-54; -40,-40], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveLinIP.inlet, hEG_3LRh_simp.Sh_IP_Out) annotation (points=[
              4,-84; 0,-84; 0,-40], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveLinLP.inlet, hEG_3LRh_simp.Sh_LP_Out) annotation (points=[
              50,-86; 40,-86; 40,-40], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ev_IP_In, sourceEvIP.flange) annotation (points=[
              0,20; 0,39; 0,58; -1.10215e-015,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ec_IP_Out, sinkEcIP.flange) annotation (points=[6,
              20; 6,52; 8,52; 8,70], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ev_IP_Out, sinkEvIP.flange) annotation (points=[
              -6,20; -6,52; -8,52; -8,70], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ec_IP_In, sourceEcIP.flange) annotation (points=[
              12,20; 12,40; 16,40; 16,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Sh_IP_In, sourceShIP.flange) annotation (points=[
              -12,20; -12,40; -16,40; -16,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Sh_HP_In, sourceShHP.flange) annotation (points=[
              -52,20; -52,26; -68,26; -68,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ev_HP_Out, sinkEvHP.flange) annotation (points=[
              -46,20; -46,30; -60,30; -60,70], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ec_HP_In, sourceEvHP.flange) annotation (points=[
              -40,20; -40,34; -52,34; -52,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ec_HP_Out, sinkEcHP.flange) annotation (points=[
              -34,20; -34,38; -44,38; -44,70], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ev_HP_In, sourceEcHP.flange) annotation (points=[
              -28,20; -28,42; -36,42; -36,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ec_LP_In, sourceEcLP.flange) annotation (points=[
              52,20; 52,26; 68,26; 68,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ec_LP_Out, sinkEcLP.flange) annotation (points=[
              46,20; 46,30; 60,30; 60,70], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ev_LP_In, sourceEvLP.flange) annotation (points=[
              40,20; 40,34; 52,34; 52,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Ev_LP_Out, sinkEvLP.flange) annotation (points=[
              34,20; 34,38; 44,38; 44,70], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(hEG_3LRh_simp.Sh_LP_In, sourceShLP.flange) annotation (points=[
              28,20; 28,42; 34,42; 34,58], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end TestHEG_3LRh_wa;
      
      model TestDG_3LCC_wa 
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        ThermoPower.PowerPlants.HRSG.Examples.DG_3L_CC_wa Drums(
          HPd_rint=1.067,
          HPd_rext=1.167,
          HPd_L=11.920,
          HPd_Cm=0,
          IPd_rint=0.915,
          IPd_rext=1.015,
          IPd_L=7,
          IPd_Cm=0,
          LPd_rint=1.143,
          LPd_rext=1.243,
          LPd_L=11.503,
          LPd_Cm=0,
          RiserHPFlowRate=175.5,
          RiserIPFlowRate=67.5,
          RiserLPFlowRate=41.5,
          redeclare package FluidMedium = FluidMedium,
          SSInit=false,
          fluidLPNomPressure=7.19048e5,
          LPd_hvstart=2.76051e6,
          LPd_hlstart=6.68356e5,
          fluidHPNomPressure=1.626e7,
          fluidIPNomPressure=3.3816e6,
          HPd_hvstart=2.53239e6,
          HPd_hlstart=1.5879e6,
          IPd_hvstart=2.794e6,
          IPd_hlstart=1.0265e5,
          n0_TFP=1500,
          inletTFPNomPressure=5398.2,
          TFPNomFlowRate=89.8,
          hstart_TFP=1.43495e5) annotation (extent=[-180,22; -20,182]);
        annotation (Diagram, Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        Water.SinkP sinkToEcLP_p(           h=2.440e5, p0=7.19e5) 
          annotation (extent=[-36,-48; -24,-36], rotation=270);
        Water.SourceW sourceFromEcLP_w(
          h=6.544e5,
          w0=89.8,
          p0=7.19048e5) 
                     annotation (extent=[-32,-30; -44,-18], rotation=90);
        Water.SinkP sinkToRiserLP_p(p0=1.534e6, h=1.6325e6) 
          annotation (extent=[-52,-48; -40,-36], rotation=270);
        Water.SourceW sourceFromRiserLP_w(
          w0=41.49,
          h=1.065e6,
          p0=7.19046e5) 
                     annotation (extent=[-48,-30; -60,-18], rotation=90);
        Water.SinkP sinkToShLP_p(          h=2.760e6,
          redeclare package Medium = FluidMedium,
          p0=5.398e3) 
          annotation (extent=[-28,-66; -16,-54]);
        Water.SinkP sinkToEcHP_p(p0=1.389e7, h=6.775e5) 
          annotation (extent=[-144,-162; -132,-150],
                                                 rotation=270);
        Water.SourceW sourceFromEcHP_w(
          w0=69.5,
          h=1.463e6,
          p0=1.626e7) 
                     annotation (extent=[-140,-148; -152,-136],
                                                            rotation=90);
        Water.SinkP sinkToRiserHP_p(p0=1.371e7, h=1.6325e6) 
          annotation (extent=[-160,-162; -148,-150],
                                                 rotation=270);
        Water.SourceW sourceFromRiserHP_w(
          w0=175.5,
          h=2.002e6,
          p0=1.626e7) 
                     annotation (extent=[-156,-148; -168,-136],
                                                            rotation=90);
        Water.SinkP sinkToShHP_p(            h=2.657e6,
          redeclare package Medium = FluidMedium,
          p0=2.98e6) 
          annotation (extent=[-140,-178; -128,-166],
                                                 rotation=0);
        Water.SinkP sinkToEcIP_p(p0=4.86e6, h=6.654e5) 
          annotation (extent=[-90,-110; -78,-98],
                                                rotation=270);
        Water.SourceW sourceFromEcIP_w(
          h=9.444e5,
          w0=12.7,
          p0=3.3816e6) 
                     annotation (extent=[-86,-96; -98,-84], rotation=90);
        Water.SinkP sinkToRiserIP_p(p0=3.716e6, h=1.0223e6) 
          annotation (extent=[-106,-110; -94,-98],
                                                 rotation=270);
        Water.SourceW sourceFromRiserIP_w(
          w0=67.5,
          h=1.370e6,
          p0=3.3816e6) 
                     annotation (extent=[-102,-96; -114,-84],
                                                            rotation=90);
        Water.SinkP sinkToShIP_p(           h=2.802e6,
          p0=6e5,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[-82,-126; -70,-114],
                                                 rotation=0);
        Water.ValveLin valveLP(redeclare package Medium = FluidMedium, Kv=6.9/6.738e5) 
          annotation (extent=[-54,-52; -38,-68]);
        Water.ValveLin valveIP(redeclare package Medium = FluidMedium, Kv=13.5/
              2.959e6) annotation (extent=[-108,-112; -92,-128]);
        Water.ValveLin valveHP(redeclare package Medium = FluidMedium, Kv=70/1.344e7) 
          annotation (extent=[-166,-164; -150,-180]);
      public 
        Modelica.Blocks.Sources.Constant com_valve(k=1) 
          annotation (extent=[60,-196; 40,-176]);
      public 
        Components.StateReader_water stateToEcHP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-144,-106; -132,-118],
                                                                  rotation=90);
        Components.StateReader_water stateReturnEcHP(
                                               redeclare package Medium = 
              FluidMedium) annotation (extent=[-152,-118; -140,-106],
                                                                  rotation=90);
        Components.StateReader_water stateToRiserHP(
                                              redeclare package Medium = 
              FluidMedium) annotation (extent=[-160,-106; -148,-118],
                                                                  rotation=90);
        Components.StateReader_water stateReturnRiserHP(
                                                  redeclare package Medium = 
              FluidMedium) annotation (extent=[-168,-118; -156,-106],
                                                                  rotation=90);
        Components.StateReader_water stateToShHP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-176,-106; -164,-118],
                                                                  rotation=90);
        Components.StateReader_water stateToEcIP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-90,-50; -78,-62],
                                                                rotation=90);
        Components.StateReader_water stateReturnEcIP(
                                               redeclare package Medium = 
              FluidMedium) annotation (extent=[-98,-62; -86,-50],rotation=90);
        Components.StateReader_water stateToRiserIP(
                                              redeclare package Medium = 
              FluidMedium) annotation (extent=[-106,-50; -94,-62],rotation=90);
        Components.StateReader_water stateReturnRiserIP(
                                                  redeclare package Medium = 
              FluidMedium) annotation (extent=[-114,-62; -102,-50],
                                                                  rotation=90);
        Components.StateReader_water stateToShIP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-122,-50; -110,-62],
                                                                  rotation=90);
        Components.StateReader_water stateToEcLP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-24,2; -36,-10],
                                                              rotation=90);
        Components.StateReader_water stateReturnEcLP(
                                               redeclare package Medium = 
              FluidMedium) annotation (extent=[-44,-10; -32,2],
                                                              rotation=90);
        Components.StateReader_water stateToRiserLP(
                                              redeclare package Medium = 
              FluidMedium) annotation (extent=[-40,2; -52,-10],
                                                              rotation=90);
        Components.StateReader_water stateReturnRiserLP(
                                                  redeclare package Medium = 
              FluidMedium) annotation (extent=[-60,-10; -48,2],
                                                              rotation=90);
        Components.StateReader_water stateToShLP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-56,2; -68,-10],
                                                              rotation=90);
      public 
        Water.SourceP sourceWater(p0=5398.2, h=1.43495e5) 
                     annotation (extent=[58,158; 46,170]);
      public 
        Modelica.Blocks.Sources.Ramp IPpump_com(
          duration=10,
          offset=12.7,
          height=0) 
          annotation (extent=[160,-114; 140,-94]);
        Modelica.Blocks.Sources.Ramp HPpump_com(
          duration=10,
          startTime=0,
          offset=69.5,
          height=0) 
          annotation (extent=[160,-154; 140,-134]);
      public 
        Modelica.Blocks.Sources.Constant LPpump_com(k=89.8) 
          annotation (extent=[160,-80; 140,-60]);
      protected 
        Buses.Actuators actuators annotation (extent=[32,114; 20,126]);
      public 
        Modelica.Blocks.Sources.Constant LPpump_com1(k=1500) 
          annotation (extent=[160,-20; 140,0]);
      equation 
        connect(IPpump_com.y,actuators. flowRate_feedIP) 
                                                     annotation (points=[139,-104;
              110,-104; 110,120; 26,120],
                              style(color=74, rgbcolor={0,0,127}));
        connect(HPpump_com.y,actuators. flowRate_feedHP) 
                                                     annotation (points=[139,-144;
              100,-144; 100,120; 26,120],
                                     style(color=74, rgbcolor={0,0,127}));
        connect(stateToRiserHP.inlet, Drums.ToRiser_HP) annotation (points=[-154,
              -108.4; -154,22; -153.333,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnEcHP.outlet, Drums.Feed_HP) annotation (points=[-146,
              -108.4; -146,22; -145.333,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToEcHP.inlet, Drums.WaterForHP) annotation (points=[-138,
              -108.4; -138,22; -137.333,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnRiserHP.outlet, Drums.FromRiser_HP) annotation (
            points=[-162,-108.4; -162,22; -161.333,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToShHP.inlet, Drums.Steam_HP_Out) annotation (points=[-170,
              -108.4; -170,22; -169.333,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToRiserIP.inlet, Drums.ToRiser_IP) annotation (points=[
              -100,-52.4; -100,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnEcIP.outlet, Drums.Feed_IP) annotation (points=[-92,
              -52.4; -92,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToEcIP.inlet, Drums.WaterForIP) annotation (points=[-84,
              -52.4; -84,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnRiserIP.outlet, Drums.FromRiser_IP) annotation (
            points=[-108,-52.4; -108,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToShIP.inlet, Drums.Steam_IP_Out) annotation (points=[-116,
              -52.4; -116,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceWater.flange, Drums.WaterIn) annotation (points=[46,164;
              12,164; 12,166; -20,166], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToShLP_p.flange, valveLP.outlet) annotation (points=[-28,
              -60; -38,-60], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveLP.inlet, stateToShLP.outlet) annotation (points=[-54,-60;
              -62,-60; -62,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToRiserLP_p.flange, stateToRiserLP.outlet) annotation (
            points=[-46,-36; -46,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromRiserLP_w.flange, stateReturnRiserLP.inlet) 
          annotation (points=[-54,-18; -54,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromEcLP_w.flange, stateReturnEcLP.inlet) annotation (
            points=[-38,-18; -38,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToEcLP_p.flange, stateToEcLP.outlet) annotation (points=[
              -30,-36; -30,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToEcLP.inlet, Drums.WaterForLP) annotation (points=[-30,
              -0.4; -30,22; -30.6667,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnEcLP.outlet, Drums.Feed_LP) annotation (points=[-38,
              -0.4; -38,22; -38.6667,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToRiserLP.inlet, Drums.ToRiser_LP) annotation (points=[-46,
              -0.4; -46.6667,-0.4; -46.6667,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnRiserLP.outlet, Drums.FromRiser_LP) annotation (
            points=[-54,-0.4; -54,22; -54.6667,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToShLP.inlet, Drums.Steam_LP_Out) annotation (points=[-62,
              -0.4; -62,22; -62.6667,22], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(actuators, Drums.ActuatorsBus) annotation (points=[26,120; 3,
              120; 3,128.667; -20,128.667], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToEcIP_p.flange, stateToEcIP.outlet) annotation (points=[
              -84,-98; -84,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromEcIP_w.flange, stateReturnEcIP.inlet) annotation (
            points=[-92,-84; -92,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToRiserIP_p.flange, stateToRiserIP.outlet) annotation (
            points=[-100,-98; -100,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromRiserIP_w.flange, stateReturnRiserIP.inlet) 
          annotation (points=[-108,-84; -108,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveIP.inlet, stateToShIP.outlet) annotation (points=[-108,
              -120; -116,-120; -116,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToShIP_p.flange, valveIP.outlet) annotation (points=[-82,
              -120; -92,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToEcHP_p.flange, stateToEcHP.outlet) annotation (points=[
              -138,-150; -138,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromEcHP_w.flange, stateReturnEcHP.inlet) annotation (
            points=[-146,-136; -146,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToRiserHP_p.flange, stateToRiserHP.outlet) annotation (
            points=[-154,-150; -154,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromRiserHP_w.flange, stateReturnRiserHP.inlet) 
          annotation (points=[-162,-136; -162,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveHP.inlet, stateToShHP.outlet) annotation (points=[-166,
              -172; -170,-172; -170,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveHP.outlet, sinkToShHP_p.flange) annotation (points=[-150,
              -172; -140,-172], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_valve.y, valveHP.cmd) annotation (points=[39,-186; -158,
              -186; -158,-178.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_valve.y, valveIP.cmd) annotation (points=[39,-186; -100,
              -186; -100,-126.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_valve.y, valveLP.cmd) annotation (points=[39,-186; -46,-186;
              -46,-66.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HPpump_com.y, sourceFromEcHP_w.in_w0) annotation (points=[139,
              -144; -142.4,-144; -142.4,-144.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(IPpump_com.y, sourceFromEcIP_w.in_w0) annotation (points=[139,
              -104; 19.5,-104; 19.5,-92.4; -88.4,-92.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(LPpump_com.y, sourceFromEcLP_w.in_w0) annotation (points=[139,
              -70; 46,-70; 46,-26.4; -34.4,-26.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(LPpump_com1.y, actuators.nPump_feedLP) annotation (points=[139,
              -10; 110,-10; 110,120; 28,120], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end TestDG_3LCC_wa;
      
      model TestDG_3LCC_wafp 
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        ThermoPower.PowerPlants.HRSG.Examples.DG_3L_CC_wafp Drums(
          HPd_rint=1.067,
          HPd_rext=1.167,
          HPd_L=11.920,
          HPd_Cm=0,
          IPd_rint=0.915,
          IPd_rext=1.015,
          IPd_L=7,
          IPd_Cm=0,
          LPd_rint=1.143,
          LPd_rext=1.243,
          LPd_L=11.503,
          LPd_Cm=0,
          RiserHPFlowRate=175.5,
          RiserIPFlowRate=67.5,
          RiserLPFlowRate=41.5,
          redeclare package FluidMedium = FluidMedium,
          SSInit=false,
          fluidLPNomPressure=7.19048e5,
          LPd_hvstart=2.76051e6,
          LPd_hlstart=6.68356e5,
          fluidHPNomPressure=1.626e7,
          fluidIPNomPressure=3.3816e6,
          HPd_hvstart=2.53239e6,
          HPd_hlstart=1.5879e6,
          IPd_hvstart=2.794e6,
          IPd_hlstart=1.0265e5) annotation (extent=[-180,20; -20,180]);
        Water.SinkP sinkToEcLP_p(           h=2.440e5, p0=7.19e5) 
          annotation (extent=[-36,-48; -24,-36], rotation=270);
        annotation (Diagram, Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        Water.SourceW sourceFromEcLP_w(
          h=6.544e5,
          w0=89.8,
          p0=7.19048e5) 
                     annotation (extent=[-32,-30; -44,-18], rotation=90);
        Water.SinkP sinkToRiserLP_p(p0=1.534e6, h=1.6325e6) 
          annotation (extent=[-52,-48; -40,-36], rotation=270);
        Water.SourceW sourceFromRiserLP_w(
          w0=41.49,
          h=1.065e6,
          p0=7.19046e5) 
                     annotation (extent=[-48,-30; -60,-18], rotation=90);
        Water.SinkP sinkToShLP_p(          h=2.760e6,
          redeclare package Medium = FluidMedium,
          p0=5.398e3) 
          annotation (extent=[-28,-66; -16,-54]);
        Water.SinkP sinkToEcHP_p(p0=1.389e7, h=6.775e5) 
          annotation (extent=[-144,-162; -132,-150],
                                                 rotation=270);
        Water.SourceW sourceFromEcHP_w(
          w0=69.5,
          h=1.463e6,
          p0=1.626e7) 
                     annotation (extent=[-140,-148; -152,-136],
                                                            rotation=90);
        Water.SinkP sinkToRiserHP_p(p0=1.371e7, h=1.6325e6) 
          annotation (extent=[-160,-162; -148,-150],
                                                 rotation=270);
        Water.SourceW sourceFromRiserHP_w(
          w0=175.5,
          h=2.002e6,
          p0=1.626e7) 
                     annotation (extent=[-156,-148; -168,-136],
                                                            rotation=90);
        Water.SinkP sinkToShHP_p(            h=2.657e6,
          redeclare package Medium = FluidMedium,
          p0=2.98e6) 
          annotation (extent=[-140,-178; -128,-166],
                                                 rotation=0);
        Water.SinkP sinkToEcIP_p(p0=4.86e6, h=6.654e5) 
          annotation (extent=[-90,-110; -78,-98],
                                                rotation=270);
        Water.SourceW sourceFromEcIP_w(
          h=9.444e5,
          w0=12.7,
          p0=3.3816e6) 
                     annotation (extent=[-86,-96; -98,-84], rotation=90);
        Water.SinkP sinkToRiserIP_p(p0=3.716e6, h=1.0223e6) 
          annotation (extent=[-106,-110; -94,-98],
                                                 rotation=270);
        Water.SourceW sourceFromRiserIP_w(
          w0=67.5,
          h=1.370e6,
          p0=3.3816e6) 
                     annotation (extent=[-102,-96; -114,-84],
                                                            rotation=90);
        Water.SinkP sinkToShIP_p(           h=2.802e6,
          p0=6e5,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[-82,-126; -70,-114],
                                                 rotation=0);
        Water.ValveLin valveLP(redeclare package Medium = FluidMedium, Kv=6.9/6.738e5) 
          annotation (extent=[-54,-52; -38,-68]);
        Water.ValveLin valveIP(redeclare package Medium = FluidMedium, Kv=13.5/
              2.959e6) annotation (extent=[-108,-112; -92,-128]);
        Water.ValveLin valveHP(redeclare package Medium = FluidMedium, Kv=70/1.344e7) 
          annotation (extent=[-166,-164; -150,-180]);
      public 
        Modelica.Blocks.Sources.Constant com_valve(k=1) 
          annotation (extent=[56,-194; 44,-182]);
      public 
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateToEcHP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-144,-106; -132,-118],
                                                                  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateReturnEcHP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-152,-118; -140,-106],
                                                                  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateToRiserHP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-160,-106; -148,-118],
                                                                  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateReturnRiserHP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-168,-118; -156,-106],
                                                                  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateToShHP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-176,-106; -164,-118],
                                                                  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateToEcIP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-90,-50; -78,-62],
                                                                rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateReturnEcIP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-98,-62; -86,-50],rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateToRiserIP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-106,-50; -94,-62],rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateReturnRiserIP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-114,-62; -102,-50],
                                                                  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateToShIP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-122,-50; -110,-62],
                                                                  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateToEcLP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-24,2; -36,-10],
                                                              rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateReturnEcLP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-44,-10; -32,2],
                                                              rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateToRiserLP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-40,2; -52,-10],
                                                              rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateReturnRiserLP(                     redeclare package Medium = 
              FluidMedium) annotation (extent=[-60,-10; -48,2],
                                                              rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateToShLP(
                                           redeclare package Medium = 
              FluidMedium) annotation (extent=[-56,2; -68,-10],
                                                              rotation=90);
      public 
        Water.SourceP sourceWater(p0=5398.2, h=1.43495e5) 
                     annotation (extent=[58,158; 46,170]);
      public 
        Modelica.Blocks.Sources.Ramp IPpump_com(
          duration=10,
          offset=12.7,
          height=0) 
          annotation (extent=[140,-98; 128,-86]);
        Modelica.Blocks.Sources.Ramp HPpump_com(
          duration=10,
          startTime=0,
          offset=69.5,
          height=0) 
          annotation (extent=[140,-126; 128,-114]);
      public 
        Modelica.Blocks.Sources.Constant LPpump_com(k=89.8) 
          annotation (extent=[140,-78; 128,-66]);
      protected 
        Buses.Actuators actuators annotation (extent=[32,120; 20,132]);
      equation 
        connect(IPpump_com.y, actuators.flowRate_feedIP) 
                                                     annotation (points=[127.4,
              -92; 110,-92; 110,126; 26,126],
                              style(color=74, rgbcolor={0,0,127}));
        connect(HPpump_com.y, actuators.flowRate_feedHP) 
                                                     annotation (points=[127.4,
              -120; 100,-120; 100,126; 26,126],
                                     style(color=74, rgbcolor={0,0,127}));
        connect(LPpump_com.y, actuators.flowRate_feedLP) annotation (points=[127.4,
              -72; 120,-72; 120,126; 26,126],
                                        style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=74,
            rgbfillColor={0,0,127},
            fillPattern=1));
        connect(stateToRiserHP.inlet, Drums.ToRiser_HP) annotation (points=[
              -154,-108.4; -154,20; -153.333,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnEcHP.outlet, Drums.Feed_HP) annotation (points=[-146,
              -108.4; -146,20; -145.333,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToEcHP.inlet, Drums.WaterForHP) annotation (points=[-138,
              -108.4; -138,20; -137.333,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnRiserHP.outlet, Drums.FromRiser_HP) annotation (
            points=[-162,-108.4; -162,20; -161.333,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToShHP.inlet, Drums.Steam_HP_Out) annotation (points=[-170,
              -108.4; -170,20; -169.333,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToRiserIP.inlet, Drums.ToRiser_IP) annotation (points=[
              -100,-52.4; -100,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnEcIP.outlet, Drums.Feed_IP) annotation (points=[-92,
              -52.4; -92,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToEcIP.inlet, Drums.WaterForIP) annotation (points=[-84,
              -52.4; -84,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnRiserIP.outlet, Drums.FromRiser_IP) annotation (
            points=[-108,-52.4; -108,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToShIP.inlet, Drums.Steam_IP_Out) annotation (points=[-116,
              -52.4; -116,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceWater.flange, Drums.WaterIn) annotation (points=[46,164;
              -20,164], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToShLP_p.flange, valveLP.outlet) annotation (points=[-28,
              -60; -38,-60], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveLP.inlet, stateToShLP.outlet) annotation (points=[-54,-60;
              -62,-60; -62,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToRiserLP_p.flange, stateToRiserLP.outlet) annotation (
            points=[-46,-36; -46,-7.6; -46,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromRiserLP_w.flange, stateReturnRiserLP.inlet) 
          annotation (points=[-54,-18; -54,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromEcLP_w.flange, stateReturnEcLP.inlet) annotation (
            points=[-38,-18; -38,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToEcLP_p.flange, stateToEcLP.outlet) annotation (points=[
              -30,-36; -30,-7.6; -30,-7.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToEcLP.inlet, Drums.WaterForLP) annotation (points=[-30,
              -0.4; -30,20; -30.6667,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnEcLP.outlet, Drums.Feed_LP) annotation (points=[-38,
              -0.4; -38,-0.4; -38,20; -38.6667,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToRiserLP.inlet, Drums.ToRiser_LP) annotation (points=[-46,
              -0.4; -46.6667,-0.4; -46.6667,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateReturnRiserLP.outlet, Drums.FromRiser_LP) annotation (
            points=[-54,-0.4; -54,-0.4; -54,20; -54.6667,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateToShLP.inlet, Drums.Steam_LP_Out) annotation (points=[-62,
              -0.4; -62,-0.4; -62,20; -62.6667,20], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(actuators, Drums.ActuatorsBus) annotation (points=[26,126; 3,
              126; 3,126.667; -20,126.667], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToEcIP_p.flange, stateToEcIP.outlet) annotation (points=[
              -84,-98; -84,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromEcIP_w.flange, stateReturnEcIP.inlet) annotation (
            points=[-92,-84; -92,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToRiserIP_p.flange, stateToRiserIP.outlet) annotation (
            points=[-100,-98; -100,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromRiserIP_w.flange, stateReturnRiserIP.inlet) 
          annotation (points=[-108,-84; -108,-59.6; -108,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveIP.inlet, stateToShIP.outlet) annotation (points=[-108,
              -120; -116,-120; -116,-59.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToShIP_p.flange, valveIP.outlet) annotation (points=[-82,
              -120; -92,-120], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToEcHP_p.flange, stateToEcHP.outlet) annotation (points=[
              -138,-150; -138,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromEcHP_w.flange, stateReturnEcHP.inlet) annotation (
            points=[-146,-136; -146,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sinkToRiserHP_p.flange, stateToRiserHP.outlet) annotation (
            points=[-154,-150; -154,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(sourceFromRiserHP_w.flange, stateReturnRiserHP.inlet) 
          annotation (points=[-162,-136; -162,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveHP.inlet, stateToShHP.outlet) annotation (points=[-166,
              -172; -170,-172; -170,-115.6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveHP.outlet, sinkToShHP_p.flange) annotation (points=[-150,
              -172; -140,-172], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_valve.y, valveHP.cmd) annotation (points=[43.4,-188; -158,
              -188; -158,-178.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_valve.y, valveIP.cmd) annotation (points=[43.4,-188; -100,
              -188; -100,-126.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_valve.y, valveLP.cmd) annotation (points=[43.4,-188; -46,
              -188; -46,-66.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(HPpump_com.y, sourceFromEcHP_w.in_w0) annotation (points=[127.4,
              -120; -18,-120; -18,-144; -142.4,-144; -142.4,-144.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(IPpump_com.y, sourceFromEcIP_w.in_w0) annotation (points=[127.4,
              -92; 19.5,-92; 19.5,-92.4; -88.4,-92.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(LPpump_com.y, sourceFromEcLP_w.in_w0) annotation (points=[127.4,
              -72; 46,-72; 46,-26.4; -34.4,-26.4], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end TestDG_3LCC_wafp;
      
      model TestHRSG_wa 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
      protected 
        Buses.Actuators actuators annotation (extent=[84,44; 72,54]);
        annotation (Diagram, experiment(
            StopTime=8000,
            NumberOfIntervals=5000,
            Tolerance=1e-006));
      public 
        Water.SinkP outHP(redeclare package Medium = FluidMedium, p0=0) 
                          annotation (extent=[-78,-48; -92,-34],
                                                              rotation=0);
        Water.SinkP outIP(redeclare package Medium = FluidMedium, p0=0) 
                           annotation (extent=[-40,-86; -54,-72],
                                                                rotation=0);
        Water.SinkP outLP(redeclare package Medium = FluidMedium, p0=0) 
                           annotation (extent=[40,-86; 54,-72], rotation=0);
        Water.SourceW sourceRhIP(
          redeclare package Medium = FluidMedium,
          h=3.22e6,
          w0=81.10,
          p0=28.4e5)          annotation (extent=[-34,-64; -22,-52],
                                                                   rotation=90);
        Water.SinkP sinkRhIP(
          redeclare package Medium = FluidMedium,
          h=3.548e6,
          p0=28.4e5)       annotation (extent=[-22,-38; -10,-50],
                                                                rotation=90);
        Gas.SourceW sourceGas(
          redeclare package Medium = FlueGasMedium,
          w0=585.5,
          T=884.65)          annotation (extent=[-100,18; -84,34]);
        Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=379.448) 
                         annotation (extent=[72,18; 88,34]);
        Water.ValveLin valveLinHP(redeclare package Medium = FluidMedium, Kv=
              69.5/134.3e5)     annotation (extent=[-54,-34; -68,-48]);
        Water.ValveLin valveLinIP(redeclare package Medium = FluidMedium, Kv=
              12.7/29.6e5)       annotation (extent=[-10,-72; -24,-86],
            rotation=0);
        Water.ValveLin valveLinLP(redeclare package Medium = FluidMedium, Kv=
              6.91/6.6e5)        annotation (extent=[30,-86; 16,-72], rotation=
              180);
        Modelica.Blocks.Sources.Constant com_pumpFeedHP(k=64.5) 
          annotation (extent=[98,64; 86,76]);
        Modelica.Blocks.Sources.Constant com_pumpFeedIP(k=13.5) 
          annotation (extent=[58,64; 70,76]);
        Modelica.Blocks.Sources.Constant commandValve 
          annotation (extent=[-92,-96; -82,-86], rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_in(
                                               redeclare package Medium = 
              FlueGasMedium) annotation (extent=[-76,16; -56,36],   rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_out(
                                                redeclare package Medium = 
              FlueGasMedium) annotation (extent=[42,16; 62,36],   rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShHP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-48,-16; -32,-32], rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShIP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-12,-16; 4,-32],   rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShLP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[0,-16; 16,-32],    rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateRhIP_out(
                                                   redeclare package Medium = 
              FluidMedium) annotation (extent=[-24,-16; -8,-32],  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateRhIP_in(
                                                  redeclare package Medium = 
              FluidMedium) annotation (extent=[-36,-16; -20,-32], rotation=270);
        ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wa hRSG(
                                redeclare package FlueGasMedium = FlueGasMedium, redeclare 
            package FluidMedium = FluidMedium) 
          annotation (extent=[-48,-6; 32,74]);
        Water.SourceP sourceShLP(
          redeclare package Medium = FluidMedium,
          p0=5398.2,
          h=1.43495e5) 
          annotation (extent=[18,-38; 30,-50],
                                             rotation=270);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateFromCondenser(                           redeclare package 
            Medium = 
              FluidMedium) annotation (extent=[32,-16; 16,-32],
                                                              rotation=270);
      public 
        Modelica.Blocks.Sources.Constant com_n_pump(k=1510) 
          annotation (extent=[98,84; 86,96]);
      equation 
        connect(com_pumpFeedIP.y, actuators.flowRate_feedIP) 
                                                     annotation (points=[70.6,70;
              78,70; 78,49], style(color=74, rgbcolor={0,0,127}));
        connect(com_pumpFeedHP.y, actuators.flowRate_feedHP) 
                                                     annotation (points=[85.4,70;
              78,70; 78,49],        style(color=74, rgbcolor={0,0,127}));
        connect(stateGas_in.inlet, sourceGas.flange) annotation (points=[-72,26;
              -84,26],       style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=76,
            rgbfillColor={170,170,255},
            fillPattern=1));
        connect(sinkGas.flange, stateGas_out.outlet) annotation (points=[72,26;
              58,26],  style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=76,
            rgbfillColor={170,170,255},
            fillPattern=1));
        connect(stateGas_in.outlet, hRSG.GasIn) annotation (points=[-60,26; -48,
              26],         style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[46,26; 32,
              26],        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateShLP_out.inlet, hRSG.Sh_LP_Out) 
          annotation (points=[8,-19.2; 8,-6], style(thickness=2));
        connect(stateShIP_out.inlet, hRSG.Sh_IP_Out) 
          annotation (points=[-4,-19.2; -4,-6], style(thickness=2));
        connect(stateRhIP_out.inlet, hRSG.Rh_IP_Out) 
          annotation (points=[-16,-19.2; -16,-6], style(thickness=2));
        connect(stateRhIP_in.outlet, hRSG.Rh_IP_In) 
          annotation (points=[-28,-19.2; -28,-6], style(thickness=2));
        connect(stateShHP_out.inlet, hRSG.Sh_HP_Out) 
          annotation (points=[-40,-19.2; -40,-6], style(thickness=2));
        connect(sinkRhIP.flange, stateRhIP_out.outlet) 
          annotation (points=[-16,-38; -16,-28.8], style(thickness=2));
        connect(sourceRhIP.flange, stateRhIP_in.inlet) 
          annotation (points=[-28,-52; -28,-28.8], style(thickness=2));
        connect(valveLinLP.inlet, stateShLP_out.outlet) 
          annotation (points=[16,-79; 8,-79; 8,-28.8], style(thickness=2));
        connect(valveLinIP.inlet, stateShIP_out.outlet) 
          annotation (points=[-10,-79; -4,-79; -4,-28.8], style(thickness=2));
        connect(valveLinHP.inlet, stateShHP_out.outlet) annotation (points=[-54,-41;
              -40,-41; -40,-28.8],      style(thickness=2));
        connect(outLP.flange, valveLinLP.outlet) 
          annotation (points=[40,-79; 30,-79], style(thickness=2));
        connect(commandValve.y, valveLinHP.cmd) annotation (points=[-81.5,-91;
              -61,-91; -61,-46.6], style(color=74, rgbcolor={0,0,127}));
        connect(valveLinIP.cmd, commandValve.y) annotation (points=[-17,-84.6;
              -17,-91; -81.5,-91], style(color=74, rgbcolor={0,0,127}));
        connect(valveLinLP.cmd, commandValve.y) annotation (points=[23,-84.6;
              23,-91; -81.5,-91], style(color=74, rgbcolor={0,0,127}));
        connect(actuators, hRSG.ActuatorsBus) annotation (points=[78,49; 54.6,
              49; 54.6,54; 32,54],       style(color=52, rgbcolor={213,255,170}));
        connect(sourceShLP.flange, stateFromCondenser.inlet) annotation (points=
             [24,-38; 24,-28.8], style(
            color=3,
            rgbcolor={0,0,255},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateFromCondenser.outlet, hRSG.WaterIn) annotation (points=[24,
              -19.2; 24,-6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(outIP.flange, valveLinIP.outlet) annotation (points=[-40,-79;
              -32,-79; -32,-79; -24,-79], style(thickness=2));
        connect(valveLinHP.outlet, outHP.flange) annotation (points=[-68,-41;
              -74,-41; -74,-41; -78,-41], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_n_pump.y, actuators.nPump_feedLP) annotation (points=[85.4,
              90; 78,90; 78,49], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end TestHRSG_wa;
      
      model TestHRSG_wafp 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
      protected 
        Buses.Actuators actuators annotation (extent=[84,46; 72,56]);
        annotation (Diagram, experiment(StopTime=10000, NumberOfIntervals=5000));
      public 
        Water.SinkP outHP(redeclare package Medium = FluidMedium, p0=0) 
                          annotation (extent=[-78,-48; -92,-34],
                                                              rotation=0);
        Water.SinkP outIP(redeclare package Medium = FluidMedium, p0=0) 
                           annotation (extent=[-36,-86; -50,-72],
                                                                rotation=0);
        Water.SinkP outLP(redeclare package Medium = FluidMedium, p0=0) 
                           annotation (extent=[40,-86; 54,-72], rotation=0);
        Water.SourceW sourceRhIP(
          redeclare package Medium = FluidMedium,
          h=3.22e6,
          w0=81.10,
          p0=28.4e5)          annotation (extent=[-34,-64; -22,-52],
                                                                   rotation=90);
        Water.SinkP sinkRhIP(
          redeclare package Medium = FluidMedium,
          h=3.548e6,
          p0=28.4e5)       annotation (extent=[-22,-38; -10,-50],
                                                                rotation=90);
        Gas.SourceW sourceGas(
          redeclare package Medium = FlueGasMedium,
          w0=585.5,
          T=884.65)          annotation (extent=[-100,18; -84,34]);
        Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=379.448) 
                         annotation (extent=[72,18; 88,34]);
        Water.ValveLin valveLinHP(redeclare package Medium = FluidMedium, Kv=
              69.5/134.3e5)     annotation (extent=[-54,-34; -68,-48]);
        Water.ValveLin valveLinIP(redeclare package Medium = FluidMedium, Kv=
              12.7/29.6e5)       annotation (extent=[-10,-72; -24,-86],
            rotation=0);
        Water.ValveLin valveLinLP(redeclare package Medium = FluidMedium, Kv=
              6.91/6.6e5)        annotation (extent=[30,-86; 16,-72], rotation=
              180);
        Modelica.Blocks.Sources.Constant com_pumpFeedHP(k=64.5) 
          annotation (extent=[98,66; 86,78]);
        Modelica.Blocks.Sources.Constant com_pumpFeedIP(k=13.5) 
          annotation (extent=[58,66; 70,78]);
        Modelica.Blocks.Sources.Constant commandValve 
          annotation (extent=[-92,-96; -82,-86], rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_in(
                                               redeclare package Medium = 
              FlueGasMedium) annotation (extent=[-76,16; -56,36],   rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_out(
                                                redeclare package Medium = 
              FlueGasMedium) annotation (extent=[42,16; 62,36],   rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShHP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-48,-16; -32,-32], rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShIP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-12,-16; 4,-32],   rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShLP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[0,-16; 16,-32],    rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateRhIP_out(
                                                   redeclare package Medium = 
              FluidMedium) annotation (extent=[-24,-16; -8,-32],  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateRhIP_in(
                                                  redeclare package Medium = 
              FluidMedium) annotation (extent=[-36,-16; -20,-32], rotation=270);
        ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wafp hRSG(
                           redeclare package FlueGasMedium = FlueGasMedium, redeclare 
            package FluidMedium = FluidMedium) 
          annotation (extent=[-48,-6; 32,74]);
        Water.SourceP sourceShLP(
          redeclare package Medium = FluidMedium,
          p0=5398.2,
          h=1.43495e5) 
          annotation (extent=[18,-38; 30,-50],
                                             rotation=270);
        Components.StateReader_water stateFromCondenser(redeclare package 
            Medium = 
              FluidMedium) annotation (extent=[32,-16; 16,-32],
                                                              rotation=270);
      public 
        Modelica.Blocks.Sources.Constant com_LPpump(k=89.8) 
          annotation (extent=[98,86; 86,98]);
      equation 
        connect(com_pumpFeedIP.y, actuators.flowRate_feedIP) 
                                                     annotation (points=[70.6,72;
              78,72; 78,51], style(color=74, rgbcolor={0,0,127}));
        connect(com_pumpFeedHP.y, actuators.flowRate_feedHP) 
                                                     annotation (points=[85.4,72;
              78,72; 78,51],        style(color=74, rgbcolor={0,0,127}));
        connect(stateGas_in.inlet, sourceGas.flange) annotation (points=[-72,26;
              -84,26],       style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=76,
            rgbfillColor={170,170,255},
            fillPattern=1));
        connect(sinkGas.flange, stateGas_out.outlet) annotation (points=[72,26;
              58,26],  style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=76,
            rgbfillColor={170,170,255},
            fillPattern=1));
        connect(stateGas_in.outlet, hRSG.GasIn) annotation (points=[-60,26; -48,
              26],         style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[46,26; 32,
              26],        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateShLP_out.inlet, hRSG.Sh_LP_Out) 
          annotation (points=[8,-19.2; 8,-6], style(thickness=2));
        connect(stateShIP_out.inlet, hRSG.Sh_IP_Out) 
          annotation (points=[-4,-19.2; -4,-6], style(thickness=2));
        connect(stateRhIP_out.inlet, hRSG.Rh_IP_Out) 
          annotation (points=[-16,-19.2; -16,-6], style(thickness=2));
        connect(stateRhIP_in.outlet, hRSG.Rh_IP_In) 
          annotation (points=[-28,-19.2; -28,-6], style(thickness=2));
        connect(stateShHP_out.inlet, hRSG.Sh_HP_Out) 
          annotation (points=[-40,-19.2; -40,-6], style(thickness=2));
        connect(sinkRhIP.flange, stateRhIP_out.outlet) 
          annotation (points=[-16,-38; -16,-28.8], style(thickness=2));
        connect(sourceRhIP.flange, stateRhIP_in.inlet) 
          annotation (points=[-28,-52; -28,-28.8], style(thickness=2));
        connect(valveLinLP.inlet, stateShLP_out.outlet) 
          annotation (points=[16,-79; 8,-79; 8,-28.8], style(thickness=2));
        connect(valveLinIP.inlet, stateShIP_out.outlet) 
          annotation (points=[-10,-79; -4,-79; -4,-28.8], style(thickness=2));
        connect(valveLinIP.outlet, outIP.flange) 
          annotation (points=[-24,-79; -36,-79], style(thickness=2));
        connect(valveLinHP.inlet, stateShHP_out.outlet) annotation (points=[-54,-41;
              -40,-41; -40,-28.8],      style(thickness=2));
        connect(outLP.flange, valveLinLP.outlet) 
          annotation (points=[40,-79; 30,-79], style(thickness=2));
        connect(commandValve.y, valveLinHP.cmd) annotation (points=[-81.5,-91;
              -61,-91; -61,-46.6], style(color=74, rgbcolor={0,0,127}));
        connect(valveLinIP.cmd, commandValve.y) annotation (points=[-17,-84.6;
              -17,-91; -81.5,-91], style(color=74, rgbcolor={0,0,127}));
        connect(valveLinLP.cmd, commandValve.y) annotation (points=[23,-84.6;
              23,-91; -81.5,-91], style(color=74, rgbcolor={0,0,127}));
        connect(valveLinHP.outlet, outHP.flange) 
          annotation (points=[-68,-41; -78,-41], style(thickness=2));
        connect(actuators, hRSG.ActuatorsBus) annotation (points=[78,51; 54.6,
              51; 54.6,54; 32,54],       style(color=52, rgbcolor={213,255,170}));
        connect(sourceShLP.flange,stateFromCondenser. inlet) annotation (points=[24,-38;
              24,-28.8],         style(
            color=3,
            rgbcolor={0,0,255},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateFromCondenser.outlet, hRSG.WaterIn) annotation (points=[24,
              -19.2; 24,-6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_LPpump.y, actuators.flowRate_feedLP) annotation (points=[
              85.4,92; 78,92; 78,52], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end TestHRSG_wafp;
      
    end Tests;
    
    package TestsControl 
      model TestPumpControl 
        import ThermoPower;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        Water.SinkP sinkToEcLP_p(           h=2.440e5, p0=7.19e5) 
          annotation (extent=[60,-20; 80,0]);
        Water.SourceP sourceShLP(
          redeclare package Medium = FluidMedium,
          p0=5398.2,
          h=1.43495e5) 
          annotation (extent=[-60,0; -80,-20],
                                             rotation=180);
      public 
        Modelica.Blocks.Sources.Ramp n_pump(
          duration=100,
          offset=89.9,
          startTime=500,
          height=0) 
          annotation (extent=[64,34; 52,46]);
        ThermoPower.PowerPlants.Control.PID pIDController(
          CSmin=500,
          PVmin=-1,
          PVmax=1,
          CSmax=2500,
          Ti=200,
          Kp=4) annotation (extent=[12,46; 32,26],  rotation=180);
      public 
        ThermoPower.PowerPlants.HRSG.Components.PrescribedSpeedPump pump(
          rho_nom=1000,
          redeclare package WaterMedium = FluidMedium,
          q_nom={0.0898,0,0.1},
          head_nom={72.74,130,0},
          nominalSteamPressure=7.19048e5,
          nominalCondensationPressure=5398.2,
          nominalSteamFlow=89.8,
          hstart=1.43495e5,
          n0=1500,
          feedWaterPump(redeclare function efficiencyCharacteristic = 
                Functions.PumpCharacteristics.constantEfficiency (eta_nom=0.6))) 
                                annotation (extent=[0,0; -20,-20],   rotation=180);
        ThermoPower.Water.SensW feed_w(redeclare package Medium = FluidMedium) 
          annotation (extent=[36,4; 16,-16],      rotation=180);
        annotation (Diagram);
        Modelica.Blocks.Continuous.FirstOrder firstOrder(y_start=1512, T=1) 
          annotation (extent=[-4,26; -24,46], rotation=0);
      equation 
        connect(n_pump.y, pIDController.SP) annotation (points=[51.4,40; 32,
              40], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(feed_w.inlet, pump.outlet)          annotation (points=[20,-10;
              10,-10; 10,-10; 0,-10],      style(
            thickness=2,
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(sourceShLP.flange, pump.inlet)          annotation (points=[-60,-10;
              -50,-10; -50,-10; -40,-10; -40,-10; -20,-10],          style(
            thickness=2,
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(feed_w.outlet, sinkToEcLP_p.flange) annotation (points=[32,
              -10; 60,-10], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(pIDController.PV, feed_w.w) annotation (points=[32,32; 40,32;
              40,-8.88178e-016; 34,-8.88178e-016],       style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={240,240,240},
            fillPattern=1));
        connect(pIDController.CS, firstOrder.u) annotation (points=[11.4,36; -2,
              36],    style(color=74, rgbcolor={0,0,127}));
        connect(firstOrder.y, pump.pumpSpeed_rpm)          annotation (points=[-25,36;
              -40,36; -40,-4; -20.8,-4],         style(color=74, rgbcolor={0,
                0,127}));
      end TestPumpControl;
      
      model TestHRSG_wac 
        replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
          Modelica.Media.Interfaces.PartialMedium;
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram);
        Gas.SourceW sourceGas(
          redeclare package Medium = FlueGasMedium,
          w0=585.5,
          T=884.65)          annotation (extent=[-100,18; -84,34]);
        Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=379.448) 
                         annotation (extent=[74,18; 90,34]);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_in(
                                               redeclare package Medium = 
              FlueGasMedium) annotation (extent=[-76,16; -56,36],   rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_out(
                                                redeclare package Medium = 
              FlueGasMedium) annotation (extent=[42,16; 62,36],   rotation=0);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShHP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-48,-16; -32,-32], rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShIP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-12,-16; 4,-32],   rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateShLP_out(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[0,-16; 16,-32],    rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateRhIP_out(
                                                   redeclare package Medium = 
              FluidMedium) annotation (extent=[-24,-16; -8,-32],  rotation=90);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water stateRhIP_in(
                                                  redeclare package Medium = 
              FluidMedium) annotation (extent=[-36,-16; -20,-32], rotation=270);
        ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wa hRSG(
                                redeclare package FlueGasMedium = 
              FlueGasMedium,                                                     redeclare 
            package FluidMedium = FluidMedium) 
          annotation (extent=[-48,-6; 32,74]);
        ThermoPower.PowerPlants.HRSG.Components.StateReader_water 
          stateFromCondenser(                           redeclare package 
            Medium = 
              FluidMedium) annotation (extent=[32,-16; 16,-32],
                                                              rotation=270);
        Water.SinkP OutLP(redeclare package Medium = FluidMedium,
          p0=5389.2,
          h=2.3854e6)      annotation (extent=[64,-80; 76,-68], rotation=0);
        Water.SteamTurbineStodola turbineHP(
          pstart_in=1.28e7,
          pstart_out=2.98e6,
          wstart=67.6,
          hstartin=3.47e6,
          hstartout=3.1076e6,
          wnom=67.6,
          eta_iso_nom=0.833,
          Kt=0.0032078) 
                      annotation (extent=[-50,-92; -30,-72]);
        Water.SteamTurbineStodola turbineIP(
          pstart_in=2.68e6,
          pstart_out=6e5,
          wstart=81.10,
          hstartin=3.554e6,
          hstartout=3.1281e6,
          wnom=81.10,
          eta_iso_nom=0.903,
          Kt=0.018883)     annotation (extent=[-10,-92; 10,-72]);
        Water.SteamTurbineStodola turbineLP(
          pstart_in=6e5,
          pstart_out=5.3982e3,
          wstart=89.82,
          hstartin=3.109e6,
          hstartout=2.3854e6,
          wnom=89.82,
          eta_iso_nom=0.903,
          Kt=0.078004)     annotation (extent=[34,-92; 54,-72]);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          V=10,
          pstart=7.19e5,
          hstart=2.89295e6,
          initOpt=ThermoPower.Choices.Init.Options.noInit) 
                          annotation (extent=[18,-76; 28,-66],
                                                            rotation=0);
        Water.Mixer mixIP(
          redeclare package Medium = FluidMedium,
          V=10,
          pstart=3.38e6,
          initOpt=ThermoPower.Choices.Init.Options.noInit,
          hstart=3.1076e6) annotation (extent=[-34,-50; -22,-38],
                                                                rotation=90);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
                      annotation (extent=[98,-88; 88,-78]);
        Water.SourceP sourceShLP(
          redeclare package Medium = FluidMedium,
          p0=5398.2,
          h=1.43495e5) 
          annotation (extent=[40,-34; 52,-46],
                                             rotation=180);
        ThermoPower.PowerPlants.HRSG.Control.levelsControl 
          levelsControlSimplified 
          annotation (extent=[60,60; 80,80]);
      equation 
        connect(stateGas_in.inlet, sourceGas.flange) annotation (points=[-72,26;
              -84,26],       style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=76,
            rgbfillColor={170,170,255},
            fillPattern=1));
        connect(sinkGas.flange, stateGas_out.outlet) annotation (points=[74,26;
              58,26],  style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2,
            fillColor=76,
            rgbfillColor={170,170,255},
            fillPattern=1));
        connect(stateGas_in.outlet, hRSG.GasIn) annotation (points=[-60,26; -48,
              26],         style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[46,26; 32,
              26],        style(
            color=76,
            rgbcolor={159,159,223},
            thickness=2));
        connect(stateShLP_out.inlet, hRSG.Sh_LP_Out) 
          annotation (points=[8,-19.2; 8,-6], style(thickness=2));
        connect(stateShIP_out.inlet, hRSG.Sh_IP_Out) 
          annotation (points=[-4,-19.2; -4,-6], style(thickness=2));
        connect(stateRhIP_out.inlet, hRSG.Rh_IP_Out) 
          annotation (points=[-16,-19.2; -16,-6], style(thickness=2));
        connect(stateRhIP_in.outlet, hRSG.Rh_IP_In) 
          annotation (points=[-28,-19.2; -28,-6], style(thickness=2));
        connect(stateShHP_out.inlet, hRSG.Sh_HP_Out) 
          annotation (points=[-40,-19.2; -40,-6], style(thickness=2));
        connect(stateFromCondenser.outlet, hRSG.WaterIn) annotation (points=[24,
              -19.2; 24,-6], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(OutLP.flange, turbineLP.outlet) annotation (points=[64,-74;
              51.7,-74],                 style(thickness=2));
        connect(turbineHP.shaft_b, turbineIP.shaft_a) annotation (points=[-33.6,
              -82; -6.6,-82],       style(color=0, rgbcolor={0,0,0}));
        connect(turbineIP.shaft_b, turbineLP.shaft_a) annotation (points=[6.4,-82;
              37.4,-82],           style(color=0, rgbcolor={0,0,0}));
        connect(mixLP.in2, turbineIP.outlet) 
          annotation (points=[19.05,-74; 7.7,-74],  style(thickness=2));
        connect(constantSpeed.flange, turbineLP.shaft_b) annotation (points=[88,-83;
              88,-82; 50.4,-82],         style(color=0, rgbcolor={0,0,0}));
        connect(turbineLP.inlet, mixLP.out) annotation (points=[36.5,-74.1;
              36.5,-71; 28,-71], style(thickness=2));
        connect(sourceShLP.flange, stateFromCondenser.inlet) 
          annotation (points=[40,-40; 24,-40; 24,-28.8], style(thickness=2));
        connect(mixLP.in1, stateShLP_out.outlet) 
          annotation (points=[19,-68; 8,-68; 8,-28.8], style(thickness=2));
        connect(turbineHP.inlet, stateShHP_out.outlet) annotation (points=[-47.5,
              -74.1; -47.5,-52.05; -40,-52.05; -40,-28.8],       style(
              thickness=2));
        connect(turbineHP.outlet, mixIP.in1) annotation (points=[-32.3,-74;
              -31.6,-74; -31.6,-48.8], style(thickness=2));
        connect(mixIP.out, stateRhIP_in.inlet) 
          annotation (points=[-28,-38; -28,-28.8], style(thickness=2));
        connect(turbineIP.inlet, stateRhIP_out.outlet) annotation (points=[-7.5,
              -74.1; -16,-74.1; -16,-28.8],      style(thickness=2));
        connect(stateShIP_out.outlet, mixIP.in2) annotation (points=[-4,-28.8;
              -4,-60; -24.4,-60; -24.4,-48.74], style(thickness=2));
        connect(levelsControlSimplified.SensorsBus, hRSG.SensorsBus) 
          annotation (points=[60.2,70; 46,70; 46,66; 32,66],       style(
              color=84, rgbcolor={255,170,213}));
        connect(levelsControlSimplified.ActuatorsBus, hRSG.ActuatorsBus) 
          annotation (points=[80,70; 92,70; 92,54; 32,54],       style(color=
                52, rgbcolor={213,255,170}));
      end TestHRSG_wac;
      
    end TestsControl;
  end HRSG;
  
  package SteamTurbineGroup 
    package Interfaces 
      partial model ST_2L 
        "Base class for Steam Turbine with two pressure levels" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Turbines parameter  
        parameter SI.MassFlowRate steamHPNomFlowRate 
          "Nominal HP steam flow rate";
        parameter SI.MassFlowRate steamLPNomFlowRate 
          "Nominal LP steam flowr rate";
        parameter SI.Pressure steamHPNomPressure "Nominal HP steam pressure";
        parameter SI.Pressure steamLPNomPressure "Nominal LP steam pressure";
        parameter SI.Area HPT_Kt "Flow coefficient"           annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "HP Turbine"));
        parameter SI.Area LPT_Kt "Flow coefficient"           annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "LP Turbine"));
        
        //Start value
        parameter Boolean SSInit=false "Steady-state initialization" 
                                       annotation (Dialog(tab = "Initialization"));
        //HPT
        parameter SI.Pressure HPT_pstart_in = steamHPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.Pressure HPT_pstart_out = steamLPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.MassFlowRate HPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_out 
          "Outlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        //LPT
        parameter SI.Pressure LPT_pstart_in = steamLPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.Pressure LPT_pstart_out = pcond 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.MassFlowRate LPT_wstart = steamLPNomFlowRate + steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_out 
          "Outlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        
        //other parameter
        parameter SI.Pressure pcond "Condenser pressure";
        
        ThermoPower.Water.FlangeA HPT_In(redeclare package Medium = FluidMedium)
                                         annotation (extent=[-140,180; -100,220]);
        ThermoPower.Water.FlangeA LPT_In(redeclare package Medium = FluidMedium)
                                         annotation (extent=[-20,180; 20,220]);
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-120,30; -120,-30; -60,-100; -60,100; -120,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[0,30; 0,-30; 60,-100; 60,100; 0,30],       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-120,30; -120,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[0,30; 0,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[60,-98; 60,-192], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2))), Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeB LPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[40,-220; 80,-180]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end ST_2L;
      
      partial model ST_2LRh 
        "Base class for Steam Turbine with two pressure levels and reheat" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Turbines parameter
        parameter SI.MassFlowRate steamHPNomFlowRate 
          "Nominal HP steam flow rate";
        parameter SI.MassFlowRate steamIPNomFlowRate 
          "Nominal IP steam flow rate";
        parameter SI.MassFlowRate steamLPNomFlowRate 
          "Nominal LP steam flowr rate";
        parameter SI.Pressure steamHPNomPressure "Nominal HP steam pressure";
        parameter SI.Pressure steamIPNomPressure 
          "Nominal IP steam pressure (pressure in the reheat)";
        parameter SI.Pressure steamLPNomPressure "Nominal LP steam pressure";
        parameter SI.Area HPT_Kt "Flow coefficient"           annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "HP Turbine"));
        parameter SI.Area IPT_Kt "Flow coefficient"           annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "IP Turbine"));
        parameter SI.Area LPT_Kt "Flow coefficient"           annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "LP Turbine"));
        
        //Start value
        parameter Boolean SSInit=false "Steady-state initialization" 
                                       annotation (Dialog(tab = "Initialization"));
        //HPT
        parameter SI.Pressure HPT_pstart_in = steamHPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.Pressure HPT_pstart_out = steamIPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.MassFlowRate HPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_out 
          "Outlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        //IPT
        parameter SI.Pressure IPT_pstart_in = steamIPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.Pressure IPT_pstart_out = steamLPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.MassFlowRate IPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.SpecificEnthalpy IPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.SpecificEnthalpy IPT_hstart_out 
          "Outlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        //LPT
        parameter SI.Pressure LPT_pstart_in = steamLPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.Pressure LPT_pstart_out = pcond 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.MassFlowRate LPT_wstart = steamLPNomFlowRate + steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_out 
          "Outlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        
        //other parameter
        parameter SI.Pressure pcond "Condenser pressure";
        
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[-160,198; -160,30],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,200; -40,30],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 80,-100; 80,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,64; 20,140; 80,140; 80,198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[80,-100; 80,-198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2))), Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeA HPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-180,180; -140,220]);
        Water.FlangeB HPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[-120,180; -80,220]);
        Water.FlangeA IPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-60,180; -20,220]);
        Water.FlangeA LPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[60,180; 100,220]);
        Water.FlangeB LPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[60,-220; 100,-180]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end ST_2LRh;
      
      partial model ST_3LRh 
        "Base class for Steam Turbine with three pressure levels and reheat" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Turbines parameter
        parameter SI.MassFlowRate steamHPNomFlowRate 
          "Nominal HP steam flow rate";
        parameter SI.MassFlowRate steamIPNomFlowRate 
          "Nominal IP steam flow rate";
        parameter SI.MassFlowRate steamLPNomFlowRate 
          "Nominal LP steam flowr rate";
        parameter SI.Pressure steamHPNomPressure "Nominal HP steam pressure";
        parameter SI.Pressure steamIPNomPressure "Nominal IP steam pressure";
        parameter SI.Pressure steamLPNomPressure "Nominal LP steam pressure";
        parameter SI.Area HPT_Kt "Flow coefficient"           annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "HP Turbine"));
        parameter SI.Area IPT_Kt "Flow coefficient"           annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "IP Turbine"));
        parameter SI.Area LPT_Kt "Flow coefficient"           annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "LP Turbine"));
        
        //Start value
        parameter Boolean SSInit=false "Steady-state initialization" 
                                       annotation (Dialog(tab = "Initialization"));
        //HPT
        parameter SI.Pressure HPT_pstart_in = steamHPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.Pressure HPT_pstart_out = steamIPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.MassFlowRate HPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_out 
          "Outlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        //IPT
        parameter SI.Pressure IPT_pstart_in = steamIPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.Pressure IPT_pstart_out = steamLPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.MassFlowRate IPT_wstart = steamIPNomFlowRate + steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.SpecificEnthalpy IPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.SpecificEnthalpy IPT_hstart_out 
          "Outlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        //LPT
        parameter SI.Pressure LPT_pstart_in = steamLPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.Pressure LPT_pstart_out = pcond 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.MassFlowRate LPT_wstart = steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_out 
          "Outlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        
        //Other parameter
        parameter SI.Pressure pcond "Condenser pressure";
        
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-202,14; 200,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 20,-100; 20,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[80,30; 80,-30; 140,-100; 140,100; 80,30],  style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,30; -40,200],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[80,30; 80,200],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,200; 20,150; -100,150],
                                                style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,100; 20,130; 80,130],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[76,134; 84,126],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[-96,154; -104,146],
                                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[140,-100; 140,-200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-160,30; -160,120; -160,146; -160,204], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1))),
                                Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeA HPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-180,180; -140,220]);
        Water.FlangeB HPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[-120,180; -80,220]);
        Water.FlangeA IPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-60,180; -20,220]);
        Water.FlangeA SteamToMix(            redeclare package Medium = 
              FluidMedium)                   annotation (extent=[0,180; 40,220]);
        Water.FlangeA LPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[60,180; 100,220]);
        Water.FlangeB LPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[120,-220; 160,
              -180]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end ST_3LRh;
      
      partial model ST_2LHU 
        "Base class for Steam Turbine with two pressure levels and with coupling Heat Usage" 
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Turbines parameter  
        parameter SI.MassFlowRate steamHPNomFlowRate 
          "Nominal HP steam flow rate";
        parameter SI.MassFlowRate steamLPNomFlowRate 
          "Nominal LP steam flowr rate";
        parameter SI.Pressure steamHPNomPressure "Nominal HP steam pressure";
        parameter SI.Pressure steamLPNomPressure "Nominal LP steam pressure";
        parameter SI.Area HPT_Kt "Flow coefficient"           annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "HP Turbine"));
        parameter SI.Area LPT_Kt "Flow coefficient"           annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "LP Turbine"));
        
        //Start value
        parameter Boolean SSInit=false "Steady-state initialization" 
                                       annotation (Dialog(tab = "Initialization"));
        //HPT
        parameter SI.Pressure HPT_pstart_in = steamHPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.Pressure HPT_pstart_out = steamLPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.MassFlowRate HPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        //LPT
        parameter SI.Pressure LPT_pstart_in = steamLPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.Pressure LPT_pstart_out = pcond 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.MassFlowRate LPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        
        //other parameter
        parameter SI.Pressure pcond "Condenser pressure";
        
        ThermoPower.Water.FlangeB SteamForHU(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-80,-220; -40,
              -180]);
        ThermoPower.Water.FlangeB LPT_Out(redeclare package Medium = 
              FluidMedium)                annotation (extent=[40,-220; 80,-180]);
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-4,144; 4,136],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-60,-198; -60,-140; 140,-140; 140,140; 0,140],
                                                                  style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-60,100; -60,140; 0,140],
                                                 style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[0,140; 0,198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-120,30; -120,-30; -60,-100; -60,100; -120,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[0,30; 0,-30; 60,-100; 60,100; 0,30],       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-120,32; -120,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[60,-98; 60,-192], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-60,120; 0,120; 0,30], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[-64,124; -56,116],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-6,80; 6,80; -6,60; 6,60; -6,80],      style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255}))),
                                Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeA HPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-140,180; -100,220]);
        Water.FlangeA LPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-20,180; 20,220]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end ST_2LHU;
      
      partial model ST_2LRhHU 
        "Base class for Steam Turbine with two pressure levels, reheat and with coupling Heat Usage" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Turbines parameter
        parameter SI.MassFlowRate steamHPNomFlowRate 
          "Nominal HP steam flow rate";
        parameter SI.MassFlowRate steamLPNomFlowRate 
          "Nominal LP steam flowr rate";
        parameter SI.Pressure steamHPNomPressure "Nominal HP steam pressure";
        parameter SI.Pressure steamLPNomPressure "Nominal LP steam pressure";
        parameter SI.Area HPT_Kt "Flow coefficient"           annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "HP Turbine"));
        parameter SI.Area IPT_Kt "Flow coefficient"           annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "IP Turbine"));
        parameter SI.Area LPT_Kt "Flow coefficient"           annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "LP Turbine"));
        
        //Start value
        parameter Boolean SSInit=false "Steady-state initialization" 
                                       annotation (Dialog(tab = "Initialization"));
        //HPT
        parameter SI.Pressure HPT_pstart_in = steamHPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.Pressure HPT_pstart_out = steamIPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.MassFlowRate HPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        //LPT
        parameter SI.Pressure LPT_pstart_in = steamLPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.Pressure LPT_pstart_out = pcond 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.MassFlowRate LPT_wstart = steamLPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        
        //other parameter
        parameter SI.Pressure pcond "Condenser pressure";
        
        annotation (Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[76,144; 84,136],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,140; 140,140; 140,-140; -40,-140; -40,-198],
                                                                   style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[80,140; 80,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-160,198; -160,30],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,200; -40,30],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 80,-100; 80,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[80,-100; 80,-198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Ellipse(extent=[-104,144; -96,136],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-46,100; -34,100; -46,80; -34,80; -46,100],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255}))),
                                Diagram,
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Water.FlangeB SteamForHU(            redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-60,-220; -20,
              -180]);
        Water.FlangeB LPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[60,-220; 100,-180]);
        Water.FlangeA HPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-180,180; -140,220]);
        Water.FlangeB HPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[-120,180; -80,220]);
        Water.FlangeA IPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-60,180; -20,220]);
        Water.FlangeA LPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[60,180; 100,220]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end ST_2LRhHU;
      
      partial model ST_2LRh_3t 
        "Base class for Steam Turbine with two pressure levels, reheat and three tappings" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Turbines parameter
        parameter SI.MassFlowRate steamHPNomFlowRate 
          "Nominal HP steam flow rate";
        parameter SI.MassFlowRate steamIPNomFlowRate 
          "Nominal IP steam flow rate";
        parameter SI.MassFlowRate steamLPNomFlowRate 
          "Nominal LP steam flowr rate";
        parameter SI.Pressure steamHPNomPressure "Nominal HP steam pressure";
        parameter SI.Pressure steamIPNomPressure "Nominal IP steam pressure";
        parameter SI.Pressure steamLPNomPressure "Nominal LP steam pressure";
        parameter SI.Area HPT_Kt "Flow coefficient"           annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "HP Turbine"));
        parameter SI.Area IPT_Kt "Flow coefficient"           annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "IP Turbine"));
        parameter SI.Area LPT_Kt "Flow coefficient"           annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "LP Turbine"));
        
        //Start value
        //HPT
        parameter SI.Pressure HPT_pstart_in = steamHPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.Pressure HPT_pstart_out = steamIPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.MassFlowRate HPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        //IPT
        parameter SI.Pressure IPT_pstart_in = steamIPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.Pressure IPT_pstart_out = steamLPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.MassFlowRate IPT_wstart = steamIPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.SpecificEnthalpy IPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.SpecificEnthalpy IPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        //LPT
        parameter SI.Pressure LPT_pstart_in = steamLPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.Pressure LPT_pstart_out = pcond 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.MassFlowRate LPT_wstart = steamLPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        
        //other parameter
        parameter SI.Pressure pcond "Condenser pressure";
        
        annotation (Diagram, Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[-160,198; -160,30],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,200; -40,30],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 80,-100; 80,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,64; 20,140; 80,140; 80,198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[80,-100; 80,-198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-130,-66; -130,-200], style(color=3, rgbcolor={0,0,255})),
            Line(points=[-40,-200; -40,-100; -10,-100; -10,-46], style(color=3,
                  rgbcolor={0,0,255})),
            Line(points=[0,-200; 0,-130; 50,-130; 50,-82], style(color=3,
                  rgbcolor={0,0,255}))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        ThermoPower.Water.FlangeB Tap1(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[-140,-210; -120,
              -190]);
        ThermoPower.Water.FlangeB Tap2(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[-50,-210; -30,
              -190]);
        ThermoPower.Water.FlangeB Tap3(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[-10,-210; 10,-190]);
        
        Water.FlangeA HPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-180,180; -140,220]);
        Water.FlangeB HPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[-120,180; -80,220]);
        Water.FlangeA IPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-60,180; -20,220]);
        Water.FlangeA LPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[60,180; 100,220]);
        Water.FlangeB LPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[60,-220; 100,-180]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end ST_2LRh_3t;
      
      partial model ST_3LRh_7t 
        "Base class for Steam Turbine with two pressure levels, reheat and seven tappings" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Turbines parameter
        parameter SI.MassFlowRate steamHPNomFlowRate 
          "Nominal HP steam flow rate";
        parameter SI.MassFlowRate steamIPNomFlowRate 
          "Nominal IP steam flow rate";
        parameter SI.MassFlowRate steamLPNomFlowRate 
          "Nominal LP steam flowr rate";
        parameter SI.Pressure steamHPNomPressure "Nominal HP steam pressure";
        parameter SI.Pressure steamIPNomPressure "Nominal IP steam pressure";
        parameter SI.Pressure steamLPNomPressure "Nominal LP steam pressure";
        parameter SI.Area HPT_Kt "Flow coefficient"           annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "HP Turbine"));
        parameter Real HPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "HP Turbine"));
        parameter SI.Area IPT_Kt "Flow coefficient"           annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "IP Turbine"));
        parameter Real IPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "IP Turbine"));
        parameter SI.Area LPT_Kt "Flow coefficient"           annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_mech=0.98 "Mechanical efficiency"            annotation (Dialog(group = "LP Turbine"));
        parameter Real LPT_eta_iso_nom=0.92 "Nominal isentropic efficiency" 
                                                     annotation (Dialog(group = "LP Turbine"));
        
        //Start value
        //HPT
        parameter SI.Pressure HPT_pstart_in = steamHPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.Pressure HPT_pstart_out = steamIPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.MassFlowRate HPT_wstart = steamHPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        parameter SI.SpecificEnthalpy HPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "HP Turbine"));
        //IPT
        parameter SI.Pressure IPT_pstart_in = steamIPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.Pressure IPT_pstart_out = steamLPNomPressure 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.MassFlowRate IPT_wstart = steamIPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.SpecificEnthalpy IPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        parameter SI.SpecificEnthalpy IPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "IP Turbine"));
        //LPT
        parameter SI.Pressure LPT_pstart_in = steamLPNomPressure 
          "Inlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.Pressure LPT_pstart_out = pcond 
          "Outlet pressure start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.MassFlowRate LPT_wstart = steamLPNomFlowRate 
          "Mass flow rate start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_in 
          "Inlet specific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        parameter SI.SpecificEnthalpy LPT_hstart_out 
          "Outletspecific enthalpy start value" 
           annotation (Dialog(tab = "Initialization",
                              group = "LP Turbine"));
        
        //other parameter
        parameter SI.Pressure pcond "Condenser pressure";
        
        annotation (Diagram, Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-202,14; 200,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 20,-100; 20,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[80,30; 80,-30; 140,-100; 140,100; 80,30],  style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,30; -40,200],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[80,30; 80,200],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,200; 20,150; -100,150],
                                                style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,100; 20,130; 80,130],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[76,134; 84,126],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[-96,154; -104,146],
                                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[140,-100; 140,-200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-160,30; -160,120; -160,146; -160,204], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-170,-200; -170,-108; -140,-108; -140,-52], style(
                  color=3, rgbcolor={0,0,255})),
            Line(points=[-130,-200; -130,-120; -120,-120; -120,-76], style(
                  color=3, rgbcolor={0,0,255})),
            Line(points=[-50,-196; -50,-120; 0,-120; 0,-76], style(color=3,
                  rgbcolor={0,0,255})),
            Line(points=[-90,-198; -90,-108; -20,-108; -20,-54], style(color=3,
                  rgbcolor={0,0,255})),
            Line(points=[70,-198; 70,-150; 124,-150; 124,-78], style(color=3,
                  rgbcolor={0,0,255})),
            Line(points=[30,-194; 30,-140; 110,-140; 110,-64], style(color=3,
                  rgbcolor={0,0,255})),
            Line(points=[-10,-198; -10,-130; 92,-130; 92,-44], style(color=3,
                  rgbcolor={0,0,255}))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        ThermoPower.Water.FlangeB Tap1(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[-180,-210; -160,
              -190]);
        ThermoPower.Water.FlangeB Tap2(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[-140,-210; -120,
              -190]);
        ThermoPower.Water.FlangeB Tap3(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[-100,-210; -80,
              -190]);
        ThermoPower.Water.FlangeB Tap4(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[-60,-210; -40,
              -190]);
        ThermoPower.Water.FlangeB Tap5(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[-20,-210; 0,-190]);
        ThermoPower.Water.FlangeB Tap6(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[20,-210; 40,-190]);
        ThermoPower.Water.FlangeB Tap7(redeclare package Medium = FluidMedium) 
                                          annotation (extent=[60,-210; 80,-190]);
        
        Water.FlangeA HPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-180,180; -140,220]);
        Water.FlangeB HPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[-120,180; -80,220]);
        Water.FlangeA IPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-60,180; -20,220]);
        Water.FlangeA SteamToMix(            redeclare package Medium = 
              FluidMedium)                   annotation (extent=[0,180; 40,220]);
        Water.FlangeA LPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[60,180; 100,220]);
        Water.FlangeB LPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[120,-220; 160,
              -180]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end ST_3LRh_7t;
      
      partial model Condenser "Base class for condenser" 
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Nominal parameter
        parameter SI.MassFlowRate condNomFlowRate 
          "Nominal flow rate through the condensing fluid side";
        parameter SI.MassFlowRate coolNomFlowRate 
          "Nominal flow rate through the cooling fluid side";
        parameter SI.Pressure condNomPressure 
          "Nominal pressure in the condensing fluid side inlet";
        parameter SI.Pressure coolNomPressure 
          "Nominal pressure in the cooling fluid side inlet";
        
        //Physical Parameter
        parameter Integer N_cool=2 "Number of node of the cooling fluid side";
        parameter SI.Area condExchSurface 
          "Exchange surface between condensing fluid - metal";
        parameter SI.Area coolExchSurface 
          "Exchange surface between metal - cooling fluid";
        parameter SI.Volume condVol "Condensing fluid volume";
        parameter SI.Volume coolVol "Cooling fluid volume";
        parameter SI.Volume metalVol "Volume of the metal part in the tubes";
        parameter SI.SpecificHeatCapacity cm "Specific heat capacity of metal";
        parameter SI.Density rhoMetal "Density of metal";
        
        //Initialization conditions
        parameter Boolean use_T = true 
          "Select: -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the cooling fluid side"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        //Start value
        parameter SI.Pressure pstart_cond = condNomPressure 
          "Condensing fluid pressure start value"                annotation(Dialog(tab = "Initialization"));
        parameter SI.Volume Vlstart_cond = condVol*0.15 
          "Start value of the liquid water volume, condensation side"             annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M_in 
          "Inlet metal wall temperature start value"       annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M_out 
          "Outlet metal wall temperature start value"      annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M[N_cool]=linspace(Tstart_M_in,Tstart_M_out,N_cool) 
          "Start value of metal wall temperature vector (initialized by default)"
                                                                                  annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_cool_in=FluidMedium.temperature_ph(coolNomPressure,hstart_cool_in) 
          "Inlet cooling fluid temperature start value"     annotation(Dialog(enable = use_T,
                                                                              tab = "Initialization"));
        parameter SI.Temperature Tstart_cool_out=FluidMedium.temperature_ph(coolNomPressure,hstart_cool_out) 
          "Outlet cooling fluid temperature start value"    annotation(Dialog(enable = use_T,
                                                                              tab = "Initialization"));
        parameter SI.Temperature Tstart_cool[N_cool]=linspace(Tstart_cool_in,Tstart_cool_out,N_cool) 
          "Start value of cooling fluid temperature vector (initialized by default)"
                                                                          annotation(Dialog(tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_cool_in=FluidMedium.specificEnthalpy_pT(coolNomPressure,Tstart_cool_in) 
          "Inlet cooling fluid specific enthalpy start value"           annotation(Dialog(enable = not use_T,
                                                                                          tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_cool_out=FluidMedium.specificEnthalpy_pT(coolNomPressure,Tstart_cool_out) 
          "Outlet cooling fluid specific enthalpy start value"          annotation(Dialog(enable = not use_T,
                                                                                          tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_cool[N_cool]=linspace(hstart_cool_in,hstart_cool_out,N_cool) 
          "Start value of cooling fluid enthalpy vector (initialized by default)"
                                                                          annotation(Dialog(tab = "Initialization"));
        parameter SI.Pressure pstartin_cool = coolNomPressure 
          "Inlet cooling fluid pressure start value"        annotation(Dialog(tab = "Initialization"));
        parameter SI.Pressure pstartout_cool = coolNomPressure 
          "Outlet cooling fluid pressure start value"        annotation(Dialog(tab = "Initialization"));
        
        ThermoPower.Water.FlangeB waterOut(redeclare package Medium = 
              FluidMedium)                annotation (extent=[-30,-120; 10,-80]);
        ThermoPower.Water.FlangeA coolingIn(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[80,-60; 120,-20]);
        ThermoPower.Water.FlangeB coolingOut(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[80,40; 120,80]);
        annotation (Diagram, Icon(
            Rectangle(extent=[-100,100; 80,-60], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-90,-60; 70,-100],style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[100,-40; -60,-40; 10,10; -60,60; 100,60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Text(
              extent=[-100,-113; 100,-143],
              string="%name",
              style(color=71, rgbcolor={85,170,255}))));
        ThermoPower.Water.FlangeA steamIn(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[-30,80; 10,120]);
        
      end Condenser;
      
      partial model CondPlant_base 
        "Base class for Condensation Plant (simplified version)" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        parameter SI.Pressure p "Pressure of condesation";
        parameter SI.Volume Vtot "Total volume condensing fluid side";
        parameter SI.Volume Vlstart "Start value of the liquid volume";
        
        ThermoPower.Water.FlangeA SteamIn(redeclare package Medium = 
              FluidMedium)                annotation (extent=[-20,80; 20,120]);
        ThermoPower.Water.FlangeB WaterOut(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[-20,-120; 20,-80]);
        Buses.Sensors SensorsBus annotation (extent=[88,-50; 108,-30]);
        Buses.Actuators ActuatorsBus annotation (extent=[108,-82; 88,-62]);
        annotation (Diagram, Icon(Rectangle(extent=[-100,100; 100,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-60,60; 60,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[40,30; -40,30; 38,0; -40,-30; 40,-30], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[0,60; 0,100], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[0,-60; 0,-100], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1))));
        
      end CondPlant_base;
      
      partial model CondPlantHU_base 
        "Base class for Condensation Plant with coupling Heat Usage (simplified version)" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        parameter SI.Pressure p "Pressure of condesation";
        parameter SI.Volume Vtot "Total volume condensing fluid side";
        parameter SI.Volume Vlstart "Start value of the liquid volume";
        
        ThermoPower.Water.FlangeA SteamToHU(redeclare package Medium = 
              FluidMedium)                  annotation (extent=[-68,80; -28,120]);
        ThermoPower.Water.FlangeA SteamIn(redeclare package Medium = 
              FluidMedium)                annotation (extent=[30,80; 70,120]);
        ThermoPower.Water.FlangeB WaterOut(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[-20,-120; 20,-80]);
        Buses.Sensors SensorsBus annotation (extent=[88,-50; 108,-30]);
        Buses.Actuators ActuatorsBus annotation (extent=[108,-82; 88,-62]);
        annotation (Diagram, Icon(Rectangle(extent=[-100,100; 100,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-60,60; 60,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[40,30; -40,30; 38,0; -40,-30; 40,-30], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[0,-60; 0,-98], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-60,0; -80,0; -80,70; -50,70; -50,102], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[0,60; 0,70; 50,70; 50,88], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1))));
        
      end CondPlantHU_base;
      
      partial model CondPlant "Base class for Condensation Plant" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Nominal parameter
        parameter SI.MassFlowRate condNomFlowRate 
          "Nominal flow rate through the condensing fluid side";
        parameter SI.MassFlowRate coolNomFlowRate 
          "Nominal flow rate through the cooling fluid side";
        parameter SI.Pressure condNomPressure 
          "Nominal pressure in the condensing fluid side inlet";
        parameter SI.Pressure coolNomPressure 
          "Nominal pressure in the cooling fluid side inlet";
        
        //Physical Parameter
        parameter Integer N_cool=2 "Number of node of the cooling fluid side";
        parameter SI.Area condExchSurface 
          "Exchange surface between condensing fluid - metal";
        parameter SI.Area coolExchSurface 
          "Exchange surface between metal - cooling fluid";
        parameter SI.Volume condVol "Condensing fluid volume";
        parameter SI.Volume coolVol "Cooling fluid volume";
        parameter SI.Volume metalVol "Volume of the metal part in the tubes";
        parameter SI.SpecificHeatCapacity cm "Specific heat capacity of metal";
        parameter SI.Density rhoMetal "Density of metal";
        
        //Initialization conditions
        parameter Boolean use_T = true 
          "Select: -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the cooling fluid side"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        //Start value
        parameter SI.Pressure pstart_cond = condNomPressure 
          "Condensing fluid pressure start value"                annotation(Dialog(tab = "Initialization"));
        parameter SI.Volume Vlstart_cond = condVol*0.15 
          "Start value of the liquid water volume, condensation side"             annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M_in 
          "Inlet metal wall temperature start value"       annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M_out 
          "Outlet metal wall temperature start value"      annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_cool_in=FluidMedium.temperature_ph(coolNomPressure,hstart_cool_in) 
          "Inlet cooling fluid temperature start value"     annotation(Dialog(enable = use_T,
                                                                              tab = "Initialization"));
        parameter SI.Temperature Tstart_cool_out=FluidMedium.temperature_ph(coolNomPressure,hstart_cool_out) 
          "Outlet cooling fluid temperature start value"    annotation(Dialog(enable = use_T,
                                                                              tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_cool_in=FluidMedium.specificEnthalpy_pT(coolNomPressure,Tstart_cool_in) 
          "Inlet cooling fluid specific enthalpy start value"           annotation(Dialog(enable = not use_T,
                                                                                          tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_cool_out=FluidMedium.specificEnthalpy_pT(coolNomPressure,Tstart_cool_out) 
          "Outlet cooling fluid specific enthalpy start value"          annotation(Dialog(enable = not use_T,
                                                                                          tab = "Initialization"));
        
        ThermoPower.Water.FlangeA SteamIn(redeclare package Medium = 
              FluidMedium)                annotation (extent=[-10,90; 10,110]);
        ThermoPower.Water.FlangeB WaterOut(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[-10,-110; 10,-90]);
        Buses.Sensors SensorsBus annotation (extent=[88,-50; 108,-30]);
        Buses.Actuators ActuatorsBus annotation (extent=[108,-82; 88,-62]);
        annotation (Diagram, Icon(Rectangle(extent=[-100,100; 100,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-60,60; 60,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[40,30; -40,30; 38,0; -40,-30; 40,-30], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[0,60; 0,100], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[0,-60; 0,-100], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1))));
        
      end CondPlant;
      
      partial model CondPlantHU 
        "Base class for Condensation Plant with coupling Heat Usage" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Nominal parameter
        parameter SI.MassFlowRate condNomFlowRate 
          "Nominal flow rate through the condensing fluid side";
        parameter SI.MassFlowRate coolNomFlowRate 
          "Nominal flow rate through the cooling fluid side";
        parameter SI.Pressure condNomPressure 
          "Nominal pressure in the condensing fluid side inlet";
        parameter SI.Pressure coolNomPressure 
          "Nominal pressure in the cooling fluid side inlet";
        
        //Physical Parameter
        parameter Integer N_cool=2 "Number of node of the cooling fluid side";
        parameter SI.Area condExchSurface 
          "Exchange surface between condensing fluid - metal";
        parameter SI.Area coolExchSurface 
          "Exchange surface between metal - cooling fluid";
        parameter SI.Volume condVol "Condensing fluid volume";
        parameter SI.Volume coolVol "Cooling fluid volume";
        parameter SI.Volume metalVol "Volume of the metal part in the tubes";
        parameter SI.SpecificHeatCapacity cm "Specific heat capacity of metal";
        parameter SI.Density rhoMetal "Density of metal";
        
        //Initialization conditions
        parameter Boolean use_T = true 
          "Select: -true- to insert the initial temperature or -false- to insert the initial specifc enthalpy of the cooling fluid side"
           annotation(Dialog(tab = "Initialization Conditions"));
        parameter Boolean SSInit = false "Steady-state initialization" annotation(Dialog(tab = "Initialization Conditions"));
        //Start value
        parameter SI.Pressure pstart_cond = condNomPressure 
          "Condensing fluid pressure start value"                annotation(Dialog(tab = "Initialization"));
        parameter SI.Volume Vlstart_cond = condVol*0.15 
          "Start value of the liquid water volume, condensation side"             annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M_in 
          "Inlet metal wall temperature start value"       annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_M_out 
          "Outlet metal wall temperature start value"      annotation(Dialog(tab = "Initialization"));
        parameter SI.Temperature Tstart_cool_in=FluidMedium.temperature_ph(coolNomPressure,hstart_cool_in) 
          "Inlet cooling fluid temperature start value"     annotation(Dialog(enable = use_T,
                                                                              tab = "Initialization"));
        parameter SI.Temperature Tstart_cool_out=FluidMedium.temperature_ph(coolNomPressure,hstart_cool_out) 
          "Outlet cooling fluid temperature start value"    annotation(Dialog(enable = use_T,
                                                                              tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_cool_in=FluidMedium.specificEnthalpy_pT(coolNomPressure,Tstart_cool_in) 
          "Inlet cooling fluid specific enthalpy start value"           annotation(Dialog(enable = not use_T,
                                                                                          tab = "Initialization"));
        parameter SI.SpecificEnthalpy hstart_cool_out=FluidMedium.specificEnthalpy_pT(coolNomPressure,Tstart_cool_out) 
          "Outlet cooling fluid specific enthalpy start value"          annotation(Dialog(enable = not use_T,
                                                                                          tab = "Initialization"));
        
        ThermoPower.Water.FlangeA SteamToHU(redeclare package Medium = 
              FluidMedium)                  annotation (extent=[-60,90; -40,110]);
        ThermoPower.Water.FlangeA SteamIn(redeclare package Medium = 
              FluidMedium)                annotation (extent=[40,90; 60,110]);
        ThermoPower.Water.FlangeB WaterOut(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[-10,-110; 10,-90]);
        Buses.Sensors SensorsBus annotation (extent=[88,-50; 108,-30]);
        Buses.Actuators ActuatorsBus annotation (extent=[108,-82; 88,-62]);
        annotation (Diagram, Icon(Rectangle(extent=[-100,100; 100,-100], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-60,60; 60,-60], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[40,30; -40,30; 38,0; -40,-30; 40,-30], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[0,-60; 0,-98], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-60,0; -80,0; -80,80; -50,80; -50,102], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[0,60; 0,80; 50,80; 50,98], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1))));
        
      end CondPlantHU;
      
      partial model STGroup2L 
        "Base class for Steam Turbine Group with two pressure levels" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram, Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-120,30; -120,-30; -60,-100; -60,100; -120,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[0,30; 0,-30; 60,-100; 60,100; 0,30],       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[0,30; 0,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-120,30; -120,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Rectangle(extent=[46,-162; 74,-170],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[60,-126; 60,-98], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[40,-126; 80,-166],   style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[70,-136; 50,-136; 70,-146; 50,-156; 70,-156; 70,-156],
                         style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[60,-170; 60,-180; 140,-180; 140,-14], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[140,14; 140,196], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        ThermoPower.Water.FlangeA From_SH_HP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-140,180; -100,
              220]);
        ThermoPower.Water.FlangeA From_SH_LP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-20,180; 20,
              220]);
        ThermoPower.Water.FlangeB WaterOut(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[120,180; 160,220]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end STGroup2L;
      
      partial model STGroup2LRh 
        "Base class for Steam Turbine Group with two pressure levels and reheat" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram, Icon(Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[-160,198; -160,30],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,200; -40,30],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 80,-100; 80,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,64; 20,140; 80,140; 80,198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Rectangle(extent=[66,-162; 94,-170],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[80,-128; 80,-100], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[60,-126; 100,-166],  style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[90,-136; 70,-136; 90,-146; 70,-156; 90,-156; 90,-156],
                         style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[80,-170; 80,-180; 160,-180; 160,-14], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[160,14; 160,196], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        ThermoPower.Water.FlangeA From_SH_HP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-180,180; -140,
              220]);
        ThermoPower.Water.FlangeB To_RH_IP(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[-120,180; -80,
              220]);
        ThermoPower.Water.FlangeA From_RH_IP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-60,180; -20,
              220]);
        ThermoPower.Water.FlangeA From_SH_LP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[60,180; 100,
              220]);
        ThermoPower.Water.FlangeB WaterOut(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[140,180; 180,220]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end STGroup2LRh;
      
      partial model STGroup3LRh 
        "Base class for Steam Turbine Group with three pressure levels and reheat" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram, Icon(Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-202,14; 200,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 20,-100; 20,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[80,30; 80,-30; 140,-100; 140,100; 80,30],  style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,30; -40,200],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[80,30; 80,200],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,200; 20,150; -100,150],
                                                style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,100; 20,130; 80,130],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[76,134; 84,126],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[-96,154; -104,146],
                                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-160,30; -160,120; -160,146; -160,204], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Rectangle(extent=[106,-162; 134,-170],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[100,-126; 140,-166], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[130,-136; 110,-136; 130,-146; 110,-156; 130,-156; 130,
                  -156], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[120,-168; 120,-180; 160,-180; 160,-14], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[140,-100; 140,-110; 120,-110; 120,-126], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[160,14; 160,196], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        ThermoPower.Water.FlangeA From_SH_IP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[0,180; 40,220]);
        Water.FlangeA From_SH_HP(            redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-180,180; -140,
              220]);
        Water.FlangeB To_RH_IP(            redeclare package Medium = 
              FluidMedium)                 annotation (extent=[-120,180; -80,
              220]);
        Water.FlangeA From_RH_IP(            redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-60,180; -20,
              220]);
        Water.FlangeA From_SH_LP(            redeclare package Medium = 
              FluidMedium)                   annotation (extent=[60,180; 100,
              220]);
        Water.FlangeB WaterOut(            redeclare package Medium = 
              FluidMedium)                 annotation (extent=[140,180; 180,220]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end STGroup3LRh;
      
      partial model STGroup3LRh_is 
        "Base class for Steam Turbine Group with three pressure levels and reheat, ideal sink of steam included" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram, Icon(Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-202,14; 200,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 20,-100; 20,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[80,30; 80,-30; 140,-100; 140,100; 80,30],  style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,30; -40,200],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[80,30; 80,200],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,200; 20,150; -100,150],
                                                style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[20,100; 20,130; 80,130],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[76,134; 84,126],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[-96,154; -104,146],
                                             style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[126,-172; 154,-180],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[120,-136; 160,-176], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[150,-146; 130,-146; 150,-156; 130,-166; 150,-166; 150,
                  -166], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Line(points=[140,-100; 140,-136], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Line(points=[-160,30; -160,120; -160,146; -160,204], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        ThermoPower.Water.FlangeA From_SH_HP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-180,180; -140,
              220]);
        ThermoPower.Water.FlangeB To_RH_IP(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[-120,180; -80,
              220]);
        ThermoPower.Water.FlangeA From_RH_IP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-60,180; -20,
              220]);
        ThermoPower.Water.FlangeA From_SH_IP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[0,180; 40,220]);
        ThermoPower.Water.FlangeA From_SH_LP(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[60,180; 100,
              220]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        ThermoPower.PowerPlants.Buses.Sensors SensorsBus 
                                 annotation (extent=[180,-100; 220,-60]);
        ThermoPower.PowerPlants.Buses.Actuators ActuatorsBus 
                                     annotation (extent=[220,-160; 180,-120]);
        
      end STGroup3LRh_is;
      
      partial model STGroup2LHU 
        "Base class for Steam Turbine Group with two pressure levels and coupling Heat Usage" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram, Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[-4,144; 4,136],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-60,-198; -60,-120; 100,-120; 100,140; 0,140],
                                                                  style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-60,100; -60,140; 0,140],
                                                 style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[0,140; 0,198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-120,30; -120,-30; -60,-100; -60,100; -120,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[0,30; 0,-30; 60,-100; 60,100; 0,30],       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-120,32; -120,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-60,120; 0,120; 0,30], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[-64,124; -56,116],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[46,-168; 74,-176],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[60,-134; 60,-100],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[40,-132; 80,-172],   style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[70,-142; 50,-142; 70,-152; 50,-162; 70,-162; 70,-162],
                         style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[136,-136; 144,-144],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[140,-140; 140,-198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[140,-140; 140,-14], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[140,14; 140,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[60,-176; 60,-186; 110,-186; 110,-140; 140,-140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Polygon(points=[-6,80; 6,80; -6,60; 6,60; -6,80],      style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255}))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        ThermoPower.Water.FlangeB WaterOut(redeclare package Medium = 
              FluidMedium)                 annotation (extent=[120,180; 160,220]);
        ThermoPower.Water.FlangeA WaterFromHU(redeclare package Medium = 
              FluidMedium)                    annotation (extent=[120,-220; 160,
              -180]);
        ThermoPower.Water.FlangeB SteamForHU(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-80,-220; -40,
              -180]);
        Water.FlangeA HPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-140,180; -100,220]);
        Water.FlangeA LPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-20,180; 20,220]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end STGroup2LHU;
      
      partial model STGroup2LRhHU 
        "Base class for Steam Turbine Group with two pressure levels and reheat, and with coupling Heat Usage" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram, Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Ellipse(extent=[76,144; 84,136],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,140; 120,140; 120,-120; -40,-120; -40,-200],
                                                                   style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[80,140; 80,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-160,198; -160,30],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-100,200; -100,100],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[-40,200; -40,30],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[-200,14; 202,-14],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Polygon(points=[-160,30; -160,-30; -100,-100; -100,100; -160,30],
                                                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Polygon(points=[-40,30; -40,-30; 80,-100; 80,100; -40,30], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Ellipse(extent=[-104,144; -96,136],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Rectangle(extent=[66,-168; 94,-176],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[80,-134; 80,-100],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[60,-132; 100,-172],  style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[90,-142; 70,-142; 90,-152; 70,-162; 90,-162; 90,-162],
                         style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[156,-136; 164,-144],
                                           style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)),
            Line(points=[160,-140; 160,-198], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[160,-140; 160,-14], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[80,-176; 80,-186; 130,-186; 130,-140; 160,-140], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[160,14; 160,200], style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Polygon(points=[-46,80; -34,80; -46,60; -34,60; -46,80],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255}))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        ThermoPower.Water.FlangeB SteamForHU(redeclare package Medium = 
              FluidMedium)                   annotation (extent=[-58,-220; -18,
              -180]);
        ThermoPower.Water.FlangeA WaterFromHU(redeclare package Medium = 
              FluidMedium)                    annotation (extent=[140,-220; 180,
              -180]);
        Water.FlangeB WaterOut(            redeclare package Medium = 
              FluidMedium)                 annotation (extent=[140,180; 180,220]);
        Water.FlangeA HPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-180,180; -140,220]);
        Water.FlangeB HPT_Out(            redeclare package Medium = 
              FluidMedium)                annotation (extent=[-120,180; -80,220]);
        Water.FlangeA IPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[-60,180; -20,220]);
        Water.FlangeA LPT_In(            redeclare package Medium = FluidMedium)
                                         annotation (extent=[60,180; 100,220]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b Shaft_b 
          annotation (extent=[180,-20; 220,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a Shaft_a 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-100; 220,-60]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-160; 180,-120]);
      end STGroup2LRhHU;
    end Interfaces;
    
    package Components 
      
      model Condenser "Condenser" 
        extends Interfaces.Condenser(pstartout_cool=coolNomPressure-dpnom_cool);
        parameter SI.CoefficientOfHeatTransfer gamma_cond 
          "Coefficient of heat transfer on condensation surfaces";
        parameter SI.CoefficientOfHeatTransfer gamma_cool 
          "Coefficient of heat transfer of cooling fluid side";
        parameter Choices.Flow1D.FFtypes.Temp FFtype_cool = Choices.Flow1D.FFtypes.NoFriction 
          "Friction Factor Type";
        parameter Choices.Flow1D.HCtypes.Temp HCtype_cool = Choices.Flow1D.HCtypes.Downstream 
          "Location of the hydraulic capacitance";
        parameter SI.Pressure dpnom_cool=0 
          "Nominal pressure drop (friction term only!)";
        parameter Density rhonom_cool=0 "Nominal inlet density";
        
        //other data
        constant Real pi=Modelica.Constants.pi;
        
        Water.Flow1D flowCooling(
          Nt=1,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          L=coolExchSurface^2/(coolVol*pi*4),
          A=(coolVol*4/coolExchSurface)^2/4*pi,
          omega=coolVol*4/coolExchSurface*pi,
          Dhyd=coolVol*4/coolExchSurface,
          wnom=coolNomFlowRate,
          pstartin=pstartin_cool,
          pstartout=pstartout_cool,
          hstart=hstart_cool,
          N=N_cool,
          FFtype=FFtype_cool,
          dpnom=dpnom_cool,
          rhonom=rhonom_cool,
          HydraulicCapacitance=HCtype_cool,
          hstartin=hstart_cool_in,
          hstartout=hstart_cool_out) 
                            annotation (extent=[10,-2; 30,22],
          rotation=90);
        Thermal.ConvHT convHT(
          Tstart1=Tstart_M,
          gamma=gamma_cool,
          N=N_cool,
          Tstart2=Tstart_cool,
          Tstart11=Tstart_M_in,
          Tstart1N=Tstart_M_out,
          Tstart21=Tstart_cool_in,
          Tstart2N=Tstart_cool_out) 
          annotation (extent=[-32,0; -12,20],rotation=90);
        CondenserShell condenserShell(
          redeclare package Medium = FluidMedium,
          V=condVol,
          Mm=metalVol*rhoMetal,
          Ac=condExchSurface,
          Af=coolExchSurface,
          cm=cm,
          hc=gamma_cond,
          Nc=N_cool,
          pstart=pstart_cond,
          Vlstart=Vlstart_cond,
          initOpt=if SSInit then Options.steadyState else Options.noInit) 
          annotation (extent=[-66,-6; -34,26]);
        annotation (Diagram, Icon);
        Modelica.Blocks.Interfaces.RealOutput ratio_VvonVtot 
          annotation (extent=[-110,0; -90,20], rotation=180);
      equation 
        connect(flowCooling.infl, coolingIn) 
          annotation (points=[20,-2; 20,-40; 100,-40],
                                                  style(thickness=2));
        connect(flowCooling.outfl, coolingOut) 
          annotation (points=[20,22; 20,60; 100,60],style(thickness=2));
        connect(convHT.side2,flowCooling. wall) annotation (points=[-18.9,10;
              15,10],
                   style(color=45, rgbcolor={255,127,0}));
        connect(condenserShell.steam, steamIn) 
          annotation (points=[-50,26; -50,100; -10,100],
                                                     style(thickness=2));
        connect(condenserShell.condensate, waterOut) 
          annotation (points=[-50,-6; -50,-100; -10,-100],
                                                      style(thickness=2));
        connect(condenserShell.coolingFluid,convHT. side1) annotation (points=[-50,10;
              -25,10],       style(color=45, rgbcolor={255,127,0}));
        connect(condenserShell.ratio_VvVtot, ratio_VvonVtot) annotation (points=[-61.2,10;
              -100,10],          style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end Condenser;
      
      model CondenserPreP "Ideal condenser with prescribed pressure" 
        replaceable package Medium = Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialMedium "Medium model";
        //Parameters
        parameter SI.Pressure p "Nominal inlet pressure";
        parameter SI.Volume Vtot = 10 "Total volume of the fluid side";
        parameter SI.Volume Vlstart = 0.15*Vtot 
          "Start value of the liquid water volume";
        
        //Variable
        SI.Density rhol "Density of saturated liquid";
        SI.Density rhov "Density of saturated steam";
        Medium.SaturationProperties sat "Saturation properties";
        Medium.SpecificEnthalpy hl "Specific enthalpy of saturated liquid";
        SI.Mass M "Total mass, steam+liquid";
        SI.Mass Ml "Liquid mass";
        SI.Mass Mv "Steam mass";
        SI.Volume Vl(start=Vlstart) "Liquid volume";
        SI.Volume Vv "Steam volume";
        SI.Energy E "Internal energy";
        SI.Power Q "Thermal power";
        
        //Connectors
        Water.FlangeA steamIn( redeclare package Medium = Medium) 
                       annotation (extent=[-20,80; 20,120]);
        Water.FlangeB waterOut( redeclare package Medium = Medium) annotation (extent=[-20,-120;
              20,-80]);
        Modelica.Blocks.Interfaces.RealOutput Qcond annotation (extent=[-110,30;
              -90,50], rotation=180);
        Modelica.Blocks.Interfaces.RealOutput ratio_Vv_Vtot 
          annotation (extent=[-110,-30; -90,-10],rotation=180);
        annotation (
          Icon(
            Rectangle(extent=[-90,100; 90,-60], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-80,-60; 80,-100],style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[60,-40; -60,-40; 30,10; -60,60; 60,60],   style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2))),
          Diagram);
        
      equation 
        steamIn.p = p;
        steamIn.hAB = hl;
        sat.psat = p;
        sat.Tsat = Medium.saturationTemperature(p);
        hl = Medium.bubbleEnthalpy(sat);
        waterOut.p = p;
        waterOut.hBA = hl;
        rhol = Medium.bubbleDensity(sat);
        rhov = Medium.density_ph(steamIn.p,steamIn.hBA);
        
        Ml = Vl*rhol;
        Mv = Vv*rhov;
        Vtot= Vv+Vl;
        M = Ml + Mv;
        E = Ml*hl + Mv*steamIn.hBA - p*Vtot;
        
        //Energy and Mass Bilances 
        der(M) = steamIn.w + waterOut.w;
        der(E) = steamIn.w*steamIn.hBA + waterOut.w*hl - Q;
        
        //Output signal
        ratio_Vv_Vtot=Vv/Vtot;
        Qcond = Q;
        
      end CondenserPreP;
      
      model CondenserPreP_tap 
        "Ideal condenser with prescribed pressure and external tapping for ratio control" 
        replaceable package Medium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialTwoPhaseMedium;
        parameter SI.Pressure p "Nominal inlet pressure";
        parameter SI.Volume Vtot = 10 "Total volume of the fluid side";
        parameter SI.Volume Vlstart = 0.15*Vtot;
        
        SI.Density rhol "Density of saturated liquid";
        SI.Density rhov "Density of saturated steam";
        Medium.SaturationProperties sat "Saturation properties";
        Medium.SpecificEnthalpy hl "Specific enthalpy of saturated liquid";
        
        SI.Mass M "Total mass, steam+liquid";
        SI.Mass Ml "Liquid mass";
        SI.Mass Mv "Steam mass";
        SI.Volume Vl(start=Vlstart) "Liquid volume";
        SI.Volume Vv "Steam volume";
        SI.Energy E "Internal energy";
        SI.Power Q "Thermal power";
        
        Water.FlangeA steamIn( redeclare package Medium = Medium) 
                       annotation (extent=[-20,80; 20,120]);
        Water.FlangeB waterOut( redeclare package Medium = Medium) annotation (extent=[-20,-120;
              20,-80]);
        Modelica.Blocks.Interfaces.RealOutput Qcond annotation (extent=[-110,30;
              -90,50], rotation=180);
        Modelica.Blocks.Interfaces.RealOutput ratio_Vv_Vtot 
          annotation (extent=[-110,-30; -90,-10],rotation=180);
        Water.FlangeA tapWater(redeclare package Medium = Medium) 
                       annotation (extent=[-90,-90; -70,-70]);
        annotation (
          Icon(
            Rectangle(extent=[-90,100; 90,-60], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-80,-60; 80,-100],style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Line(points=[60,-40; -60,-40; 30,10; -60,60; 60,60],   style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2))),
          Diagram);
        
      equation 
        steamIn.p = p;
        steamIn.hAB = hl;
        sat.psat = p;
        sat.Tsat = Medium.saturationTemperature(p);
        hl = Medium.bubbleEnthalpy(sat);
        waterOut.p = p;
        waterOut.hBA = hl;
        rhol = Medium.bubbleDensity(sat);
        rhov = Medium.density_ph(steamIn.p,steamIn.hBA);
        
        hl=tapWater.hAB;
        tapWater.p=p;
        
        Ml = Vl*rhol;
        Mv = Vv*rhov;
        Vtot= Vv + Vl;
        M = Ml + Mv;
        E = Ml*hl + Mv*steamIn.hBA - p*Vtot;
        
        //Energy and Mass Bilances 
        der(M) = steamIn.w + (waterOut.w + tapWater.w);
        der(E) = steamIn.w*steamIn.hBA + (waterOut.w + tapWater.w)*hl - Q;
        
        //Output signal
        ratio_Vv_Vtot = Vv/Vtot;
        Qcond = Q;
        
      end CondenserPreP_tap;
      
      model CondenserShell 
        replaceable package Medium = 
            Modelica.Media.Interfaces.PartialTwoPhaseMedium "Medium model";
        parameter SI.Volume V "Total volume of condensation cavity";
        parameter SI.Mass Mm "Total mass of shell and tubes";
        parameter SI.Area Ac "Area of condensation surfaces";
        parameter SI.Area Af "Area of contact with the cooling fluid";
        parameter SI.CoefficientOfHeatTransfer hc 
          "Coefficient of heat transfer on condensation surfaces";
        parameter SI.SpecificHeatCapacity cm 
          "Specific heat capacity of the metal";
        parameter Integer Nc = 2 "Number of nodes for coolingFluid connector";
        parameter SI.Pressure pstart "Pressure start value" 
          annotation(Dialog(tab = "Initialisation"));
        parameter SI.Volume Vlstart "Start value of the liquid water volume" 
          annotation(Dialog(tab = "Initialisation"));
        parameter ThermoPower.Choices.Init.Options.Temp initOpt=ThermoPower.Choices.Init.Options.noInit 
          "Initialisation option" annotation(Dialog(tab = "Initialisation"));
        
        SI.Mass Ml "Liquid water mass";
        SI.Mass Mv "Steam mass";
        SI.Mass M "Total liquid+steam mass";
        SI.Energy E "Total liquid+steam energy";
        SI.Energy Em "Total energy of metal masses";
        SI.Volume Vl(start=Vlstart, stateSelect = StateSelect.prefer) 
          "Liquid water total volume";
        SI.Volume Vv "Steam volume";
        Medium.SaturationProperties sat "Saturation properties";
        Medium.AbsolutePressure p(start=pstart,stateSelect=StateSelect.prefer) 
          "Drum pressure";
        Medium.MassFlowRate ws "Steam mass flowrate";
        Medium.MassFlowRate wc "Condensate mass flowrate";
        SI.HeatFlowRate Qcool "Heat flow from the metal to the cooling fluid";
        SI.HeatFlowRate Qcond 
          "Heat flow from the condensing fluid to the metal";
        Medium.SpecificEnthalpy hs "Specific enthalpy of entering steam";
        Medium.SpecificEnthalpy hl "Specific enthalpy of saturated liquid";
        Medium.SpecificEnthalpy hv "Specific enthalpy of saturated steam";
        Medium.Temperature Ts "Saturation temperature";
        Medium.Temperature Tm(start = Medium.saturationTemperature(pstart), stateSelect = StateSelect.prefer) 
          "Average temperature of metal walls";
        Medium.Density rhol "Density of saturated liquid";
        Medium.Density rhov "Density of saturated steam";
        
        ThermoPower.Water.FlangeA steam(redeclare package Medium = Medium) 
                                        annotation (extent=[-20,80; 20,120]);
        ThermoPower.Water.FlangeB condensate(redeclare package Medium = Medium) 
                                             annotation (extent=[-20,-120; 20,-80]);
        ThermoPower.Thermal.DHT coolingFluid(N=Nc) annotation (extent=[-6,-40; 6,40]);
        annotation (Diagram, Icon(
            Rectangle(extent=[-54,88; -14,-86],style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Rectangle(extent=[-14,88; -6,-86],  style(
                color=10,
                rgbcolor={135,135,135},
                fillColor=10,
                rgbfillColor={135,135,135})),
            Rectangle(extent=[6,88; 14,-86],  style(
                color=10,
                rgbcolor={135,135,135},
                fillColor=10,
                rgbfillColor={135,135,135})),
            Rectangle(extent=[14,88; 54,-86],  style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255})),
            Rectangle(extent=[-54,88; 54,-86], style(
                color=10,
                rgbcolor={135,135,135},
                thickness=4)),
            Text(
              extent=[-102,-130; 108,-148],
              style(color=3, rgbcolor={0,0,255}),
              string="%name")));
        Modelica.Blocks.Interfaces.RealOutput ratio_VvVtot 
          annotation (extent=[-90,-20; -50,20], rotation=180);
      equation 
        Ml=Vl*rhol "Mass of liquid";
        Mv=Vv*rhov "Mass of vapour";
        M=Ml+Mv "Total mass";
        V = Vl + Vv "Total volume";
        E=Ml*hl+Mv*hv-p*V "Total liquid+steam energy";
        Em = Mm*cm*Tm "Metal tubes energy";
        der(M) = ws - wc "Mass balance";
        der(E) = ws*hs - wc*hl - Qcond "Energy balance (liquid+steam)";
        der(Em) = Qcond - Qcool "Energy balance (metal tubes)";
        Qcond = hc*Ac*(Ts - Tm);
        
        // Boundary conditions
        p = steam.p;
        p = condensate.p;
        ws = steam.w;
        hs = steam.hBA "Flow reversal not supported";
        steam.hAB = hv;
        wc = -condensate.w;
        condensate.hBA = hl;
        Qcool = -Af/Nc*sum(coolingFluid.phi);
        coolingFluid.T = ones(Nc)*Tm;
        
        // Fluid properties
        // sat = Medium.setSat_p(p);
        
        sat.psat = p;
        sat.Tsat = Medium.saturationTemperature(p);
        
        Ts = sat.Tsat;
        rhol=Medium.bubbleDensity(sat);
        rhov=Medium.dewDensity(sat);
        hl=Medium.bubbleEnthalpy(sat);
        hv=Medium.dewEnthalpy(sat);
        ratio_VvVtot=Vv/V;
      initial equation 
        if initOpt == ThermoPower.Choices.Init.Options.noInit then
          // do nothing
        elseif initOpt == ThermoPower.Choices.Init.Options.steadyState then
          der(M) = 0;
          der(E) = 0;
        else
          assert(false, "Unsupported initialisation option");
        end if;
      end CondenserShell;
      
      model SteamTurbineVarEta "Steam turbine with variable efficiency" 
        extends ThermoPower.Water.SteamTurbineBase;
        
        //Parameter
        parameter SI.Area Kt "Kt coefficient of Stodola's law";
        replaceable function curveEta_iso = Functions.curveEfficiency extends 
          ThermoPower.PowerPlants.SteamTurbineGroup.Functions 
          "Characteristich curve of efficiency";
        parameter Real eta_iso_nom=0.92 "Nominal isentropic efficiency";
        parameter Real x=0.5 "Degree of reaction";
        parameter Length Rm "Mean ray";
        parameter Integer n "Number of stages";
        
        //Variable
        Real y "Ratio uf/wiso";
        Real uf "Mean peripheral velocity of the rotor";
        Real viso "Mean velocity of the fluid in isentropic conditions";
        
      equation 
        w = Kt*partialArc*sqrt(steam_in.p*steam_in.d)*ThermoPower.Functions.sqrtReg(1-(1/PR)^2) 
          "Stodola's law";
        
        uf=omega*Rm;
        viso=sqrt(2*(hin-hiso)/n);
        y=uf/viso;
        eta_iso = curveEta_iso(eta_iso_nom, y, x) "Variable efficiency";
      end SteamTurbineVarEta;
      
      model SteamTurbine_1tapping "Turbine with one tapping" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        //Turbines parameters
        parameter SI.MassFlowRate wn "Inlet nominal flowrate";
        parameter SI.Area Kt "Coefficient of Stodola's law";
        
        //Start Value
        parameter SI.Pressure pstart_in "Inlet pressure start value" 
            annotation (Dialog(tab= "Initialization"));
        parameter SI.Pressure pstart_tap "Tapping pressure start value" 
            annotation (Dialog(tab= "Initialization"));
        parameter SI.Pressure pstart_out "Outlet pressure start value" 
            annotation (Dialog(tab= "Initialization"));
        parameter SI.MassFlowRate wstart "Mass flow rate start value" 
            annotation (Dialog(tab= "Initialization"));
        parameter SI.SpecificEnthalpy hstartin "Inlet enthalpy start value," 
            annotation (Dialog(tab= "Initialization"));
        parameter SI.SpecificEnthalpy hstarttap "Tapping enthalpy start value,"
            annotation (Dialog(tab= "Initialization"));
        parameter SI.SpecificEnthalpy hstartout "Outlet enthalpy start value" 
            annotation (Dialog(tab= "Initialization"));
        
        annotation (Diagram, Icon(
            Polygon(points=[-26,76; -26,28; -20,28; -20,82; -58,82; -58,76; -26,
                  76],          style(
                color=0,
                fillColor=3,
                thickness=2)),
            Polygon(points=[28,56; 34,56; 34,76; 62,76; 62,82; 28,82; 28,56],
                        style(
                color=0,
                fillColor=3,
                thickness=2)),
            Rectangle(extent=[-58,8; 62,-8],   style(
                color=76,
                gradient=3,
                fillColor=9)),
            Polygon(points=[-26,28; -26,-26; 34,-60; 34,60; -26,28],      style(
                color=0,
                fillColor=3,
                thickness=2,
                fillPattern=1)),
               Text(extent=[-126,136; 132,96],    string="%name"),
            Polygon(points=[2,-78; 4,-78; 4,-42; 2,-42; 2,-78], style(
                color=0,
                rgbcolor={0,0,0},
                fillPattern=1))));
        Modelica.Blocks.Interfaces.RealInput partialArc 
          annotation (extent=[-68,-48; -48,-28]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft_a 
          annotation (extent=[-74,-10; -54,10]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_b shaft_b 
          annotation (extent=[56,-10; 76,10]);
        Water.FlangeB tap1(redeclare package Medium = FluidMedium) 
                                         annotation (extent=[-6,-88; 12,-70]);
        Water.SteamTurbineStodola ST_firstStages(
          redeclare package Medium = FluidMedium,
          pstart_in=pstart_in,
          pstart_out=pstart_tap,
          wstart=wstart,
          hstartin=hstartin,
          hstartout=hstarttap,
          wnom=wn,
          Kt=Kt)    annotation (extent=[-44,-18; -8,18]);
        Water.SteamTurbineStodola ST_secondStages(
          redeclare package Medium = FluidMedium,
          pstart_in=pstart_tap,
          pstart_out=pstart_out,
          wstart=wstart,
          hstartin=hstarttap,
          hstartout=hstartout,
          wnom=wn,
          Kt=Kt)    annotation (extent=[18,-18; 56,18]);
        Water.FlowSplit flowSplit annotation (extent=[-8,36; 6,50]);
        Water.FlangeA flangeA(redeclare package Medium = FluidMedium) 
          annotation (extent=[-90,62; -56,96]);
        Water.FlangeB flangeB(redeclare package Medium = FluidMedium) 
          annotation (extent=[62,62; 96,96]);
        
      equation 
        connect(Shaft_a, Shaft_a) annotation (points=[-50,0; -50,0; -50,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillPattern=1));
        connect(Shaft_b, Shaft_b) annotation (points=[48,0; 48,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillPattern=1));
        connect(shaft_b, ST_secondStages.shaft_b) annotation (points=[66,0;
              49.16,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_secondStages.shaft_a, ST_firstStages.shaft_b) annotation (
            points=[24.46,0; -14.48,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_firstStages.shaft_a, shaft_a) annotation (points=[-37.88,0;
              -64,0],  style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(flowSplit.out1, ST_secondStages.inlet) annotation (points=[3.2,
              45.94; 12,45.94; 12,46; 22.75,46; 22.75,14.22],
                                                       style(thickness=2));
        connect(flowSplit.out2, tap1) 
          annotation (points=[3.2,40.2; 3.2,-79; 3,-79], style(thickness=2));
        connect(flangeA, ST_firstStages.inlet) 
          annotation (points=[-73,79; -39.5,79; -39.5,14.22],
                                                         style(thickness=2));
        connect(flangeB, ST_secondStages.outlet) 
          annotation (points=[79,79; 51.63,79; 51.63,14.4],
                                                        style(thickness=2));
        connect(flowSplit.in1, ST_firstStages.outlet) annotation (points=[-5.2,43;
              -12.14,43; -12.14,14.4], style(thickness=2));
        connect(partialArc, ST_firstStages.partialArc) annotation (points=[-58,-38;
              -36,-38; -36,-26; -52,-26; -52,-7.2; -35,-7.2],      style(color=
                74, rgbcolor={0,0,127}));
      end SteamTurbine_1tapping;
      
      model EffectHE "Effect of ideal HE" 
        extends Icons.Water.PressDrop;
        parameter SI.SpecificEnthalpy dh "Increase of specific enthalpy";
        parameter SI.Pressure dp "Drop pressure";
        
        Water.FlangeA in1 annotation (extent=[-140,-40; -62,40]);
        Water.FlangeB out1 annotation (extent=[60,-40; 140,40]);
        annotation (Icon(
            Text(extent=[-100,-56; 100,-84],   string="%name")));
      equation 
        out1.p = in1.p - dp;
        in1.w + out1.w = 0;
        in1.hAB + dh= out1.hAB;
        in1.hBA = out1.hBA - dh;
      end EffectHE;
      
      model Comp_bubble_h 
        "Computation Specific enthalpy of saturated liquid, imposted pressure" 
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialTwoPhaseMedium;
        parameter SI.Pressure p "Pressure value";
        FluidMedium.SaturationProperties sat "Saturation properties";
        SI.SpecificEnthalpy hl "Specific enthalpy of saturated liquid";
        
        Modelica.Blocks.Interfaces.RealOutput h 
          annotation (extent=[80,-10; 100,10]);
        annotation (Icon(Rectangle(extent=[-80,40; 80,-40], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=7,
                rgbfillColor={255,255,255})),
                                        Text(
              extent=[-60,20; 60,-20],
              style(color=3, rgbcolor={0,0,255}),
              string="Computation")));
      equation 
        sat.psat = p;
        sat.Tsat = FluidMedium.saturationTemperature(p);
        hl = FluidMedium.bubbleEnthalpy(sat);
        
        //Output signal
        h = hl;
      end Comp_bubble_h;
      
      model PrescribedSpeed "External imposed Speed" 
        extends 
          Modelica.Mechanics.Rotational.Interfaces.PartialSpeedDependentTorque;
        
        annotation (
          Diagram,
          Icon(Line(points=[0,-100; 0,100], style(color=3))),
          Documentation(info="<HTML>
<p>
Model of <b>fixed</b> angular verlocity of flange, not dependent on torque.
</p>
</HTML>"));
        Modelica.Blocks.Interfaces.RealInput w_fixed 
                                         annotation (extent=[-116,44; -84,76]);
      equation 
        w = w_fixed;
      end PrescribedSpeed;
      
      model BaseReader_water 
        "Base reader for the visualization of the state in the simulation (water)" 
        replaceable package Medium = Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance "Medium model";
        ThermoPower.Water.FlangeA inlet(redeclare package Medium = Medium) 
                                        annotation (extent=[-80,-20; -40,20]);
        ThermoPower.Water.FlangeB outlet(redeclare package Medium = Medium) 
                                         annotation (extent=[40,-20; 80,20]);
        annotation (
          Diagram,
          Icon(Polygon(points=[-80,0; 0,32; 80,0; 0,-32; -80,0], style(
                color=3,
                rgbcolor={0,0,255},
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1)), Text(
              extent=[-80,20; 80,-20],
              string="S",
              style(
                color=7,
                rgbcolor={255,255,255},
                fillColor=3,
                rgbfillColor={0,0,255},
                fillPattern=1))),
          Documentation(info="<HTML>
<p>This component can be inserted in a hydraulic circuit to measure the temperature of the fluid flowing through it.
<p>Flow reversal is supported.
</HTML>",   revisions="<html>
<ul>
<li><i>16 Dec 2004</i>
    by <a href=\"mailto:francesco.casella@polimi.it\">Francesco Casella</a>:<br>
       Standard medium definition added.</li>
<li><i>1 Jul 2004</i>
    by <a href=\"mailto:francesco.casella@polimi.it\">Francesco Casella</a>:<br>
       Adapted to Modelica.Media.</li>
<li><i>1 Oct 2003</i>
    by <a href=\"mailto:francesco.casella@polimi.it\">Francesco Casella</a>:<br>
       First release.</li>
</ul>
</html>"));
      equation 
        inlet.w + outlet.w = 0 "Mass balance";
        inlet.p = outlet.p "No pressure drop";
        
        // Boundary conditions
        inlet.hAB = outlet.hAB;
        inlet.hBA = outlet.hBA;
      end BaseReader_water;
      
      model StateReader_water 
        "State reader for the visualization of the state in the simulation (water)" 
        extends BaseReader_water;
        SI.Temperature T "Temperature";
        SI.Pressure p "Pressure";
        SI.SpecificEnthalpy h "Specific enthalpy";
        SI.MassFlowRate w "Mass flow rate";
        Medium.BaseProperties fluid;
      equation 
        // Set fluid properties
        fluid.p=inlet.p;
        fluid.h = if inlet.w >= 0 then inlet.hBA else inlet.hAB;
        
        T=fluid.T;
        p=fluid.p;
        h=fluid.h;
        w=inlet.w;
      end StateReader_water;
    end Components;
    
    package Examples 
      
      model ST2LRh_base "Steam turbine with two pressure levels and reheat" 
        extends Interfaces.ST_2LRh;
        
        //Mixers Parameters
        parameter SI.Volume mixLP_V "Internal volume of the LP mixer";
        parameter SI.Enthalpy mixLP_hstart = LPT_hstart_in 
          "Enthalpy start value of the LP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "LP mixer"));
        parameter SI.Pressure mixLP_pstart = steamLPNomPressure 
          "Pressure start value of the LP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "LP mixer"));
        
        annotation (Diagram);
        Water.SteamTurbineStodola ST_HP(
          redeclare package Medium = FluidMedium,
          wnom=steamHPNomFlowRate,
          eta_mech=HPT_eta_mech,
          eta_iso_nom=HPT_eta_iso_nom,
          Kt=HPT_Kt,
          hstartin=HPT_hstart_in,
          hstartout=HPT_hstart_out,
          pstart_in=HPT_pstart_in,
          pstart_out=HPT_pstart_out,
          wstart=HPT_wstart)            annotation (extent=[-150,-20; -110,20]);
        Water.SteamTurbineStodola ST_IP(
          redeclare package Medium = FluidMedium,
          eta_mech=IPT_eta_mech,
          eta_iso_nom=IPT_eta_iso_nom,
          Kt=IPT_Kt,
          hstartin=IPT_hstart_in,
          hstartout=IPT_hstart_out,
          pstart_in=IPT_pstart_in,
          pstart_out=IPT_pstart_out,
          wstart=IPT_wstart,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[-20,-20; 20,20]);
        Water.SteamTurbineStodola ST_LP(
          redeclare package Medium = FluidMedium,
          eta_mech=LPT_eta_mech,
          eta_iso_nom=LPT_eta_iso_nom,
          Kt=LPT_Kt,
          hstartin=LPT_hstart_in,
          hstartout=LPT_hstart_out,
          pstart_in=LPT_pstart_in,
          pstart_out=LPT_pstart_out,
          wstart=LPT_wstart,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[100,-20; 140,20]);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          hstart=mixLP_hstart,
          V=mixLP_V,
          pstart=mixLP_pstart) 
                          annotation (extent=[64,80; 84,100],rotation=270);
      protected 
        replaceable Components.BaseReader_water stateHPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-170,80; -150,60], rotation=90);
        replaceable Components.BaseReader_water stateHPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-110,80; -90,60],  rotation=270);
        replaceable Components.BaseReader_water stateIPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-50,80; -30,60],   rotation=90);
        replaceable Components.BaseReader_water stateIPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[30,80; 50,60],     rotation=270);
        replaceable Components.BaseReader_water stateLPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[64,60; 84,40],     rotation=90);
        replaceable Components.BaseReader_water stateLPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[150,-20; 170,-40], rotation=90);
      equation 
        connect(ST_HP.shaft_a, Shaft_a) annotation (points=[-143.2,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(Shaft_b,ST_LP. shaft_b) annotation (points=[200,0; 132.8,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_a,ST_IP. shaft_b) annotation (points=[106.8,0; 12.8,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_IP.shaft_a,ST_HP. shaft_b) annotation (points=[-13.2,0;
              -117.2,0],
                  style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(mixLP.in1, LPT_In) 
          annotation (points=[80,98; 80,200; 80,200], style(thickness=2));
        connect(ST_HP.inlet, stateHPT_in.outlet) annotation (points=[-145,15.8;
              -160,15.8; -160,64], style(thickness=2));
        connect(stateHPT_in.inlet, HPT_In) 
          annotation (points=[-160,76; -160,200], style(thickness=2));
        connect(ST_HP.outlet, stateHPT_out.inlet) annotation (points=[-114.6,16;
              -100,16; -100,64], style(thickness=2));
        connect(stateHPT_out.outlet, HPT_Out) 
          annotation (points=[-100,76; -100,200], style(thickness=2));
        connect(ST_IP.inlet, stateIPT_in.outlet) 
          annotation (points=[-15,15.8; -40,15.8; -40,64], style(thickness=2));
        connect(stateIPT_in.inlet, IPT_In) 
          annotation (points=[-40,76; -40,200; -40,200], style(thickness=2));
        connect(ST_IP.outlet, stateIPT_out.inlet) 
          annotation (points=[15.4,16; 40,16; 40,64], style(thickness=2));
        connect(stateIPT_out.outlet, mixLP.in2) annotation (points=[40,76; 40,
              120; 68,120; 68,97.9], style(thickness=2));
        connect(stateLPT_in.inlet, mixLP.out) 
          annotation (points=[74,56; 74,80; 74,80], style(thickness=2));
        connect(stateLPT_in.outlet, ST_LP.inlet) 
          annotation (points=[74,44; 74,15.8; 105,15.8], style(thickness=2));
        connect(ST_LP.outlet, stateLPT_out.inlet) 
          annotation (points=[135.4,16; 160,16; 160,-24], style(thickness=2));
        connect(LPT_Out, stateLPT_out.outlet) annotation (points=[80,-200; 80,
              -50; 160,-50; 160,-36], style(thickness=2));
      end ST2LRh_base;
      
      model ST3LRh_base "Steam turbine with three pressure levels and reheat" 
        extends Interfaces.ST_3LRh;
        
        //Mixers Parameters
        parameter SI.Volume mixLP_V "Internal volume of the LP mixer";
        parameter SI.Enthalpy mixLP_hstart = LPT_hstart_in 
          "Enthalpy start value of the LP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "LP mixer"));
        parameter SI.Pressure mixLP_pstart = steamLPNomPressure 
          "Pressure start value of the LP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "LP mixer"));
        parameter SI.Volume mixIP_V "Internal volume of the IP mixer";
        parameter SI.Enthalpy mixIP_hstart = HPT_hstart_out 
          "Enthalpy start value of the IP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "IP mixer"));
        parameter SI.Pressure mixIP_pstart = steamIPNomPressure 
          "Pressure start value of the IP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "IP mixer"));
        
        annotation (Diagram);
        Water.SteamTurbineStodola ST_HP(
          redeclare package Medium = FluidMedium,
          wnom=steamHPNomFlowRate,
          eta_mech=HPT_eta_mech,
          eta_iso_nom=HPT_eta_iso_nom,
          Kt=HPT_Kt,
          hstartin=HPT_hstart_in,
          hstartout=HPT_hstart_out,
          pstart_in=HPT_pstart_in,
          pstart_out=HPT_pstart_out,
          wstart=HPT_wstart)            annotation (extent=[-154,-20; -114,20]);
        Water.SteamTurbineStodola ST_IP(
          redeclare package Medium = FluidMedium,
          eta_mech=IPT_eta_mech,
          eta_iso_nom=IPT_eta_iso_nom,
          Kt=IPT_Kt,
          hstartin=IPT_hstart_in,
          hstartout=IPT_hstart_out,
          pstart_in=IPT_pstart_in,
          pstart_out=IPT_pstart_out,
          wstart=IPT_wstart,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[-20,-20; 20,20]);
        Water.SteamTurbineStodola ST_LP(
          redeclare package Medium = FluidMedium,
          eta_mech=LPT_eta_mech,
          eta_iso_nom=LPT_eta_iso_nom,
          Kt=LPT_Kt,
          hstartin=LPT_hstart_in,
          hstartout=LPT_hstart_out,
          pstart_in=LPT_pstart_in,
          pstart_out=LPT_pstart_out,
          wstart=LPT_wstart,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[100,-20; 140,20]);
        Water.Mixer mixIP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          V=mixIP_V,
          pstart=mixIP_pstart,
          hstart=mixIP_hstart) 
                          annotation (extent=[-110,120; -90,140],
                                                             rotation=90);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          hstart=mixLP_hstart,
          V=mixLP_V,
          pstart=mixLP_pstart) 
                          annotation (extent=[64,80; 84,100],rotation=270);
      protected 
        replaceable Components.BaseReader_water stateHPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-170,80; -150,60], rotation=90);
        replaceable Components.BaseReader_water stateHPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-116,80; -96,60],  rotation=270);
        replaceable Components.BaseReader_water stateIPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-50,80; -30,60],   rotation=90);
        replaceable Components.BaseReader_water stateIPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[30,80; 50,60],     rotation=270);
        replaceable Components.BaseReader_water stateLPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[64,60; 84,40],     rotation=90);
        replaceable Components.BaseReader_water stateLPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[150,-20; 170,-40], rotation=90);
        replaceable Components.BaseReader_water stateForRh(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-110,170; -90,150],rotation=270);
      equation 
        connect(ST_HP.shaft_a, Shaft_a) annotation (points=[-147.2,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(Shaft_b,ST_LP. shaft_b) annotation (points=[200,0; 132.8,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_a,ST_IP. shaft_b) annotation (points=[106.8,0; 12.8,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_IP.shaft_a,ST_HP. shaft_b) annotation (points=[-13.2,0;
              -121.2,0],
                  style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(mixLP.in1, LPT_In) 
          annotation (points=[80,98; 80,200], style(thickness=2));
        connect(SteamToMix, mixIP.in2) annotation (points=[20,200; 20,100; -94,
              100; -94,122.1], style(thickness=2));
        connect(ST_HP.inlet, stateHPT_in.outlet) annotation (points=[-149,15.8;
              -160,15.8; -160,64], style(thickness=2));
        connect(stateHPT_in.inlet, HPT_In) 
          annotation (points=[-160,76; -160,200], style(thickness=2));
        connect(ST_HP.outlet, stateHPT_out.inlet) annotation (points=[-118.6,16;
              -106,16; -106,64], style(thickness=2));
        connect(ST_IP.inlet, stateIPT_in.outlet) 
          annotation (points=[-15,15.8; -40,15.8; -40,64], style(thickness=2));
        connect(stateIPT_in.inlet, IPT_In) 
          annotation (points=[-40,76; -40,200], style(thickness=2));
        connect(ST_IP.outlet, stateIPT_out.inlet) 
          annotation (points=[15.4,16; 40,16; 40,64], style(thickness=2));
        connect(stateIPT_out.outlet, mixLP.in2) annotation (points=[40,76; 40,
              120; 68,120; 68,97.9], style(thickness=2));
        connect(stateLPT_in.inlet, mixLP.out) 
          annotation (points=[74,56; 74,80], style(thickness=2));
        connect(stateLPT_in.outlet, ST_LP.inlet) 
          annotation (points=[74,44; 74,15.8; 105,15.8], style(thickness=2));
        connect(ST_LP.outlet, stateLPT_out.inlet) 
          annotation (points=[135.4,16; 160,16; 160,-24], style(thickness=2));
        connect(LPT_Out, stateLPT_out.outlet) annotation (points=[140,-200; 140,
              -50; 160,-50; 160,-36], style(thickness=2));
        connect(stateHPT_out.outlet, mixIP.in1) 
          annotation (points=[-106,76; -106,122], style(thickness=2));
        connect(mixIP.out, stateForRh.inlet) 
          annotation (points=[-100,140; -100,154], style(thickness=2));
        connect(stateForRh.outlet, HPT_Out) 
          annotation (points=[-100,166; -100,200], style(thickness=2));
      end ST3LRh_base;
      
      model ST2LRh_valve 
        "Steam turbine with two pressure levels and reheat, inlet valves" 
        extends Interfaces.ST_2LRh;
        
        //Mixers Parameters
        parameter SI.Volume mixLP_V "Internal volume of the LP mixer";
        parameter SI.Enthalpy mixLP_hstart = LPT_hstart_in 
          "Enthalpy start value of the LP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "LP mixer"));
        parameter SI.Pressure mixLP_pstart = steamLPNomPressure 
          "Pressure start value of the LP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "LP mixer"));
        
        //Valves Parameters
        parameter Real valveHP_Cv=0 "Cv (US) flow coefficient of the HP valve" annotation(Dialog(group= "HP valve"));
        parameter SI.Pressure valveHP_dpnom 
          "Nominal pressure drop of the HP valve"                                   annotation(Dialog(group= "HP valve"));
        parameter Real valveIP_Cv=0 "Cv (US) flow coefficient of the IP valve" annotation(Dialog(group= "IP valve"));
        parameter SI.Pressure valveIP_dpnom 
          "Nominal pressure drop of the IP valve"                                   annotation(Dialog(group= "IP valve"));
        parameter Real valveLP_Cv=0 "Cv (US) flow coefficient of the LP valve" annotation(Dialog(group= "LP valve"));
        parameter SI.Pressure valveLP_dpnom 
          "Nominal pressure drop of the LP valve"                                   annotation(Dialog(group= "LP valve"));
        
        annotation (Diagram, Icon(
            Polygon(points=[-166,100; -154,100; -166,80; -154,80; -166,100],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-46,100; -34,100; -46,80; -34,80; -46,100],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[14,100; 26,100; 14,80; 26,80; 14,100], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255}))));
        Water.SteamTurbineStodola ST_HP(
          redeclare package Medium = FluidMedium,
          wnom=steamHPNomFlowRate,
          eta_mech=HPT_eta_mech,
          eta_iso_nom=HPT_eta_iso_nom,
          Kt=HPT_Kt,
          hstartin=HPT_hstart_in,
          hstartout=HPT_hstart_out,
          pstart_in=HPT_pstart_in,
          pstart_out=HPT_pstart_out,
          wstart=HPT_wstart)            annotation (extent=[-120,-20; -80,20]);
        Water.SteamTurbineStodola ST_IP(
          redeclare package Medium = FluidMedium,
          eta_mech=IPT_eta_mech,
          eta_iso_nom=IPT_eta_iso_nom,
          Kt=IPT_Kt,
          hstartin=IPT_hstart_in,
          hstartout=IPT_hstart_out,
          pstart_in=IPT_pstart_in,
          pstart_out=IPT_pstart_out,
          wstart=IPT_wstart,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[0,-20; 40,20]);
        Water.SteamTurbineStodola ST_LP(
          redeclare package Medium = FluidMedium,
          eta_mech=LPT_eta_mech,
          eta_iso_nom=LPT_eta_iso_nom,
          Kt=LPT_Kt,
          hstartin=LPT_hstart_in,
          hstartout=LPT_hstart_out,
          pstart_in=LPT_pstart_in,
          pstart_out=LPT_pstart_out,
          wstart=LPT_wstart,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[120,-20; 160,20]);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          hstart=mixLP_hstart,
          V=mixLP_V,
          pstart=mixLP_pstart) 
                          annotation (extent=[64,80; 84,100],rotation=270);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveHP_Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          dpnom=valveHP_dpnom,
          redeclare package Medium = FluidMedium,
          hstart=HPT_hstart_in) 
                               annotation (extent=[-130,26; -150,6],
                                                                   rotation=180);
        Water.ValveVap valveIP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveIP_Cv,
          pnom=steamIPNomPressure,
          dpnom=valveIP_dpnom,
          redeclare package Medium = FluidMedium,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate,
          hstart=IPT_hstart_in) 
                               annotation (extent=[-10,26; -30,6],rotation=180);
        Water.ValveVap valveLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          dpnom=valveLP_dpnom,
          redeclare package Medium = FluidMedium,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate,
          Cv=valveLP_Cv,
          hstart=LPT_hstart_in) 
                               annotation (extent=[110,26; 90,6],rotation=180);
      protected 
        replaceable Components.BaseReader_water stateHPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-170,80; -150,60], rotation=90);
        replaceable Components.BaseReader_water stateHPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-110,80; -90,60],  rotation=270);
        replaceable Components.BaseReader_water stateIPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-50,80; -30,60],   rotation=90);
        replaceable Components.BaseReader_water stateIPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[30,80; 50,60],     rotation=270);
        replaceable Components.BaseReader_water stateLPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[64,60; 84,40],     rotation=90);
        replaceable Components.BaseReader_water stateLPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[170,-20; 190,-40], rotation=90);
      equation 
        connect(Shaft_b, Shaft_b) annotation (points=[200,0; 200,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(valveIP.outlet,ST_IP. inlet) annotation (points=[-10,16; -10,
              15.8; 5,15.8],     style(thickness=2));
        connect(ActuatorsBus.Opening_valveHP,valveHP. theta) annotation (points=[200,-140;
              -180,-140; -180,30; -140,30; -140,24],       style(color=52, rgbcolor={
                213,255,170}));
        connect(ActuatorsBus.Opening_valveIP,valveIP. theta) annotation (points=[200,-140;
              -60,-140; -60,34; -20,34; -20,24],      style(color=52, rgbcolor={213,
                255,170}));
        connect(ActuatorsBus.Opening_valveLP,valveLP. theta) annotation (points=[200,-140;
              60,-140; 60,32; 100,32; 100,24],
                                        style(color=52, rgbcolor={213,255,170}));
        connect(ST_HP.inlet,valveHP. outlet) annotation (points=[-115,15.8;
              -126.5,15.8; -126.5,16; -130,16], style(thickness=2));
        connect(ST_HP.shaft_a, Shaft_a) annotation (points=[-113.2,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.inlet,valveLP. outlet) annotation (points=[125,15.8;
              118.5,15.8; 118.5,16; 110,16], style(thickness=2));
        connect(Shaft_b,ST_LP. shaft_b) annotation (points=[200,0; 152.8,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_a,ST_IP. shaft_b) annotation (points=[126.8,0; 32.8,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_IP.shaft_a,ST_HP. shaft_b) annotation (points=[6.8,0; -87.2,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(mixLP.in1, LPT_In) 
          annotation (points=[80,98; 80,200], style(thickness=2));
        connect(stateHPT_in.inlet, HPT_In) 
          annotation (points=[-160,76; -160,200], style(thickness=2));
        connect(ST_HP.outlet, stateHPT_out.inlet) annotation (points=[-84.6,16;
              -70,16; -70,40; -100,40; -100,64], style(thickness=2));
        connect(stateHPT_out.outlet, HPT_Out) 
          annotation (points=[-100,76; -100,200], style(thickness=2));
        connect(stateIPT_in.inlet, IPT_In) 
          annotation (points=[-40,76; -40,200], style(thickness=2));
        connect(ST_IP.outlet, stateIPT_out.inlet) 
          annotation (points=[35.4,16; 40,16; 40,64], style(thickness=2));
        connect(stateIPT_out.outlet, mixLP.in2) annotation (points=[40,76; 40,
              120; 68,120; 68,97.9], style(thickness=2));
        connect(stateLPT_in.inlet, mixLP.out) 
          annotation (points=[74,56; 74,80], style(thickness=2));
        connect(ST_LP.outlet, stateLPT_out.inlet) 
          annotation (points=[155.4,16; 180,16; 180,-24], style(thickness=2));
        connect(LPT_Out, stateLPT_out.outlet) annotation (points=[80,-200; 80,
              -50; 180,-50; 180,-36], style(thickness=2));
        connect(valveHP.inlet, stateHPT_in.outlet) 
          annotation (points=[-150,16; -160,16; -160,64], style(thickness=2));
        connect(valveIP.inlet, stateIPT_in.outlet) 
          annotation (points=[-30,16; -40,16; -40,64], style(thickness=2));
        connect(valveLP.inlet, stateLPT_in.outlet) 
          annotation (points=[90,16; 74,16; 74,44], style(thickness=2));
      end ST2LRh_valve;
      
      model ST3LRh_valve 
        "Steam turbine with three pressure levels and reheat, inlet valves" 
        extends Interfaces.ST_3LRh;
        
        //Mixers Parameters
        parameter SI.Volume mixLP_V "Internal volume of the LP mixer";
        parameter SI.Enthalpy mixLP_hstart = LPT_hstart_in 
          "Enthalpy start value of the LP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "LP mixer"));
        parameter SI.Pressure mixLP_pstart = steamLPNomPressure 
          "Pressure start value of the LP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "LP mixer"));
        parameter SI.Volume mixIP_V "Internal volume of the IP mixer";
        parameter SI.Enthalpy mixIP_hstart = HPT_hstart_out 
          "Enthalpy start value of the IP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "IP mixer"));
        parameter SI.Pressure mixIP_pstart = steamIPNomPressure 
          "Pressure start value of the IP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "IP mixer"));
        
        //Valves Parameters
        parameter Real valveHP_Cv=0 "Cv (US) flow coefficient of the HP valve" annotation(Dialog(group= "HP valve"));
        parameter SI.Pressure valveHP_dpnom 
          "Nominal pressure drop of the HP valve"                                   annotation(Dialog(group= "HP valve"));
        parameter Real valveIP_Cv=0 "Cv (US) flow coefficient of the IP valve" annotation(Dialog(group= "IP valve"));
        parameter SI.Pressure valveIP_dpnom 
          "Nominal pressure drop of the IP valve"                                   annotation(Dialog(group= "IP valve"));
        parameter Real valveLP_Cv=0 "Cv (US) flow coefficient of the LP valve" annotation(Dialog(group= "LP valve"));
        parameter SI.Pressure valveLP_dpnom 
          "Nominal pressure drop of the LP valve"                                   annotation(Dialog(group= "LP valve"));
        
        annotation (Diagram, Icon(
            Polygon(points=[-166,100; -154,100; -166,80; -154,80; -166,100],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-46,100; -34,100; -46,80; -34,80; -46,100],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[74,100; 86,100; 74,80; 86,80; 74,100], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255}))));
        Water.SteamTurbineStodola ST_HP(
          redeclare package Medium = FluidMedium,
          wnom=steamHPNomFlowRate,
          eta_mech=HPT_eta_mech,
          eta_iso_nom=HPT_eta_iso_nom,
          Kt=HPT_Kt,
          hstartin=HPT_hstart_in,
          hstartout=HPT_hstart_out,
          pstart_in=HPT_pstart_in,
          pstart_out=HPT_pstart_out,
          wstart=HPT_wstart)            annotation (extent=[-120,-20; -80,20]);
        Water.SteamTurbineStodola ST_IP(
          redeclare package Medium = FluidMedium,
          eta_mech=IPT_eta_mech,
          eta_iso_nom=IPT_eta_iso_nom,
          Kt=IPT_Kt,
          hstartin=IPT_hstart_in,
          hstartout=IPT_hstart_out,
          pstart_in=IPT_pstart_in,
          pstart_out=IPT_pstart_out,
          wstart=IPT_wstart,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[0,-20; 40,20]);
        Water.SteamTurbineStodola ST_LP(
          redeclare package Medium = FluidMedium,
          eta_mech=LPT_eta_mech,
          eta_iso_nom=LPT_eta_iso_nom,
          Kt=LPT_Kt,
          hstartin=LPT_hstart_in,
          hstartout=LPT_hstart_out,
          pstart_in=LPT_pstart_in,
          pstart_out=LPT_pstart_out,
          wstart=LPT_wstart,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[120,-20; 160,20]);
        Water.Mixer mixIP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          V=mixIP_V,
          pstart=mixIP_pstart,
          hstart=mixIP_hstart) 
                          annotation (extent=[-110,120; -90,140],
                                                             rotation=90);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          hstart=mixLP_hstart,
          V=mixLP_V,
          pstart=mixLP_pstart) 
                          annotation (extent=[64,80; 84,100],rotation=270);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveHP_Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          dpnom=valveHP_dpnom,
          redeclare package Medium = FluidMedium,
          hstart=HPT_hstart_in) 
                               annotation (extent=[-130,26; -150,6],
                                                                   rotation=180);
        Water.ValveVap valveIP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveIP_Cv,
          pnom=steamIPNomPressure,
          dpnom=valveIP_dpnom,
          redeclare package Medium = FluidMedium,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate,
          hstart=IPT_hstart_in) 
                               annotation (extent=[-10,26; -30,6],rotation=180);
        Water.ValveVap valveLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          dpnom=valveLP_dpnom,
          redeclare package Medium = FluidMedium,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate,
          Cv=valveLP_Cv,
          hstart=LPT_hstart_in) 
                               annotation (extent=[110,26; 90,6],rotation=180);
      protected 
        replaceable Components.BaseReader_water stateHPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-170,80; -150,60], rotation=90);
        replaceable Components.BaseReader_water stateHPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-116,80; -96,60],  rotation=270);
        replaceable Components.BaseReader_water stateIPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-50,80; -30,60],   rotation=90);
        replaceable Components.BaseReader_water stateIPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[36,80; 56,60],     rotation=270);
        replaceable Components.BaseReader_water stateLPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[64,60; 84,40],     rotation=90);
        replaceable Components.BaseReader_water stateLPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[160,-20; 180,-40], rotation=90);
        replaceable Components.BaseReader_water stateForRh(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-110,170; -90,150],rotation=270);
      equation 
        connect(valveIP.outlet,ST_IP. inlet) annotation (points=[-10,16; -10,
              15.8; 5,15.8],     style(thickness=2));
        connect(ActuatorsBus.Opening_valveHP,valveHP. theta) annotation (points=[200,-140;
              -180,-140; -180,30; -140,30; -140,24],       style(color=52, rgbcolor={
                213,255,170}));
        connect(ActuatorsBus.Opening_valveIP,valveIP. theta) annotation (points=[200,-140;
              -60,-140; -60,34; -20,34; -20,24],      style(color=52, rgbcolor={213,
                255,170}));
        connect(ActuatorsBus.Opening_valveLP,valveLP. theta) annotation (points=[200,-140;
              60,-140; 60,32; 100,32; 100,24],
                                        style(color=52, rgbcolor={213,255,170}));
        connect(ST_HP.inlet,valveHP. outlet) annotation (points=[-115,15.8;
              -126.5,15.8; -126.5,16; -130,16], style(thickness=2));
        connect(ST_HP.shaft_a, Shaft_a) annotation (points=[-113.2,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.inlet,valveLP. outlet) annotation (points=[125,15.8;
              118.5,15.8; 118.5,16; 110,16], style(thickness=2));
        connect(Shaft_b,ST_LP. shaft_b) annotation (points=[200,0; 152.8,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_a,ST_IP. shaft_b) annotation (points=[126.8,0; 32.8,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_IP.shaft_a,ST_HP. shaft_b) annotation (points=[6.8,0; -87.2,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(mixIP.in2, SteamToMix) annotation (points=[-94,122.1; -94,110;
              20,110; 20,200], style(thickness=2));
        connect(mixLP.in1, LPT_In) 
          annotation (points=[80,98; 80,200; 80,200], style(thickness=2));
        connect(stateHPT_in.inlet, HPT_In) 
          annotation (points=[-160,76; -160,200], style(thickness=2));
        connect(stateHPT_out.outlet, mixIP.in1) 
          annotation (points=[-106,76; -106,122], style(thickness=2));
        connect(stateIPT_in.inlet, IPT_In) 
          annotation (points=[-40,76; -40,200], style(thickness=2));
        connect(ST_IP.outlet, stateIPT_out.inlet) 
          annotation (points=[35.4,16; 46,16; 46,64], style(thickness=2));
        connect(stateIPT_out.outlet, mixLP.in2) annotation (points=[46,76; 46,120;
              68,120; 68,97.9], style(thickness=2));
        connect(stateLPT_in.inlet, mixLP.out) 
          annotation (points=[74,56; 74,80], style(thickness=2));
        connect(ST_LP.outlet, stateLPT_out.inlet) 
          annotation (points=[155.4,16; 170,16; 170,-24], style(thickness=2));
        connect(LPT_Out, stateLPT_out.outlet) annotation (points=[140,-200; 140,
              -50; 170,-50; 170,-36], style(thickness=2));
        connect(mixIP.out, stateForRh.inlet) 
          annotation (points=[-100,140; -100,154], style(thickness=2));
        connect(stateForRh.outlet, HPT_Out) 
          annotation (points=[-100,166; -100,200], style(thickness=2));
        connect(valveIP.inlet, stateIPT_in.outlet) 
          annotation (points=[-30,16; -40,16; -40,64], style(thickness=2));
        connect(ST_HP.outlet, stateHPT_out.inlet) annotation (points=[-84.6,16;
              -68,16; -68,48; -106,48; -106,64], style(thickness=2));
        connect(valveHP.inlet, stateHPT_in.outlet) 
          annotation (points=[-150,16; -160,16; -160,64], style(thickness=2));
        connect(valveLP.inlet, stateLPT_in.outlet) 
          annotation (points=[90,16; 74,16; 74,44], style(thickness=2));
      end ST3LRh_valve;
      
      model ST2LRh_bypass 
        "Steam turbine with two pressure levels and reheat, inlet and by-pass valves " 
        extends Interfaces.ST_2LRh;
        
        //Mixers Parameters
        parameter SI.Volume mixLP_V "Internal volume of the LP mixer";
        parameter SI.Enthalpy mixLP_hstart = LPT_hstart_in 
          "Enthalpy start value of the LP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "LP mixer"));
        parameter SI.Pressure mixLP_pstart = steamLPNomPressure 
          "Pressure start value of the LP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "LP mixer"));
        
        //Valves Parameters
        parameter Real valveHP_Cv=0 "Cv (US) flow coefficient of the HP valve" annotation(Dialog(group= "HP valves"));
        parameter Modelica.SIunits.Pressure valveHP_dpnom 
          "Nominal pressure drop of the HP valve"                                   annotation(Dialog(group= "HP valves"));
        parameter Real bypassHP_Cv=0 
          "Cv (US) flow coefficient of the HP valve of bypass"                                 annotation(Dialog(group= "HP valves"));
        parameter Real valveIP_Cv=0 "Cv (US) flow coefficient of the IP valve" annotation(Dialog(group= "IP valves"));
        parameter Modelica.SIunits.Pressure valveIP_dpnom 
          "Nominal pressure drop of the IP valve"                                   annotation(Dialog(group= "IP valves"));
        parameter Real bypassIP_Cv=0 
          "Cv (US) flow coefficient of the IP valve of bypass" annotation(Dialog(group= "IP valves"));
        parameter Real valveLP_Cv=0 "Cv (US) flow coefficient of the LP valve" annotation(Dialog(group= "LP valves"));
        parameter Modelica.SIunits.Pressure valveLP_dpnom 
          "Nominal pressure drop of the LP valve"                                   annotation(Dialog(group= "LP valves"));
        parameter Real bypassLP_Cv=0 
          "Cv (US) flow coefficient of the HP valve of bypass" annotation(Dialog(group= "LP valves"));
        parameter Real valveDrumLP_Cv=0 
          "Cv (US) flow coefficient of the valve of pressurization LP drum" 
                                                                          annotation(Dialog(group= "LP valves"));
        
        annotation (Diagram, Icon(
            Line(points=[-140,120; -160,120],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-120,120; -100,120],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-40,120; -20,120],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[0,120; 20,120],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[20,120; 40,120],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[80,100; 80,120; 60,120],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Polygon(points=[-166,80; -154,80; -166,60; -154,60; -166,80],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-46,80; -34,80; -46,60; -34,60; -46,80],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[14,100; 26,100; 14,80; 26,80; 14,100], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-140,114; -140,126; -120,114; -120,126; -140,114],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-20,114; -20,126; 0,114; 0,126; -20,114],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[40,114; 40,126; 60,114; 60,126; 40,114],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255}))));
        Water.SteamTurbineStodola ST_HP(
          redeclare package Medium = FluidMedium,
          wnom=steamHPNomFlowRate,
          eta_mech=HPT_eta_mech,
          eta_iso_nom=HPT_eta_iso_nom,
          Kt=HPT_Kt,
          hstartin=HPT_hstart_in,
          hstartout=HPT_hstart_out,
          pstart_in=HPT_pstart_in,
          pstart_out=HPT_pstart_out,
          wstart=HPT_wstart)            annotation (extent=[-120,-20; -80,20]);
        Water.SteamTurbineStodola ST_IP(
          redeclare package Medium = FluidMedium,
          eta_mech=IPT_eta_mech,
          eta_iso_nom=IPT_eta_iso_nom,
          Kt=IPT_Kt,
          hstartin=IPT_hstart_in,
          hstartout=IPT_hstart_out,
          pstart_in=IPT_pstart_in,
          pstart_out=IPT_pstart_out,
          wstart=IPT_wstart,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[0,-20; 40,20]);
        Water.SteamTurbineStodola ST_LP(
          redeclare package Medium = FluidMedium,
          eta_mech=LPT_eta_mech,
          eta_iso_nom=LPT_eta_iso_nom,
          Kt=LPT_Kt,
          hstartin=LPT_hstart_in,
          hstartout=LPT_hstart_out,
          pstart_in=LPT_pstart_in,
          pstart_out=LPT_pstart_out,
          wstart=LPT_wstart,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[120,-20; 160,20]);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          hstart=mixLP_hstart,
          V=mixLP_V,
          pstart=mixLP_pstart) 
                          annotation (extent=[64,80; 84,100],rotation=270);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveHP_Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          dpnom=valveHP_dpnom,
          redeclare package Medium = FluidMedium,
          hstart=HPT_hstart_in) 
                               annotation (extent=[-130,26; -150,6],
                                                                   rotation=180);
        Water.ValveVap valveIP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveIP_Cv,
          pnom=steamIPNomPressure,
          dpnom=valveIP_dpnom,
          redeclare package Medium = FluidMedium,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate,
          hstart=IPT_hstart_in) 
                               annotation (extent=[-10,26; -30,6],rotation=180);
        Water.ValveVap valveLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          dpnom=valveLP_dpnom,
          redeclare package Medium = FluidMedium,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate,
          Cv=valveLP_Cv,
          hstart=LPT_hstart_in) 
                               annotation (extent=[110,26; 90,6],rotation=180);
        Water.ValveVap byPassHP(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          dpnom=steamHPNomPressure - steamIPNomPressure,
          Cv=bypassHP_Cv,
          hstart=HPT_hstart_in) annotation (extent=[-110,50; -130,30],
                                                                     rotation=180);
        Water.ValveVap byPassIP(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamIPNomPressure,
          dpnom=steamIPNomPressure - steamLPNomPressure,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate,
          Cv=bypassIP_Cv,
          hstart=IPT_hstart_in) annotation (extent=[10,50; -10,30],rotation=180);
        Water.ValveVap byPassLP(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate,
          Cv=bypassLP_Cv,
          dpnom=steamLPNomPressure - pcond,
          hstart=LPT_hstart_in)  annotation (extent=[130,50; 110,30],
                                                                    rotation=180);
        Water.FlowJoin flowHPJoin(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_in2=false,
          rev_out=false)        annotation (extent=[-86,36; -66,56], rotation=
              90);
        Water.FlowSplit flowHPSplit(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false)         annotation (extent=[-170,36; -150,56],
                                                                       rotation=270);
        Water.FlowJoin flowIPJoin(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_in2=false,
          rev_out=false)         annotation (extent=[34,36; 54,56], rotation=90);
        Water.FlowSplit flowIPSplit(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false)          annotation (extent=[-50,36; -30,56],rotation=270);
        Water.FlowJoin flowLPJoin(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_in2=false,
          rev_out=false)         annotation (extent=[166,0; 186,20], rotation=
              270);
        Water.FlowSplit flowLPSplit(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false)          annotation (extent=[64,36; 84,56], rotation=270);
        Water.ValveVap valveDrumLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          redeclare package Medium = FluidMedium,
          Cv=valveDrumLP_Cv,
          pnom=steamLPNomPressure,
          wnom=steamLPNomFlowRate,
          hstart=LPT_hstart_in,
          dpnom=valveLP_dpnom,
          CheckValve=true)     annotation (extent=[70,140; 90,120],rotation=90);
        Water.SensP p_ST_LP(            redeclare package Medium = FluidMedium)
          annotation (extent=[90,74; 110,94]);
      protected 
        replaceable Components.BaseReader_water stateHPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-170,100; -150,80],rotation=90);
        replaceable Components.BaseReader_water stateHPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-110,100; -90,80], rotation=270);
        replaceable Components.BaseReader_water stateIPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-50,100; -30,80],  rotation=90);
        replaceable Components.BaseReader_water stateIPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[34,100; 54,80],    rotation=270);
        replaceable Components.BaseReader_water stateLPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[64,76; 84,56],     rotation=90);
        replaceable Components.BaseReader_water stateLPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[166,-10; 186,-30], rotation=90);
      equation 
        connect(valveIP.outlet,ST_IP. inlet) annotation (points=[-10,16; -10,
              15.8; 5,15.8],     style(thickness=2));
        connect(ActuatorsBus.Opening_valveHP,valveHP. theta) annotation (points=[200,-140;
              -180,-140; -180,30; -140,30; -140,24],       style(color=52, rgbcolor={
                213,255,170}));
        connect(ActuatorsBus.Opening_valveIP,valveIP. theta) annotation (points=[200,-140;
              -60,-140; -60,34; -20,34; -20,24],      style(color=52, rgbcolor={213,
                255,170}));
        connect(ActuatorsBus.Opening_valveLP,valveLP. theta) annotation (points=[200,-140;
              60,-140; 60,32; 100,32; 100,24],
                                        style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_byPassHP,byPassHP. theta) annotation (points=[200,-140;
              -180,-140; -180,30; -140,30; -140,60; -120,60; -120,48],
                                             style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_byPassIP,byPassIP. theta) annotation (points=[200,-140;
              -60,-140; -60,34; -20,34; -20,60; 9.79685e-016,60; 9.79685e-016,
              48],                       style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_byPassLP,byPassLP. theta) annotation (points=[200,-140;
              60,-140; 60,32; 100,32; 100,60; 120,60; 120,48],
                                             style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_valveDrumLP,valveDrumLP. theta) annotation (
            points=[200,-140; 60,-140; 60,130; 72,130],                   style(
              color=52, rgbcolor={213,255,170}));
        connect(SensorsBus.p_STLP_in,p_ST_LP. p) annotation (points=[200,-80;
              166,-80; 166,90; 108,90],
                                  style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(ST_HP.inlet,valveHP. outlet) annotation (points=[-115,15.8;
              -126.5,15.8; -126.5,16; -130,16], style(thickness=2));
        connect(valveHP.inlet,flowHPSplit. out2) 
          annotation (points=[-150,16; -164,16; -164,40], style(thickness=2));
        connect(byPassHP.inlet,flowHPSplit. out1) 
          annotation (points=[-130,40; -155.8,40], style(thickness=2));
        connect(flowHPJoin.in2,ST_HP. outlet) 
          annotation (points=[-72,40; -72,16; -84.6,16], style(thickness=2));
        connect(flowHPJoin.in1,byPassHP. outlet) 
          annotation (points=[-80,40; -110,40], style(thickness=2));
        connect(ST_HP.shaft_a, Shaft_a) annotation (points=[-113.2,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(valveIP.inlet,flowIPSplit. out2) 
          annotation (points=[-30,16; -44,16; -44,40], style(thickness=2));
        connect(byPassIP.inlet,flowIPSplit. out1) 
          annotation (points=[-10,40; -35.8,40], style(thickness=2));
        connect(ST_IP.outlet,flowIPJoin. in2) 
          annotation (points=[35.4,16; 48,16; 48,40], style(thickness=2));
        connect(flowIPJoin.in1,byPassIP. outlet) 
          annotation (points=[40,40; 10,40], style(thickness=2));
        connect(ST_LP.inlet,valveLP. outlet) annotation (points=[125,15.8;
              118.5,15.8; 118.5,16; 110,16], style(thickness=2));
        connect(valveLP.inlet,flowLPSplit. out2) 
          annotation (points=[90,16; 70,16; 70,40], style(thickness=2));
        connect(byPassLP.inlet,flowLPSplit. out1) 
          annotation (points=[110,40; 78.2,40], style(thickness=2));
        connect(flowLPJoin.in2,ST_LP. outlet) 
          annotation (points=[172,16; 155.4,16], style(thickness=2));
        connect(flowLPJoin.in1,byPassLP. outlet) 
          annotation (points=[180,16; 180,40; 130,40], style(thickness=2));
        connect(p_ST_LP.flange,mixLP. out) annotation (points=[100,80; 74,80],
            style(
            color=3,
            rgbcolor={0,0,255},
            thickness=2));
        connect(Shaft_b,ST_LP. shaft_b) annotation (points=[200,0; 152.8,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_a,ST_IP. shaft_b) annotation (points=[126.8,0; 32.8,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_IP.shaft_a,ST_HP. shaft_b) annotation (points=[6.8,0; -87.2,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(mixLP.in1,valveDrumLP. outlet) 
          annotation (points=[80,98; 80,120], style(thickness=2));
        connect(valveDrumLP.inlet, LPT_In) 
          annotation (points=[80,140; 80,200],         style(thickness=2));
        connect(stateHPT_in.inlet, HPT_In) 
          annotation (points=[-160,96; -160,200], style(thickness=2));
        connect(stateHPT_out.outlet, HPT_Out) 
          annotation (points=[-100,96; -100,200], style(thickness=2));
        connect(stateIPT_in.inlet, IPT_In) 
          annotation (points=[-40,96; -40,200], style(thickness=2));
        connect(stateIPT_out.outlet, mixLP.in2) annotation (points=[44,96; 44,140;
              68,140; 68,97.9], style(thickness=2));
        connect(stateLPT_in.inlet, mixLP.out) 
          annotation (points=[74,72; 74,80], style(thickness=2));
        connect(LPT_Out, stateLPT_out.outlet) annotation (points=[80,-200; 80,
              -40; 176,-40; 176,-26], style(thickness=2));
        connect(flowHPSplit.in1, stateHPT_in.outlet) 
          annotation (points=[-160,52; -160,84; -160,84], style(thickness=2));
        connect(flowHPJoin.out, stateHPT_out.inlet) annotation (points=[-76,52;
              -76,66; -100,66; -100,84], style(thickness=2));
        connect(flowIPSplit.in1, stateIPT_in.outlet) 
          annotation (points=[-40,52; -40,84], style(thickness=2));
        connect(flowIPJoin.out, stateIPT_out.inlet) 
          annotation (points=[44,52; 44,84], style(thickness=2));
        connect(flowLPSplit.in1, stateLPT_in.outlet) 
          annotation (points=[74,52; 74,60], style(thickness=2));
        connect(stateLPT_out.inlet, flowLPJoin.out) 
          annotation (points=[176,-14; 176,4], style(thickness=2));
      end ST2LRh_bypass;
      
      model ST3LRh_bypass 
        "Steam turbine with three pressure levels and reheat, inlet and by-pass valves " 
        extends Interfaces.ST_3LRh;
        
        //Mixers Parameters
        parameter SI.Volume mixLP_V "Internal volume of the LP mixer";
        parameter SI.Enthalpy mixLP_hstart = LPT_hstart_in 
          "Enthalpy start value of the LP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "LP mixer"));
        parameter SI.Pressure mixLP_pstart = steamLPNomPressure 
          "Pressure start value of the LP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "LP mixer"));
        parameter SI.Volume mixIP_V "Internal volume of the IP mixer";
        parameter SI.Enthalpy mixIP_hstart = HPT_hstart_out 
          "Enthalpy start value of the IP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "IP mixer"));
        parameter SI.Pressure mixIP_pstart = steamIPNomPressure 
          "Pressure start value of the IP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "IP mixer"));
        
        //Valves Parameters
        parameter Real valveHP_Cv=0 "Cv (US) flow coefficient of the HP valve" annotation(Dialog(group= "HP valves"));
        parameter Modelica.SIunits.Pressure valveHP_dpnom 
          "Nominal pressure drop of the HP valve"                                   annotation(Dialog(group= "HP valves"));
        parameter Real bypassHP_Cv=0 
          "Cv (US) flow coefficient of the HP valve of bypass"                                 annotation(Dialog(group= "HP valves"));
        parameter Real valveIP_Cv=0 "Cv (US) flow coefficient of the IP valve" annotation(Dialog(group= "IP valves"));
        parameter Modelica.SIunits.Pressure valveIP_dpnom 
          "Nominal pressure drop of the IP valve"                                   annotation(Dialog(group= "IP valves"));
        parameter Real bypassIP_Cv=0 
          "Cv (US) flow coefficient of the IP valve of bypass" annotation(Dialog(group= "IP valves"));
        parameter Real valveDrumIP_Cv=0 
          "Cv (US) flow coefficient of the valve of pressurization IP drum" 
                                                                          annotation(Dialog(group= "IP valves"));
        parameter Real valveLP_Cv=0 "Cv (US) flow coefficient of the LP valve" annotation(Dialog(group= "LP valves"));
        parameter Modelica.SIunits.Pressure valveLP_dpnom 
          "Nominal pressure drop of the LP valve"                                   annotation(Dialog(group= "LP valves"));
        parameter Real bypassLP_Cv=0 
          "Cv (US) flow coefficient of the HP valve of bypass" annotation(Dialog(group= "LP valves"));
        parameter Real valveDrumLP_Cv=0 
          "Cv (US) flow coefficient of the valve of pressurization LP drum" 
                                                                          annotation(Dialog(group= "LP valves"));
        
        annotation (Diagram, Icon(
            Polygon(points=[-166,80; -154,80; -166,60; -154,60; -166,80],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[-140,120; -160,120],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[-120,120; -100,120],
                                          style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Polygon(points=[-46,80; -34,80; -46,60; -34,60; -46,80],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[-40,120; -20,120],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[0,120; 20,120],style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Polygon(points=[74,80; 86,80; 74,60; 86,60; 74,80],    style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Line(points=[80,120; 100,120],
                                        style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Line(points=[140,100; 140,120; 120,120],
                                               style(
                color=3,
                rgbcolor={0,0,255},
                thickness=2)),
            Polygon(points=[100,114; 100,126; 120,114; 120,126; 100,114],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-20,114; -20,126; 0,114; 0,126; -20,114],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255})),
            Polygon(points=[-140,114; -140,126; -120,114; -120,126; -140,114],
                                                                   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=3,
                rgbfillColor={0,0,255}))));
        Water.SteamTurbineStodola ST_HP(
          redeclare package Medium = FluidMedium,
          wnom=steamHPNomFlowRate,
          eta_mech=HPT_eta_mech,
          eta_iso_nom=HPT_eta_iso_nom,
          Kt=HPT_Kt,
          hstartin=HPT_hstart_in,
          hstartout=HPT_hstart_out,
          pstart_in=HPT_pstart_in,
          pstart_out=HPT_pstart_out,
          wstart=HPT_wstart)            annotation (extent=[-120,-20; -80,20]);
        Water.SteamTurbineStodola ST_IP(
          redeclare package Medium = FluidMedium,
          eta_mech=IPT_eta_mech,
          eta_iso_nom=IPT_eta_iso_nom,
          Kt=IPT_Kt,
          hstartin=IPT_hstart_in,
          hstartout=IPT_hstart_out,
          pstart_in=IPT_pstart_in,
          pstart_out=IPT_pstart_out,
          wstart=IPT_wstart,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[0,-20; 40,20]);
        Water.SteamTurbineStodola ST_LP(
          redeclare package Medium = FluidMedium,
          eta_mech=LPT_eta_mech,
          eta_iso_nom=LPT_eta_iso_nom,
          Kt=LPT_Kt,
          hstartin=LPT_hstart_in,
          hstartout=LPT_hstart_out,
          pstart_in=LPT_pstart_in,
          pstart_out=LPT_pstart_out,
          wstart=LPT_wstart,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate) 
                                        annotation (extent=[120,-20; 160,20]);
        Water.Mixer mixIP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          V=mixIP_V,
          pstart=mixIP_pstart,
          hstart=mixIP_hstart) 
                          annotation (extent=[-110,120; -90,140],
                                                             rotation=90);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then ThermoPower.Choices.Init.Options.steadyState else 
                    ThermoPower.Choices.Init.Options.noInit,
          hstart=mixLP_hstart,
          V=mixLP_V,
          pstart=mixLP_pstart) 
                          annotation (extent=[64,80; 84,100],rotation=270);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveHP_Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          dpnom=valveHP_dpnom,
          redeclare package Medium = FluidMedium,
          hstart=HPT_hstart_in) 
                               annotation (extent=[-130,26; -150,6],
                                                                   rotation=180);
        Water.ValveVap valveIP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveIP_Cv,
          pnom=steamIPNomPressure,
          dpnom=valveIP_dpnom,
          redeclare package Medium = FluidMedium,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate,
          hstart=IPT_hstart_in) 
                               annotation (extent=[-10,26; -30,6],rotation=180);
        Water.ValveVap valveLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          dpnom=valveLP_dpnom,
          redeclare package Medium = FluidMedium,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate,
          Cv=valveLP_Cv,
          hstart=LPT_hstart_in) 
                               annotation (extent=[110,26; 90,6],rotation=180);
        Water.ValveVap byPassHP(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          dpnom=steamHPNomPressure - steamIPNomPressure,
          Cv=bypassHP_Cv,
          hstart=HPT_hstart_in) annotation (extent=[-110,50; -130,30],
                                                                     rotation=180);
        Water.ValveVap byPassIP(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamIPNomPressure,
          dpnom=steamIPNomPressure - steamLPNomPressure,
          wnom=steamIPNomFlowRate + steamHPNomFlowRate,
          Cv=bypassIP_Cv,
          hstart=IPT_hstart_in) annotation (extent=[10,50; -10,30],rotation=180);
        Water.ValveVap byPassLP(
          redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          wnom=steamLPNomFlowRate + steamIPNomFlowRate + steamHPNomFlowRate,
          Cv=bypassLP_Cv,
          dpnom=steamLPNomPressure - pcond,
          hstart=LPT_hstart_in)  annotation (extent=[130,50; 110,30],
                                                                    rotation=180);
        Water.FlowJoin flowHPJoin(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_in2=false,
          rev_out=false)        annotation (extent=[-86,36; -66,56], rotation=
              90);
        Water.FlowSplit flowHPSplit(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false)         annotation (extent=[-170,36; -150,56],
                                                                       rotation=270);
        Water.FlowJoin flowIPJoin(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_in2=false,
          rev_out=false)         annotation (extent=[34,36; 54,56], rotation=90);
        Water.FlowSplit flowIPSplit(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false)          annotation (extent=[-50,36; -30,56],rotation=270);
        Water.FlowJoin flowLPJoin(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_in2=false,
          rev_out=false)         annotation (extent=[166,0; 186,20], rotation=
              270);
        Water.FlowSplit flowLPSplit(            redeclare package Medium = 
              FluidMedium,
          rev_in1=false,
          rev_out1=false,
          rev_out2=false)          annotation (extent=[64,36; 84,56], rotation=270);
        Water.ValveVap valveDrumIP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          redeclare package Medium = FluidMedium,
          Cv=valveDrumIP_Cv,
          pnom=steamIPNomPressure,
          wnom=steamIPNomFlowRate,
          hstart=HPT_hstart_out,
          dpnom=valveIP_dpnom,
          CheckValve=true)     annotation (extent=[10,140; 30,120],rotation=90);
        Water.ValveVap valveDrumLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          redeclare package Medium = FluidMedium,
          Cv=valveDrumLP_Cv,
          pnom=steamLPNomPressure,
          wnom=steamLPNomFlowRate,
          hstart=LPT_hstart_in,
          dpnom=valveLP_dpnom,
          CheckValve=true)     annotation (extent=[70,140; 90,120],rotation=90);
        Water.SensP p_ST_LP(            redeclare package Medium = FluidMedium)
          annotation (extent=[90,74; 110,94]);
        Water.SensP p_ST_IP(            redeclare package Medium = FluidMedium)
          annotation (extent=[-90,134; -70,154]);
      protected 
        replaceable Components.BaseReader_water stateHPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-170,100; -150,80],rotation=90);
        replaceable Components.BaseReader_water stateHPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-116,100; -96,80], rotation=270);
        replaceable Components.BaseReader_water stateIPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-50,100; -30,80],  rotation=90);
        replaceable Components.BaseReader_water stateIPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[34,100; 54,80],    rotation=270);
        replaceable Components.BaseReader_water stateLPT_in(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[64,76; 84,56],     rotation=90);
        replaceable Components.BaseReader_water stateLPT_out(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[166,-10; 186,-30], rotation=90);
        replaceable Components.BaseReader_water stateForRh(redeclare package 
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-110,170; -90,150],rotation=270);
      equation 
        connect(valveIP.outlet,ST_IP. inlet) annotation (points=[-10,16; -10,
              15.8; 5,15.8],     style(thickness=2));
        connect(ActuatorsBus.Opening_valveHP,valveHP. theta) annotation (points=[200,-140;
              -180,-140; -180,30; -140,30; -140,24],       style(color=52, rgbcolor={
                213,255,170}));
        connect(ActuatorsBus.Opening_valveIP,valveIP. theta) annotation (points=[200,-140;
              -60,-140; -60,34; -20,34; -20,24],      style(color=52, rgbcolor={213,
                255,170}));
        connect(ActuatorsBus.Opening_valveLP,valveLP. theta) annotation (points=[200,-140;
              60,-140; 60,32; 100,32; 100,24],
                                        style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_byPassHP,byPassHP. theta) annotation (points=[200,-140;
              -180,-140; -180,30; -140,30; -140,60; -120,60; -120,48],
                                             style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_byPassIP,byPassIP. theta) annotation (points=[200,-140;
              -60,-140; -60,34; -20,34; -20,60; 9.79685e-016,60; 9.79685e-016,
              48],                       style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_byPassLP,byPassLP. theta) annotation (points=[200,-140;
              60,-140; 60,32; 100,32; 100,60; 120,60; 120,48],
                                             style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_valveDrumIP,valveDrumIP. theta) annotation (
            points=[200,-140; -60,-140; -60,130; 12,130],
                                   style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_valveDrumLP,valveDrumLP. theta) annotation (
            points=[200,-140; 60,-140; 60,130; 72,130],                   style(
              color=52, rgbcolor={213,255,170}));
        connect(SensorsBus.p_STLP_in,p_ST_LP. p) annotation (points=[200,-80;
              160,-80; 160,90; 108,90],
                                  style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(SensorsBus.p_STIP_in,p_ST_IP. p) annotation (points=[200,-80;
              160,-80; 160,150; -72,150],
                                   style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(p_ST_IP.flange,mixIP. out) annotation (points=[-80,140; -100,
              140],                    style(
            color=3,
            rgbcolor={0,0,255},
            thickness=2));
        connect(ST_HP.inlet,valveHP. outlet) annotation (points=[-115,15.8;
              -126.5,15.8; -126.5,16; -130,16], style(thickness=2));
        connect(valveHP.inlet,flowHPSplit. out2) 
          annotation (points=[-150,16; -164,16; -164,40], style(thickness=2));
        connect(byPassHP.inlet,flowHPSplit. out1) 
          annotation (points=[-130,40; -155.8,40], style(thickness=2));
        connect(flowHPJoin.in2,ST_HP. outlet) 
          annotation (points=[-72,40; -72,16; -84.6,16], style(thickness=2));
        connect(flowHPJoin.in1,byPassHP. outlet) 
          annotation (points=[-80,40; -110,40], style(thickness=2));
        connect(ST_HP.shaft_a, Shaft_a) annotation (points=[-113.2,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(valveDrumIP.outlet,mixIP. in2) annotation (points=[20,120; 20,
              110; -94,110; -94,122.1], style(thickness=2));
        connect(valveIP.inlet,flowIPSplit. out2) 
          annotation (points=[-30,16; -44,16; -44,40], style(thickness=2));
        connect(byPassIP.inlet,flowIPSplit. out1) 
          annotation (points=[-10,40; -35.8,40], style(thickness=2));
        connect(ST_IP.outlet,flowIPJoin. in2) 
          annotation (points=[35.4,16; 48,16; 48,40], style(thickness=2));
        connect(flowIPJoin.in1,byPassIP. outlet) 
          annotation (points=[40,40; 10,40], style(thickness=2));
        connect(ST_LP.inlet,valveLP. outlet) annotation (points=[125,15.8;
              118.5,15.8; 118.5,16; 110,16], style(thickness=2));
        connect(valveLP.inlet,flowLPSplit. out2) 
          annotation (points=[90,16; 70,16; 70,40], style(thickness=2));
        connect(byPassLP.inlet,flowLPSplit. out1) 
          annotation (points=[110,40; 78.2,40], style(thickness=2));
        connect(flowLPJoin.in2,ST_LP. outlet) 
          annotation (points=[172,16; 155.4,16], style(thickness=2));
        connect(flowLPJoin.in1,byPassLP. outlet) 
          annotation (points=[180,16; 180,40; 130,40], style(thickness=2));
        connect(p_ST_LP.flange,mixLP. out) annotation (points=[100,80; 74,80],
            style(
            color=3,
            rgbcolor={0,0,255},
            thickness=2));
        connect(Shaft_b,ST_LP. shaft_b) annotation (points=[200,0; 152.8,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_a,ST_IP. shaft_b) annotation (points=[126.8,0; 32.8,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_IP.shaft_a,ST_HP. shaft_b) annotation (points=[6.8,0; -87.2,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(valveDrumIP.inlet, SteamToMix) 
          annotation (points=[20,140; 20,200],         style(thickness=2));
        connect(mixLP.in1,valveDrumLP. outlet) 
          annotation (points=[80,98; 80,120], style(thickness=2));
        connect(valveDrumLP.inlet, LPT_In) 
          annotation (points=[80,140; 80,200],         style(thickness=2));
        connect(stateHPT_in.inlet, HPT_In) 
          annotation (points=[-160,96; -160,200], style(thickness=2));
        connect(stateHPT_out.outlet, mixIP.in1) 
          annotation (points=[-106,96; -106,122], style(thickness=2));
        connect(stateIPT_in.inlet, IPT_In) 
          annotation (points=[-40,96; -40,200], style(thickness=2));
        connect(stateIPT_out.outlet, mixLP.in2) annotation (points=[44,96; 44,140;
              68,140; 68,97.9], style(thickness=2));
        connect(stateLPT_in.inlet, mixLP.out) 
          annotation (points=[74,72; 74,80], style(thickness=2));
        connect(LPT_Out, stateLPT_out.outlet) annotation (points=[140,-200; 140,
              -40; 176,-40; 176,-26], style(thickness=2));
        connect(stateForRh.outlet, HPT_Out) 
          annotation (points=[-100,166; -100,200], style(thickness=2));
        connect(mixIP.out, stateForRh.inlet) 
          annotation (points=[-100,140; -100,154], style(thickness=2));
        connect(flowLPSplit.in1, stateLPT_in.outlet) 
          annotation (points=[74,52; 74,60], style(thickness=2));
        connect(flowIPJoin.out, stateIPT_out.inlet) 
          annotation (points=[44,52; 44,84], style(thickness=2));
        connect(flowIPSplit.in1, stateIPT_in.outlet) 
          annotation (points=[-40,52; -40,84], style(thickness=2));
        connect(flowHPJoin.out, stateHPT_out.inlet) annotation (points=[-76,52;
              -76,66; -106,66; -106,84], style(thickness=2));
        connect(flowHPSplit.in1, stateHPT_in.outlet) 
          annotation (points=[-160,52; -160,84], style(thickness=2));
        connect(stateLPT_out.inlet, flowLPJoin.out) 
          annotation (points=[176,-14; 176,4; 176,4], style(thickness=2));
      end ST3LRh_bypass;
      
      model ST_2LHU 
        "Steam Turbine Group (two pressure levels) with coupling Heat Usage" 
        extends Interfaces.ST_2LHU;
        
        //Mixers Parameters
        parameter SI.Volume mixLP_V "Internal volume of the LP mixer";
        parameter SI.Enthalpy mixLP_hstart 
          "Enthalpy start value of the LP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "LP mixer"));
        parameter SI.Pressure mixLP_pstart 
          "Pressure start value of the LP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "LP mixer"));
        
        //Valves Parameters
        parameter Real valveHP_Cv=0 "Cv (US) flow coefficient of the HP valve" annotation(Dialog(group= "HP valves"));
        parameter SI.Pressure valveHP_dpnom 
          "Nominal pressure drop of the HP valve"                                   annotation(Dialog(group= "HP valves"));
        parameter Real bypassHP_Cv=0 
          "Cv (US) flow coefficient of the HP valve of bypass"                                 annotation(Dialog(group= "HP valves"));
        parameter Real valveLP_Cv=0 "Cv (US) flow coefficient of the LP valve" annotation(Dialog(group= "LP valves"));
        parameter SI.Pressure valveLP_dpnom 
          "Nominal pressure drop of the LP valve"                                   annotation(Dialog(group= "LP valves"));
        parameter Real bypassLP_Cv=0 
          "Cv (US) flow coefficient of the HP valve of bypass" annotation(Dialog(group= "LP valves"));
        parameter Real valveHU_Cv=0 
          "Cv (US) flow coefficient of the valve for HU"                           annotation(Dialog(group= "Heat Usage valve"));
        parameter SI.Pressure valveHU_dpnom 
          "Nominal pressure drop of the valve for HU"                                   annotation(Dialog(group= "Heat Usage valve"));
        
        Water.SteamTurbineStodola ST_HP(
          redeclare package Medium = FluidMedium,
          wnom=steamHPNomFlowRate,
          eta_mech=HPT_eta_mech,
          eta_iso_nom=HPT_eta_iso_nom,
          Kt=HPT_Kt,
          hstartin=HPT_hstart_in,
          hstartout=HPT_hstart_out,
          pstart_in=HPT_pstart_in,
          pstart_out=HPT_pstart_out,
          wstart=HPT_wstart)            annotation (extent=[-72,-34; -32,6]);
        Water.SteamTurbineStodola ST_LP(
          redeclare package Medium = FluidMedium,
          eta_mech=LPT_eta_mech,
          eta_iso_nom=LPT_eta_iso_nom,
          Kt=LPT_Kt,
          hstartin=LPT_hstart_in,
          hstartout=LPT_hstart_out,
          pstart_in=LPT_pstart_in,
          pstart_out=LPT_pstart_out,
          wstart=LPT_wstart,
          wnom=steamHPNomFlowRate)      annotation (extent=[10,-34; 50,6]);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          hstart=mixLP_hstart,
          V=mixLP_V,
          pstart=mixLP_pstart) 
                          annotation (extent=[-42,-70; -26,-54],
                                                             rotation=180);
        Water.ValveVap valveHU(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          redeclare package Medium = FluidMedium,
          Cv=valveHU_Cv,
          dpnom=valveHU_dpnom,
          pnom=steamLPNomPressure,
          wnom=steamHPNomFlowRate,
          hstart=HPT_hstart_out) 
                               annotation (extent=[-8,-28; -26,-46],
                                                                  rotation=90);
        Water.ValveVap valveLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          CheckValve=true,
          dpnom=valveLP_dpnom,
          redeclare package Medium = FluidMedium,
          Cv=valveLP_Cv,
          wnom=steamHPNomFlowRate,
          hstart=LPT_hstart_in) 
                               annotation (extent=[6,40; 26,20], rotation=90);
        Water.FlowSplit flowHUSplit(redeclare package Medium = FluidMedium) 
                                  annotation (extent=[-20,-6; -8,6],   rotation=270);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveHP_Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          CheckValve=true,
          dpnom=valveHP_dpnom,
          redeclare package Medium = FluidMedium,
          hstart=HPT_hstart_in) 
                               annotation (extent=[-76,40; -56,20],rotation=90);
        Water.ValveVap byPassHP(redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          CheckValve=true,
          Cv=bypassHP_Cv,
          dpnom=steamHPNomPressure - steamLPNomPressure,
          hstart=HPT_hstart_in) annotation (extent=[-46,58; -26,38], rotation=90);
        Water.FlowJoin flowHPJoin(redeclare package Medium = FluidMedium) 
                                annotation (extent=[-20,12; -8,24], rotation=
              270);
        Water.FlowSplit flowHPSplit1(
                                    redeclare package Medium = FluidMedium) 
                                  annotation (extent=[-56,70; -44,82], rotation=270);
        Water.ValveVap byPassLP(redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          CheckValve=true,
          Cv=bypassLP_Cv,
          dpnom=steamLPNomPressure - pcond,
          wnom=steamHPNomFlowRate,
          hstart=LPT_hstart_in)  annotation (extent=[36,58; 56,38], rotation=90);
        Water.FlowSplit flowLPSplit(redeclare package Medium = FluidMedium) 
                                   annotation (extent=[22,70; 34,82], rotation=270);
        Water.FlowJoin flowLPJoin(redeclare package Medium = FluidMedium) 
                                 annotation (extent=[54,24; 66,36], rotation=0);
        annotation (Diagram);
      equation 
        connect(ST_HP.shaft_a, Shaft_a) annotation (points=[-65.2,-14; -82,-14;
              -82,0; -200,0],
                       style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_b, Shaft_b) annotation (points=[42.8,-14; 58,-14;
              58,0; 200,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_a, ST_HP.shaft_b) annotation (points=[16.8,-14;
              -39.2,-14], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(flowHPSplit1.in1, HPT_In) 
          annotation (points=[-50,79.6; -50,200; -120,200],style(thickness=2));
        connect(flowHPSplit1.out2, valveHP.inlet) annotation (points=[-52.4,
              72.4; -52.4,66; -66,66; -66,40], style(thickness=2));
        connect(valveHP.outlet, ST_HP.inlet) 
          annotation (points=[-66,20; -66,1.8; -67,1.8], style(thickness=2));
        connect(flowHPJoin.in1, byPassHP.outlet) annotation (points=[-11.6,21.6;
              -12,22; -12,32; -36,32; -36,38], style(thickness=2));
        connect(mixLP.out, SteamForHU) 
          annotation (points=[-42,-62; -60,-62; -60,-200], style(thickness=2));
        connect(valveHU.inlet, flowHUSplit.out2) annotation (points=[-17,-28;
              -16.4,-28; -16.4,-3.6], style(thickness=2));
        connect(LPT_In, mixLP.in1) annotation (points=[0,200; 0,80; 72,80; 72,
              -66; -27.6,-66; -27.6,-66.8], style(thickness=2));
        connect(valveLP.outlet, ST_LP.inlet) 
          annotation (points=[16,20; 16,1.8; 15,1.8], style(thickness=2));
        connect(flowHPJoin.in2, ST_HP.outlet) annotation (points=[-16.4,21.6;
              -16.4,26; -36.6,26; -36.6,2], style(thickness=2));
        connect(mixLP.in2, valveHU.outlet) annotation (points=[-27.68,-57.2;
              -17,-57.2; -17,-46], style(thickness=2));
        connect(byPassLP.inlet,flowLPSplit. out1) annotation (points=[46,58; 46,
              66; 30.52,66; 30.52,72.4], style(thickness=2));
        connect(flowLPSplit.out2, valveLP.inlet) annotation (points=[25.6,72.4;
              26,66; 16,66; 16,40], style(thickness=2));
        connect(flowLPSplit.in1, flowHUSplit.out1) annotation (points=[28,79.6;
              28,86; -4,86; -4,-10; -11.48,-10; -11.48,-3.6], style(thickness=2));
        connect(flowHUSplit.in1, flowHPJoin.out) 
          annotation (points=[-14,3.6; -14,14.4], style(thickness=2));
        connect(byPassHP.inlet, flowHPSplit1.out1) annotation (points=[-36,58;
              -36,66; -47.48,66; -47.48,72.4], style(thickness=2));
        connect(flowLPJoin.out, LPT_Out) annotation (points=[63.6,30; 80,30; 80,
              -80; 60,-80; 60,-200], style(thickness=2));
        connect(flowLPJoin.in1, byPassLP.outlet) 
          annotation (points=[56.4,32.4; 46,32.4; 46,38], style(thickness=2));
        connect(flowLPJoin.in2, ST_LP.outlet) annotation (points=[56.4,27.6;
              45.4,27.6; 45.4,2], style(thickness=2));
        connect(ActuatorsBus.Opening_valveHP, valveHP.theta) annotation (points=[98,-72;
              -88,-72; -88,30; -74,30],         style(color=52, rgbcolor={213,
                255,170}));
        connect(ActuatorsBus.Opening_valveLP, valveLP.theta) annotation (points=
             [98,-72; 0,-72; 0,30; 8,30], style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_byPassHP, byPassHP.theta) annotation (
            points=[98,-72; -88,-72; -88,48; -44,48], style(color=52, rgbcolor=
                {213,255,170}));
        connect(ActuatorsBus.Opening_byPassLP, byPassLP.theta) annotation (
            points=[98,-72; 0,-72; 0,48; 38,48], style(color=52, rgbcolor={213,
                255,170}));
        connect(ActuatorsBus.Opening_valveHU, valveHU.theta) annotation (points=
             [98,-72; 0,-72; 0,-37; -9.8,-37], style(color=52, rgbcolor={213,
                255,170}));
      end ST_2LHU;
      
      model ST_2LRhHU 
        "Steam Turbine Group (two pressure levels and reheat) with coupling Heat Usage" 
        extends Interfaces.ST_2LRhHU;
        
        //Mixers Parameters
        parameter SI.Volume mixLP_V "Internal volume of the LP mixer";
        parameter SI.Enthalpy mixLP_hstart 
          "Enthalpy start value of the LP mixer" annotation (Dialog(tab = "Initialization",
                                                                    group = "LP mixer"));
        parameter SI.Pressure mixLP_pstart 
          "Pressure start value of the LP mixer" 
              annotation (Dialog(tab = "Initialization",
                                 group = "LP mixer"));
        
        //Valves Parameters
        parameter Real valveHP_Cv=0 "Cv (US) flow coefficient of the HP valve" annotation(Dialog(group= "HP valves"));
        parameter SI.Pressure valveHP_dpnom 
          "Nominal pressure drop of the HP valve"                                   annotation(Dialog(group= "HP valves"));
        parameter Real bypassHP_Cv=0 
          "Cv (US) flow coefficient of the HP valve of bypass"                                 annotation(Dialog(group= "HP valves"));
        parameter Real valveLP_Cv=0 "Cv (US) flow coefficient of the LP valve" annotation(Dialog(group= "LP valves"));
        parameter SI.Pressure valveLP_dpnom 
          "Nominal pressure drop of the LP valve"                                   annotation(Dialog(group= "LP valves"));
        parameter Real bypassLP_Cv=0 
          "Cv (US) flow coefficient of the HP valve of bypass" annotation(Dialog(group= "LP valves"));
        
        Water.SteamTurbineStodola ST_HP(
          redeclare package Medium = FluidMedium,
          wnom=steamHPNomFlowRate,
          eta_mech=HPT_eta_mech,
          eta_iso_nom=HPT_eta_iso_nom,
          Kt=HPT_Kt,
          hstartin=HPT_hstart_in,
          hstartout=HPT_hstart_out,
          pstart_in=HPT_pstart_in,
          pstart_out=HPT_pstart_out,
          wstart=HPT_wstart)            annotation (extent=[-72,-40; -32,0]);
        Water.SteamTurbineStodola ST_LP(
          redeclare package Medium = FluidMedium,
          eta_mech=LPT_eta_mech,
          eta_iso_nom=LPT_eta_iso_nom,
          Kt=LPT_Kt,
          hstartin=LPT_hstart_in,
          hstartout=LPT_hstart_out,
          pstart_in=LPT_pstart_in,
          pstart_out=LPT_pstart_out,
          wstart=LPT_wstart,
          wnom=steamHPNomFlowRate)      annotation (extent=[12,-40; 52,0]);
        Water.Mixer mixLP(
          redeclare package Medium = FluidMedium,
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          hstart=mixLP_hstart,
          V=mixLP_V,
          pstart=mixLP_pstart) 
                          annotation (extent=[-36,-52; -24,-40],
                                                             rotation=180);
        Water.ValveVap valveLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          CheckValve=true,
          dpnom=valveLP_dpnom,
          redeclare package Medium = FluidMedium,
          Cv=valveLP_Cv,
          wnom=steamHPNomFlowRate,
          hstart=LPT_hstart_in) 
                               annotation (extent=[8,40; 28,20], rotation=90);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          Cv=valveHP_Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          CheckValve=true,
          dpnom=valveHP_dpnom,
          redeclare package Medium = FluidMedium,
          hstart=HPT_hstart_in) 
                               annotation (extent=[-76,40; -56,20],rotation=90);
        Water.ValveVap byPassHP(redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamHPNomPressure,
          wnom=steamHPNomFlowRate,
          CheckValve=true,
          Cv=bypassHP_Cv,
          dpnom=steamHPNomPressure - steamLPNomPressure,
          hstart=HPT_hstart_in) annotation (extent=[-46,58; -26,38], rotation=90);
        Water.FlowJoin flowHPJoin(redeclare package Medium = FluidMedium) 
                                annotation (extent=[-22,10; -10,22],rotation=270);
        Water.FlowSplit flowHPSplit1(
                                    redeclare package Medium = FluidMedium) 
                                  annotation (extent=[-66,72; -54,84], rotation=270);
        Water.ValveVap byPassLP(redeclare package Medium = FluidMedium,
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          pnom=steamLPNomPressure,
          CheckValve=true,
          Cv=bypassLP_Cv,
          dpnom=steamLPNomPressure - pcond,
          wnom=steamHPNomFlowRate,
          hstart=LPT_hstart_in)  annotation (extent=[36,58; 56,38], rotation=90);
        Water.FlowSplit flowLPSplit(redeclare package Medium = FluidMedium) 
                                   annotation (extent=[14,70; 26,82], rotation=270);
        Water.FlowJoin flowLPJoin(redeclare package Medium = FluidMedium) 
                                 annotation (extent=[54,14; 66,26], rotation=0);
        annotation (Diagram);
        Water.FlowSplit flowHUSplit(redeclare package Medium = FluidMedium) 
                                  annotation (extent=[-54,-68; -42,-56],
                                                                       rotation=270);
      equation 
        connect(ST_HP.shaft_a, Shaft_a) annotation (points=[-65.2,-20; -82,-20;
              -82,0; -200,0],
                       style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_b, Shaft_b) annotation (points=[44.8,-20; 58,-20;
              58,0; 200,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ST_LP.shaft_a, ST_HP.shaft_b) annotation (points=[18.8,-20;
              -39.2,-20],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(flowHPSplit1.in1, HPT_In) 
          annotation (points=[-60,81.6; -60,140.8; -60,200; -160,200],
                                                  style(thickness=2));
        connect(flowHPSplit1.out2, valveHP.inlet) annotation (points=[-62.4,
              74.4; -62,66; -66,66; -66,40],
                                         style(thickness=2));
        connect(valveHP.outlet, ST_HP.inlet) 
          annotation (points=[-66,20; -66,-4.2; -67,-4.2],  style(thickness=2));
        connect(flowHPJoin.in1, byPassHP.outlet) annotation (points=[-13.6,19.6;
              -14,20; -14,30; -36,30; -36,38],
                                           style(thickness=2));
        connect(LPT_In, mixLP.in1) annotation (points=[80,200; 80,80; 74,80; 74,
              -49.6; -25.2,-49.6],     style(thickness=2));
        connect(valveLP.outlet, ST_LP.inlet) 
          annotation (points=[18,20; 18,-4.2; 17,-4.2],  style(thickness=2));
        connect(flowHPJoin.in2, ST_HP.outlet) annotation (points=[-18.4,19.6;
              -18.4,24; -36.6,24; -36.6,-4],
                                        style(thickness=2));
        connect(byPassLP.inlet,flowLPSplit. out1) annotation (points=[46,58; 46,
              64; 22.52,64; 22.52,72.4], style(thickness=2));
        connect(flowLPSplit.out2, valveLP.inlet) 
          annotation (points=[17.6,72.4; 18,54; 18,40], style(thickness=2));
        connect(flowLPJoin.out, LPT_Out) annotation (points=[63.6,20; 80,20; 80,
              -80; 80,-80; 80,-200],
                                style(thickness=2));
        connect(flowLPJoin.in1, byPassLP.outlet) 
          annotation (points=[56.4,22.4; 46,22.4; 46,38], style(thickness=2));
        connect(flowLPJoin.in2, ST_LP.outlet) 
          annotation (points=[56.4,17.6; 47.4,17.6; 47.4,-4],  style(thickness=2));
        connect(flowLPSplit.in1, IPT_In) 
          annotation (points=[20,79.6; 20,139.8; 20,200; -40,200],
                                                style(thickness=2));
        connect(ActuatorsBus.Opening_valveHP, valveHP.theta) annotation (points=[98,-72;
              -88,-72; -88,30; -74,30],         style(color=52, rgbcolor={213,
                255,170}));
        connect(ActuatorsBus.Opening_valveLP, valveLP.theta) annotation (points=[98,-72;
              0,-72; 0,30; 10,30],        style(color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.Opening_byPassHP, byPassHP.theta) annotation (
            points=[98,-72; -88,-72; -88,48; -44,48], style(color=52, rgbcolor=
                {213,255,170}));
        connect(ActuatorsBus.Opening_byPassLP, byPassLP.theta) annotation (
            points=[98,-72; 0,-72; 0,48; 38,48], style(color=52, rgbcolor={213,
                255,170}));
        connect(byPassHP.inlet, flowHPSplit1.out1) annotation (points=[-36,58;
              -36,66; -58,66; -58,74.4; -57.48,74.4], style(thickness=2));
        connect(mixLP.in2, flowHPJoin.out) annotation (points=[-25.26,-42.4;
              -16,-42.4; -16,12.4],
                                style(thickness=2));
        connect(SteamForHU, flowHUSplit.out2) annotation (points=[-40,-200; -40,
              -65.6; -50.4,-65.6], style(thickness=2));
        connect(flowHUSplit.in1, mixLP.out) annotation (points=[-48,-58.4; -48,
              -46; -36,-46], style(thickness=2));
        connect(flowHUSplit.out1, HPT_Out) annotation (points=[-45.48,-65.6;
              -45.48,-80; -6,-80; -6,60; -100,60; -100,200],
                                                           style(thickness=2));
      end ST_2LRhHU;
      
      model CondPlant "Condensation Plant" 
        extends Interfaces.CondPlant;
        replaceable Components.Condenser condenser(
          redeclare package FluidMedium = FluidMedium,
          N_cool=N_cool,
          condNomFlowRate=condNomFlowRate,
          coolNomFlowRate=coolNomFlowRate,
          condNomPressure=condNomPressure,
          coolNomPressure=coolNomPressure,
          condExchSurface=condExchSurface,
          coolExchSurface=coolExchSurface,
          condVol=condVol,
          coolVol=coolVol,
          metalVol=metalVol,
          cm=cm,
          rhoMetal=rhoMetal,
          use_T=use_T,
          SSInit=SSInit,
          pstart_cond=pstart_cond,
          Tstart_M_in=Tstart_M_in,
          Tstart_M_out=Tstart_M_out,
          Tstart_cool_in=Tstart_cool_in,
          Tstart_cool_out=Tstart_cool_out,
          hstart_cool_in=hstart_cool_in,
          hstart_cool_out=hstart_cool_out)       extends Interfaces.Condenser(
          redeclare package FluidMedium = FluidMedium,
          N_cool=N_cool,
          condNomFlowRate=condNomFlowRate,
          coolNomFlowRate=coolNomFlowRate,
          condNomPressure=condNomPressure,
          coolNomPressure=coolNomPressure,
          condExchSurface=condExchSurface,
          coolExchSurface=coolExchSurface,
          condVol=condVol,
          coolVol=coolVol,
          metalVol=metalVol,
          cm=cm,
          rhoMetal=rhoMetal,
          use_T=use_T,
          SSInit=SSInit,
          pstart_cond=pstart_cond,
          Tstart_M_in=Tstart_M_in,
          Tstart_M_out=Tstart_M_out,
          Tstart_cool_in=Tstart_cool_in,
          Tstart_cool_out=Tstart_cool_out,
          hstart_cool_in=hstart_cool_in,
          hstart_cool_out=hstart_cool_out) 
                                       annotation (extent=[-18,-22; 22,18]);
        annotation (Diagram);
        Water.SourceW coolingIn(redeclare package Medium = FluidMedium,
          p0=coolNomPressure,
          w0=coolNomFlowRate,
          h=hstart_cool_in)   annotation (extent=[90,-24; 70,-4]);
        Water.SinkP coolingOut(redeclare package Medium = FluidMedium,
          p0=coolNomPressure,
          h=hstart_cool_out) 
                          annotation (extent=[70,30; 90,50]);
        replaceable Components.BaseReader_water stateCoolingOut(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[40,30; 60,50]);
        replaceable Components.BaseReader_water stateCoolingIn(redeclare 
            package Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[40,-24; 60,-4], rotation=180);
        Modelica.Blocks.Interfaces.RealOutput ratio_VvonVtot 
          annotation (extent=[-116,-10; -96,10], rotation=180);
      equation 
        connect(condenser.steamIn, SteamIn) 
          annotation (points=[0,18; 0,100], style(thickness=2));
        connect(condenser.waterOut, WaterOut) 
          annotation (points=[0,-22; 0,-100], style(thickness=2));
        connect(stateCoolingOut.outlet, coolingOut.flange) annotation (points=[
              56,40; 70,40], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateCoolingOut.inlet, condenser.coolingOut) annotation (points=[44,40;
              34,40; 34,10; 22,10],      style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateCoolingIn.inlet, coolingIn.flange) annotation (points=[56,
              -14; 70,-14], style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(stateCoolingIn.outlet, condenser.coolingIn) annotation (points=[44,-14;
              34,-14; 34,-10; 22,-10],            style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(condenser.ratio_VvonVtot, ratio_VvonVtot) annotation (points=[-18,0;
              -106,0],        style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
      end CondPlant;
      
      model CondPlant_cc 
        "Condensation plant with condenser ratio control (type ImpPressureCondenser_tap)" 
        extends Interfaces.CondPlant_base;
        parameter Real setPoint_ratio 
          "SetPoint ratio Steam Volume / Total Volume";
        
        Control.PID pID(
          PVmax=1,
          PVmin=0.1,
          CSmin=-0.6,
          CSmax=0.6,
          Ti=2000,
          Kp=-3)      annotation (extent=[-40,34; -60,54], rotation=0);
        Modelica.Blocks.Sources.Constant setPoint(k=setPoint_ratio) 
                    annotation (extent=[-6,42; -18,54]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Components.CondenserPreP_tap 
          condenserIdeal_tap(                            redeclare package 
            Medium = FluidMedium,
          p=p,
          Vtot=Vtot,
          Vlstart=Vlstart)                  annotation (extent=[16,-26; 76,34]);
        Water.SourceW sourceTap(
          redeclare package Medium = FluidMedium,
          p0=p)       annotation (extent=[-80,-30; -60,-10]);
        annotation (Diagram);
        ThermoPower.PowerPlants.SteamTurbineGroup.Components.Comp_bubble_h 
          BubbleEnthalpy(redeclare package FluidMedium = FluidMedium, p=p) 
                                annotation (extent=[-30,-10; -60,10]);
      protected 
        replaceable Components.BaseReader_water stateTappings(redeclare package
            Medium = FluidMedium) extends Components.BaseReader_water(
            redeclare package Medium = FluidMedium) 
                           annotation (extent=[-40,-10; -20,-30], rotation=0);
      equation 
        
        connect(setPoint.y, pID.SP) 
                                 annotation (points=[-18.6,48; -40,48],
                             style(color=74, rgbcolor={0,0,127}));
        connect(pID.CS,sourceTap. in_w0) annotation (points=[-60.6,44; -74,44;
              -74,-14],                                 style(color=74,
              rgbcolor={0,0,127}));
        connect(pID.PV,condenserIdeal_tap. ratio_Vv_Vtot) annotation (points=[-40,40;
              -28,40; -28,-2; 16,-2],                          style(color=74,
              rgbcolor={0,0,127}));
        connect(condenserIdeal_tap.steamIn, SteamIn) 
          annotation (points=[46,34; 46,64; 0,64; 0,100], style(thickness=2));
        connect(condenserIdeal_tap.waterOut, WaterOut) annotation (points=[46,-26;
              46,-52; 0,-52; 0,-100],     style(thickness=2));
        connect(BubbleEnthalpy.h, sourceTap.in_h)                  annotation (
            points=[-58.5,0; -66,0; -66,-14],                 style(color=74,
              rgbcolor={0,0,127}));
        connect(SensorsBus.Cond_ratio, condenserIdeal_tap.ratio_Vv_Vtot) 
          annotation (points=[98,-40; -8,-40; -8,-2; 16,-2], style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.Cond_Q, condenserIdeal_tap.Qcond) annotation (points=[98,-40;
              -8,-40; -8,16; 16,16],         style(color=84, rgbcolor={255,170,
                213}));
        connect(stateTappings.inlet, sourceTap.flange) 
          annotation (points=[-36,-20; -60,-20], style(thickness=2));
        connect(condenserIdeal_tap.tapWater, stateTappings.outlet) 
          annotation (points=[22,-20; -24,-20], style(thickness=2));
      end CondPlant_cc;
      
      model CondPlantHU_cc 
        "Condensation plant with condenser ratio control (type ImpPressureCondenser_tap) and coupling Heat Usage" 
        extends Interfaces.CondPlantHU_base;
        parameter SI.Volume mixCondenser_V "Internal volume of the mixer";
        parameter SI.Enthalpy mixCondenser_hstart=1e5 "Enthalpy start value";
        parameter SI.Pressure mixCondenser_pstart=1e5 "Pressure start value";
        
        CondPlant_cc condPlant_cc annotation (extent=[20,0; 80,60]);
        annotation (Diagram);
        Water.Mixer mixCondenser(
          initOpt=if SSInit then Options.steadyState else Options.noInit,
          redeclare package Medium = FluidMedium,
          V=mixCondenser_V,
          pstart=mixCondenser_pstart,
          hstart=mixCondenser_hstart) 
                          annotation (extent=[-10,-60; 10,-40],  rotation=270);
      equation 
        connect(condPlant_cc.SteamIn, SteamIn) 
          annotation (points=[50,60; 50,100], style(thickness=2));
        connect(WaterOut, mixCondenser.out) annotation (points=[0,-100; 0,-60;
              -1.83691e-015,-60], style(thickness=2));
        connect(mixCondenser.in1, condPlant_cc.WaterOut) 
          annotation (points=[6,-42; 6,-20; 50,-20; 50,0], style(thickness=2));
        connect(mixCondenser.in2, SteamToHU) annotation (points=[-6,-42.1; -6,
              -20; -48,-20; -48,100], style(thickness=2));
        connect(SensorsBus, condPlant_cc.SensorsBus) annotation (points=[98,-40;
              80,-40; 80,-20; 96,-20; 96,18; 79.4,18], style(color=84, rgbcolor=
               {255,170,213}));
        connect(ActuatorsBus, condPlant_cc.ActuatorsBus) annotation (points=[98,-72;
              72,-72; 72,-12; 88,-12; 88,8.4; 79.4,8.4],      style(color=52,
              rgbcolor={213,255,170}));
      end CondPlantHU_cc;
      
      model STG_3LRh "Steam turbine group (three pressure levels, reheat)" 
        extends Interfaces.STGroup3LRh;
        annotation (Diagram);
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.ST3LRh_base 
          steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          HPT_hstart_in=3.47e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004,
          HPT_hstart_out=3.10745e6,
          IPT_hstart_in=3.54348e6,
          IPT_hstart_out=3.12011e6,
          LPT_hstart_in=3.11911e6,
          LPT_hstart_out=2.39102e6,
          mixLP_hstart=3.11911e6,
          mixLP_V=5,
          mixIP_V=5,
          steamIPNomFlowRate=81.3524 - 67.6,
          steamLPNomFlowRate=89.438 - 81.3524) 
                       annotation (extent=[-80,-50; 20,50]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Components.CondenserPreP 
          condenserIdeal(redeclare package Medium = FluidMedium, p=5389.2) 
          annotation (extent=[26,-140; -14,-100],
                                               rotation=0);
      equation 
        connect(steamTurbines.Shaft_b, Shaft_b) annotation (points=[20,0; 200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(steamTurbines.Shaft_a, Shaft_a) annotation (points=[-80,0; -200,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(condenserIdeal.waterOut, WaterOut) 
          annotation (points=[6,-140; 6,-182; 160,-182; 160,200],
                                                       style(thickness=2));
        connect(SensorsBus.ratioVvVtot, condenserIdeal.ratio_Vv_Vtot) 
          annotation (points=[200,-80; 76,-80; 76,-124; 26,-124],      style(
              color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.Qout_condenser, condenserIdeal.Qcond) annotation (
            points=[200,-80; 76,-80; 76,-112; 26,-112],      style(color=84,
              rgbcolor={255,170,213}));
        connect(condenserIdeal.steamIn, steamTurbines.LPT_Out) annotation (
            points=[6,-100; 6,-50; 5,-50], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.IPT_In, From_RH_IP) annotation (points=[-40,50;
              -40,50; -40,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_Out, To_RH_IP) annotation (points=[-55,50;
              -55,140; -100,140; -100,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.SteamToMix, From_SH_IP) annotation (points=[-25,
              50; -25,140; 20,140; 20,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.LPT_In, From_SH_LP) annotation (points=[-10,50;
              -10,100; 80,100; 80,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_In, From_SH_HP) annotation (points=[-70,50;
              -70,100; -160,100; -160,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(ActuatorsBus, steamTurbines.ActuatorsBus) annotation (points=[
              200,-140; 60,-140; 60,-35; 20,-35], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(SensorsBus, steamTurbines.SensorsBus) annotation (points=[200,
              -80; 76,-80; 76,-20; 20,-20], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
      end STG_3LRh;
      
      model STG_3LRh_valve 
        "Steam turbine group (three pressure levels, reheat) with inlet valves" 
        extends Interfaces.STGroup3LRh;
        annotation (Diagram);
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.ST3LRh_valve 
          steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomFlowRate=81.10 - 67.5,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          steamLPNomFlowRate=89.82 - 81.10,
          HPT_hstart_in=3.47e6,
          HPT_hstart_out=3.1076e6,
          IPT_hstart_in=3.554e6,
          IPT_hstart_out=3.12810e6,
          LPT_hstart_in=3.109e6,
          LPT_hstart_out=2.3854e6,
          valveHP_dpnom=1.6e5,
          valveIP_dpnom=5e4,
          mixLP_hstart=3.109e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          mixLP_V=20,
          mixIP_V=20,
          valveHP_Cv=1165,
          valveIP_Cv=5625,
          valveLP_Cv=14733,
          valveLP_dpnom=2.964e4,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004) 
                       annotation (extent=[-80,-50; 20,50]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Components.CondenserPreP 
          condenserIdeal(                        p=5398.2,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[26,-140; -14,-100],
                                               rotation=0);
      equation 
        connect(steamTurbines.Shaft_a, Shaft_a) annotation (points=[-80,0; -200,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(steamTurbines.Shaft_b, Shaft_b) annotation (points=[20,0; 200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ActuatorsBus, steamTurbines.ActuatorsBus) annotation (points=[200,-140;
              60,-140; 60,-35; 20,-35],        style(color=52, rgbcolor={213,
                255,170}));
        connect(condenserIdeal.waterOut, WaterOut) 
          annotation (points=[6,-140; 6,-180; 160,-180; 160,200],
                                                         style(thickness=2));
        connect(SensorsBus.ratioVvVtot, condenserIdeal.ratio_Vv_Vtot) annotation (
            points=[200,-80; 66,-80; 66,-124; 26,-124],              style(
              color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.Qout_condenser, condenserIdeal.Qcond) annotation (
            points=[200,-80; 66,-80; 66,-112; 26,-112],              style(
              color=84, rgbcolor={255,170,213}));
        connect(condenserIdeal.steamIn, steamTurbines.LPT_Out) annotation (
            points=[6,-100; 6,-50; 5,-50], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.IPT_In, From_RH_IP) annotation (points=[-40,50;
              -40,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.SteamToMix, From_SH_IP) annotation (points=[-25,
              50; -25,140; 20,140; 20,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.LPT_In, From_SH_LP) annotation (points=[-10,50;
              -10,100; 80,100; 80,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_Out, To_RH_IP) annotation (points=[-55,50;
              -55,140; -100,140; -100,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_In, From_SH_HP) annotation (points=[-70,50;
              -72,50; -72,100; -160,100; -160,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(SensorsBus, steamTurbines.SensorsBus) annotation (points=[200,
              -80; 66,-80; 66,-20; 20,-20], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
      end STG_3LRh_valve;
      
      model STG_3LRh_cc 
        "Steam turbine group (three pressure levels, reheat) and controlled condenser" 
        extends Interfaces.STGroup3LRh;
        annotation (Diagram);
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.ST3LRh_base 
          steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          HPT_hstart_in=3.47e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004,
          HPT_hstart_out=3.10745e6,
          IPT_hstart_in=3.54348e6,
          IPT_hstart_out=3.12011e6,
          LPT_hstart_in=3.11911e6,
          LPT_hstart_out=2.39102e6,
          mixLP_hstart=3.11911e6,
          mixLP_V=5,
          mixIP_V=5,
          steamIPNomFlowRate=81.3524 - 67.6,
          steamLPNomFlowRate=89.438 - 81.3524) 
                       annotation (extent=[-80,-50; 20,50]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.CondPlant_cc 
          controlledCondeser(
          redeclare package FluidMedium = FluidMedium,
          p=5398.2,
          Vtot=10,
          Vlstart=1.5,
          setPoint_ratio=0.85) annotation (extent=[-24,-160; 36,-100],
                                                                    rotation=0);
      equation 
        connect(steamTurbines.Shaft_b, Shaft_b) annotation (points=[20,0; 200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(steamTurbines.Shaft_a, Shaft_a) annotation (points=[-80,0; -200,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(controlledCondeser.SteamIn, steamTurbines.LPT_Out) annotation (
            points=[6,-100; 6,-50; 5,-50], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(controlledCondeser.WaterOut, WaterOut) annotation (points=[6,
              -160; 6,-180; 160,-180; 160,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.IPT_In, From_RH_IP) annotation (points=[-40,50;
              -40,200; -40,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_Out, To_RH_IP) annotation (points=[-55,50;
              -55,140; -100,140; -100,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_In, From_SH_HP) annotation (points=[-70,50;
              -70,100; -160,100; -160,200; -160,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.SteamToMix, From_SH_IP) annotation (points=[-25,
              50; -25,140; 20,140; 20,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.LPT_In, From_SH_LP) annotation (points=[-10,50;
              -10,100; 80,100; 80,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(SensorsBus, steamTurbines.SensorsBus) annotation (points=[200,
              -80; 80,-80; 80,-20; 20,-20], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(SensorsBus, controlledCondeser.SensorsBus) annotation (points=[
              200,-80; 80,-80; 80,-142; 35.4,-142], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(ActuatorsBus, steamTurbines.ActuatorsBus) annotation (points=[
              200,-140; 100,-140; 100,-35; 20,-35], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(ActuatorsBus, controlledCondeser.ActuatorsBus) annotation (
            points=[200,-140; 100,-140; 100,-151.6; 35.4,-151.6], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
      end STG_3LRh_cc;
      
      model STG_3LRh_valve_cc 
        "Steam turbine group (three pressure levels, reheat) with inlet valves and controlled condenser" 
        extends Interfaces.STGroup3LRh;
        annotation (Diagram);
        ST3LRh_valve steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          HPT_hstart_in=3.47e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004,
          HPT_hstart_out=3.10745e6,
          IPT_hstart_in=3.54348e6,
          IPT_hstart_out=3.12011e6,
          LPT_hstart_in=3.11911e6,
          LPT_hstart_out=2.39102e6,
          mixLP_hstart=3.11911e6,
          mixLP_V=5,
          mixIP_V=5,
          steamIPNomFlowRate=81.3524 - 67.6,
          steamLPNomFlowRate=89.438 - 81.3524,
          valveHP_Cv=1165,
          valveHP_dpnom=1.6e5,
          valveIP_Cv=5625,
          valveIP_dpnom=5e4,
          valveLP_Cv=14733,
          valveLP_dpnom=2.964e4) 
                       annotation (extent=[-80,-50; 20,50]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.CondPlant_cc 
          controlledCondeser(
          redeclare package FluidMedium = FluidMedium,
          p=5398.2,
          Vtot=10,
          Vlstart=1.5,
          setPoint_ratio=0.85) annotation (extent=[-24,-160; 36,-100],
                                                                    rotation=0);
      equation 
        connect(steamTurbines.Shaft_b, Shaft_b) annotation (points=[20,0; 200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(steamTurbines.Shaft_a, Shaft_a) annotation (points=[-80,0; -200,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ActuatorsBus, steamTurbines.ActuatorsBus) annotation (points=[200,-140;
              100,-140; 100,-35; 20,-35],         style(color=52, rgbcolor={213,
                255,170}));
        connect(controlledCondeser.SteamIn, steamTurbines.LPT_Out) annotation (
            points=[6,-100; 6,-50; 5,-50], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(controlledCondeser.WaterOut, WaterOut) annotation (points=[6,
              -160; 6,-180; 160,-180; 160,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.IPT_In, From_RH_IP) annotation (points=[-40,50;
              -40,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.SteamToMix, From_SH_IP) annotation (points=[-25,
              50; -25,140; 20,140; 20,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_Out, To_RH_IP) annotation (points=[-55,50;
              -55,140; -100,140; -100,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.LPT_In, From_SH_LP) annotation (points=[-10,50;
              -10,100; 80,100; 80,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_In, From_SH_HP) annotation (points=[-70,50;
              -70,100; -160,100; -160,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(SensorsBus, steamTurbines.SensorsBus) annotation (points=[200,
              -80; 80,-80; 80,-20; 20,-20], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(SensorsBus, controlledCondeser.SensorsBus) annotation (points=[
              200,-80; 80,-80; 80,-142; 35.4,-142], style(
            color=84,
            rgbcolor={255,170,213},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(ActuatorsBus, controlledCondeser.ActuatorsBus) annotation (
            points=[200,-140; 100,-140; 100,-151.6; 35.4,-151.6], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
      end STG_3LRh_valve_cc;
      
      model STG_3LRh_bypass_cc 
        "Steam turbine group (three pressure levels, reheat) with inlet and bypass valves and controlled condenser" 
        extends Interfaces.STGroup3LRh;
        annotation (Diagram);
        ST3LRh_bypass steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          HPT_hstart_in=3.47e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004,
          HPT_hstart_out=3.10745e6,
          IPT_hstart_in=3.54348e6,
          IPT_hstart_out=3.12011e6,
          LPT_hstart_in=3.11911e6,
          LPT_hstart_out=2.39102e6,
          mixLP_hstart=3.11911e6,
          mixLP_V=5,
          mixIP_V=5,
          steamIPNomFlowRate=81.3524 - 67.6,
          steamLPNomFlowRate=89.438 - 81.3524,
          valveHP_Cv=1165,
          valveHP_dpnom=1.6e5,
          valveIP_Cv=5625,
          valveIP_dpnom=5e4,
          valveLP_Cv=14733,
          valveLP_dpnom=2.964e4,
          bypassHP_Cv=272,
          bypassIP_Cv=1595,
          bypassLP_Cv=7540) 
                       annotation (extent=[-80,-50; 20,50]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.CondPlant_cc 
          controlledCondeser(
          redeclare package FluidMedium = FluidMedium,
          p=5398.2,
          Vtot=10,
          Vlstart=1.5,
          setPoint_ratio=0.85) annotation (extent=[-24,-160; 36,-100],
                                                                    rotation=0);
      equation 
        connect(steamTurbines.Shaft_b, Shaft_b) annotation (points=[20,0; 200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(steamTurbines.Shaft_a, Shaft_a) annotation (points=[-80,0; -200,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(ActuatorsBus, controlledCondeser.ActuatorsBus) annotation (
            points=[200,-140; 80,-140; 80,-152; 58,-152; 35.4,-151.6],
                                                         style(color=52,
              rgbcolor={213,255,170}));
        connect(ActuatorsBus, steamTurbines.ActuatorsBus) annotation (points=[200,-140;
              80,-140; 80,-35; 20,-35],             style(color=52, rgbcolor={
                213,255,170}));
        connect(SensorsBus, steamTurbines.SensorsBus) annotation (points=[200,-80;
              52,-80; 52,-20; 20,-20],       style(color=84, rgbcolor={255,170,
                213}));
        connect(SensorsBus, controlledCondeser.SensorsBus) annotation (points=[200,-80;
              52,-80; 52,-142; 35.4,-142],     style(color=84, rgbcolor={255,
                170,213}));
        connect(controlledCondeser.SteamIn, steamTurbines.LPT_Out) annotation (
            points=[6,-100; 6,-50; 5,-50], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(controlledCondeser.WaterOut, WaterOut) annotation (points=[6,
              -160; 6,-180; 160,-180; 160,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.LPT_In, From_SH_LP) annotation (points=[-10,50;
              -10,100; 80,100; 80,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.SteamToMix, From_SH_IP) annotation (points=[-25,
              50; -25,140; 20,140; 20,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.IPT_In, From_RH_IP) annotation (points=[-40,50;
              -40,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_Out, To_RH_IP) annotation (points=[-55,50;
              -55,140; -100,140; -100,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.HPT_In, From_SH_HP) annotation (points=[-70,50;
              -70,100; -160,100; -160,200], style(
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
      end STG_3LRh_bypass_cc;
    end Examples;
    
    package Tests 
      model computation_states 
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        parameter SI.SpecificEnthalpy h=2.39102e6 "value of specific enthalpy";
        parameter SI.Pressure p=2e5 "value of pressure";
        parameter SI.Temperature T=288 "value of temperature";
        
        SI.Temperature Tf "Temperature (p,h)";
        SI.SpecificEnthalpy hf "Specific enthalpy (p,T)";
        SI.Temperature Ts "Saturation temperature (p)";
        SI.SpecificEnthalpy hv "Dew specific enthalpy (p)";
        SI.SpecificEnthalpy hl "Bubble specific enthalpy (p)";
        SI.Density rhov "Dew density (p)";
        SI.Density rhol "Bubble density (p)";
        FluidMedium.SaturationProperties sat "Saturation properties";
        
      equation 
        sat.psat = p;
        sat.Tsat = FluidMedium.saturationTemperature(p);
        
        Ts = sat.Tsat;
        hl=FluidMedium.bubbleEnthalpy(sat);
        hv=FluidMedium.dewEnthalpy(sat);
        Tf=FluidMedium.temperature_ph(p,h);
        hf=FluidMedium.specificEnthalpy_pT(p,T);
        rhov=FluidMedium.density_ph(p,h);
        rhol=FluidMedium.bubbleDensity(sat);
      end computation_states;
      
      
      model TestSettingTurbineHP 
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=1.28e7,
          pstart_out=2.98e6,
          wstart=67.6,
          hstartin=3.47e6,
          hstartout=3.1076e6,
          wnom=67.6,
          eta_iso_nom=0.833,
          Kt=0.0032078) 
                      annotation (extent=[-40,-40; 20,20]);
        Water.SinkP sinkP(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[30,60; 50,80]);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
                      annotation (extent=[70,-20; 50,0]);
        Water.SourceP sourceP(h=3.47e6, p0=1.28e7) 
          annotation (extent=[-80,60; -60,80]);
      equation 
        connect(sinkP.flange, steamTurbineStodola.outlet) annotation (points=[30,70;
              13.1,70; 13.1,14],               style(thickness=2));
        annotation (Diagram);
        connect(constantSpeed.flange, steamTurbineStodola.shaft_b) annotation (
            points=[50,-10; 9.2,-10],                             style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(sourceP.flange, steamTurbineStodola.inlet) annotation (points=[
              -60,70; -32.5,70; -32.5,13.7], style(thickness=2));
      end TestSettingTurbineHP;
      
      model TestSettingTurbineIP 
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=2.68e6,
          pstart_out=6e5,
          wstart=81.10,
          hstartin=3.554e6,
          hstartout=3.1281e6,
          wnom=81.10,
          eta_iso_nom=0.903,
          Kt=0.018883)     annotation (extent=[-40,-40; 20,20]);
        Water.SinkP sinkP(p0=6e5, h=3.1281e6) 
          annotation (extent=[30,60; 50,80]);
        Water.SourceP sourceP(            h=3.554e6, p0=2.68e6) 
          annotation (extent=[-80,60; -60,80]);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
                      annotation (extent=[70,-20; 50,0]);
      equation 
        connect(sinkP.flange, steamTurbineStodola.outlet) annotation (points=[30,70;
              13.1,70; 13.1,14],               style(thickness=2));
        annotation (Diagram);
        connect(sourceP.flange, steamTurbineStodola.inlet) annotation (points=[
              -60,70; -32.5,70; -32.5,13.7], style(thickness=2));
        connect(constantSpeed.flange, steamTurbineStodola.shaft_b) annotation (
            points=[50,-10; 9.2,-10],                             style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
      end TestSettingTurbineIP;
      
      model TestSettingTurbineLP 
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=6e5,
          pstart_out=5.3982e3,
          wstart=89.82,
          hstartin=3.109e6,
          hstartout=2.3854e6,
          wnom=89.82,
          eta_iso_nom=0.903,
          Kt=0.078004)     annotation (extent=[-40,-40; 20,20]);
        Water.SinkP sinkP(p0=5.3982e3, h=2.3854e6) 
          annotation (extent=[30,60; 50,80]);
        Water.SourceP sourceP(        h=3.109e6, p0=6e5) 
          annotation (extent=[-80,60; -60,80]);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
                      annotation (extent=[70,-20; 50,0]);
      equation 
        connect(sinkP.flange, steamTurbineStodola.outlet) annotation (points=[30,70;
              13.1,70; 13.1,14],               style(thickness=2));
        annotation (Diagram);
        connect(sourceP.flange, steamTurbineStodola.inlet) annotation (points=[-60,70;
              -32.5,70; -32.5,13.7],         style(thickness=2));
        connect(constantSpeed.flange, steamTurbineStodola.shaft_b) annotation (
            points=[50,-10; 9.2,-10],                             style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
      end TestSettingTurbineLP;
      
      model TestValveTurbineHP 
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=1.28e7,
          pstart_out=2.98e6,
          wstart=67.6,
          hstartin=3.47e6,
          hstartout=3.1076e6,
          wnom=67.6,
          eta_iso_nom=0.833,
          Kt=0.0032078) 
                      annotation (extent=[-42,-40; 18,20]);
        Water.SinkP sinkP(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[30,60; 50,80]);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          wnom=67.6,
          hstart=3.47e6,
          pnom=1.296e7,
          dpnom=1.6e5,
          Cv=1165)             annotation (extent=[-24,60; -44,40],rotation=90);
        Water.SourceP sourceP(h=3.47e6, p0=1.296e7) 
          annotation (extent=[-80,60; -60,80]);
      public 
        Modelica.Blocks.Sources.Constant com_valveHP(k=0.7) 
          annotation (extent=[4,40; -16,60]);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
                      annotation (extent=[70,-20; 50,0]);
      equation 
        connect(sinkP.flange, steamTurbineStodola.outlet) annotation (points=[30,70;
              11.1,70; 11.1,14],               style(thickness=2));
        annotation (Diagram);
        connect(valveHP.outlet, steamTurbineStodola.inlet) annotation (points=[-34,40;
              -34,13.7; -34.5,13.7],         style(thickness=2));
        connect(sourceP.flange, valveHP.inlet) 
          annotation (points=[-60,70; -34,70; -34,60], style(thickness=2));
        connect(com_valveHP.y, valveHP.theta) annotation (points=[-17,50; -26,
              50],
            style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(constantSpeed.flange, steamTurbineStodola.shaft_b) annotation (
            points=[50,-10; 7.2,-10],                             style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
      end TestValveTurbineHP;
      
      model TestValveTurbineIP 
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=2.68e6,
          pstart_out=6e5,
          wstart=81.10,
          hstartin=3.554e6,
          hstartout=3.1281e6,
          wnom=81.10,
          eta_iso_nom=0.903,
          Kt=0.018883)     annotation (extent=[-42,-40; 18,20]);
        Water.SinkP sinkP(p0=6e5, h=3.1281e6) 
          annotation (extent=[30,60; 50,80]);
        Water.ValveVap valveIP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          wnom=81.1,
          hstart=3.554e6,
          dpnom=5e4,
          pnom=2.73e6,
          Cv=5625)             annotation (extent=[-24,60; -44,40],rotation=90);
        Water.SourceP sourceP(            h=3.554e6, p0=2.73e6) 
          annotation (extent=[-80,60; -60,80]);
      public 
        Modelica.Blocks.Sources.Constant com_valveHP 
          annotation (extent=[4,40; -16,60]);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
                      annotation (extent=[70,-20; 50,0]);
      equation 
        connect(sinkP.flange, steamTurbineStodola.outlet) annotation (points=[30,70;
              11.1,70; 11.1,14],               style(thickness=2));
        annotation (Diagram);
        connect(valveIP.outlet, steamTurbineStodola.inlet) annotation (points=[-34,40;
              -34,13.7; -34.5,13.7],         style(thickness=2));
        connect(sourceP.flange,valveIP. inlet) 
          annotation (points=[-60,70; -34,70; -34,60], style(thickness=2));
        connect(com_valveHP.y, valveIP.theta) 
                                           annotation (points=[-17,50; -26,50],
            style(color=74, rgbcolor={0,0,127}));
        connect(constantSpeed.flange, steamTurbineStodola.shaft_b) annotation (
            points=[50,-10; 7.2,-10],                             style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
      end TestValveTurbineIP;
      
      model TestValveTurbineLP 
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=6e5,
          pstart_out=5.3982e3,
          wstart=89.82,
          hstartin=3.109e6,
          hstartout=2.3854e6,
          wnom=89.82,
          eta_iso_nom=0.903,
          Kt=0.078004)     annotation (extent=[-42,-40; 18,20]);
        Water.SinkP sinkP(p0=5.3982e3, h=2.3854e6) 
          annotation (extent=[30,60; 50,80]);
        Water.ValveVap valveLP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          wnom=89.82,
          hstart=3.109e6,
          pnom=6.296e5,
          dpnom=2.964e4,
          Cv=14733)            annotation (extent=[-24,60; -44,40],rotation=90);
        Water.SourceP sourceP(        h=3.109e6, p0=6.296e5) 
          annotation (extent=[-80,60; -60,80]);
      public 
        Modelica.Blocks.Sources.Constant com_valveHP 
          annotation (extent=[4,40; -16,60]);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
                      annotation (extent=[70,-20; 50,0]);
      equation 
        connect(sinkP.flange, steamTurbineStodola.outlet) annotation (points=[30,70;
              11.1,70; 11.1,14],               style(thickness=2));
        annotation (Diagram);
        connect(valveLP.inlet, sourceP.flange) annotation (points=[-34,60; -34,
              70; -60,70], style(
            color=3,
            rgbcolor={0,0,255},
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(valveLP.outlet, steamTurbineStodola.inlet) annotation (points=[-34,40;
              -34,13.7; -34.5,13.7],         style(
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(com_valveHP.y, valveLP.theta) annotation (points=[-17,50; -26,
              50], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(constantSpeed.flange, steamTurbineStodola.shaft_b) annotation (
            points=[50,-10; 7.2,-10],                             style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
      end TestValveTurbineLP;
      
      model TestTurbineHPefficiency 
        
        Components.SteamTurbineVarEta steamTurbineVarEta(
          pstart_in=1.28e7,
          pstart_out=2.98e6,
          wstart=67.6,
          hstartin=3.47e6,
          hstartout=3.1076e6,
          wnom=67.6,
          eta_iso_nom=0.833,
          Kt=0.0032078,
          n=20,
          Rm=0.936)   annotation (extent=[-58,-88; 2,-28]);
        Water.SinkP sinkP(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[14,12; 34,32]);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          wnom=67.6,
          hstart=3.47e6,
          pnom=1.296e7,
          dpnom=1.6e5,
          Cv=1165)             annotation (extent=[-40,12; -60,-8],rotation=90);
        Water.SourceP sourceP(h=3.47e6, p0=1.296e7) 
          annotation (extent=[-96,12; -76,32]);
        annotation (Diagram);
      public 
        Modelica.Blocks.Sources.Ramp com_valveHP(
          offset=1,
          height=-0.9,
          duration=50,
          startTime=1000) 
          annotation (extent=[14,74; -6,94]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Components.PrescribedSpeed 
          constantSpeed 
          annotation (extent=[54,-68; 34,-48]);
      public 
        Modelica.Blocks.Sources.Ramp rif_velocity(
          height=-70,
          offset=314.16/2,
          duration=50,
          startTime=10) 
          annotation (extent=[100,36; 80,56]);
        Modelica.Blocks.Math.Add add 
          annotation (extent=[-36,54; -24,66], rotation=180);
        Modelica.Blocks.Math.Add add1 
          annotation (extent=[60,2; 72,14], rotation=180);
      public 
        Modelica.Blocks.Sources.Ramp com_valveHP1(
          offset=0,
          height=0.2,
          duration=50,
          startTime=80000) 
          annotation (extent=[14,40; -6,60]);
      public 
        Modelica.Blocks.Sources.Ramp rif_velocity1(
          height=30,
          offset=0,
          duration=50,
          startTime=80) 
          annotation (extent=[100,-40; 80,-20]);
      equation 
        connect(sinkP.flange, steamTurbineVarEta.outlet)  annotation (points=[14,22;
              -4.9,22; -4.9,-34],              style(thickness=2));
        connect(valveHP.outlet, steamTurbineVarEta.inlet)  annotation (points=[-50,-8;
              -50,-34.3; -50.5,-34.3],       style(thickness=2));
        connect(sourceP.flange, valveHP.inlet) 
          annotation (points=[-76,22; -50,22; -50,12], style(thickness=2));
        connect(constantSpeed.flange, steamTurbineVarEta.shaft_b)  annotation (
            points=[34,-58; -8.8,-58],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(com_valveHP1.y, add.u1) annotation (points=[-7,50; -14,50; -14,
              56.4; -22.8,56.4], style(color=74, rgbcolor={0,0,127}));
        connect(com_valveHP.y, add.u2) annotation (points=[-7,84; -14,84; -14,
              64; -22,64; -22.8,63.6], style(color=74, rgbcolor={0,0,127}));
        connect(add.y, valveHP.theta) annotation (points=[-36.6,60; -48,60; -48,
              28; -24,28; -24,2; -42,2], style(color=74, rgbcolor={0,0,127}));
        connect(rif_velocity.y, add1.u2) annotation (points=[79,46; 70,46; 70,
              24; 88,24; 88,11.6; 73.2,11.6], style(color=74, rgbcolor={0,0,127}));
        connect(rif_velocity1.y, add1.u1) annotation (points=[79,-30; 70,-30;
              70,-8; 88,-8; 88,4.4; 73.2,4.4], style(color=74, rgbcolor={0,0,
                127}));
        connect(add1.y, constantSpeed.w_fixed) annotation (points=[59.4,8; 50,8;
              50,-38; 66,-38; 66,-52; 54,-52],   style(color=74, rgbcolor={0,0,
                127}));
      end TestTurbineHPefficiency;
      
      model TestST3LRh_base 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.ST3LRh_base 
          steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomFlowRate=81.10 - 67.5,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          steamLPNomFlowRate=89.82 - 81.10,
          HPT_hstart_in=3.47e6,
          HPT_hstart_out=3.1076e6,
          IPT_hstart_in=3.554e6,
          IPT_hstart_out=3.12810e6,
          LPT_hstart_in=3.109e6,
          LPT_hstart_out=2.3854e6,
          mixLP_hstart=3.109e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004,
          mixLP_V=10,
          mixIP_V=10)  annotation (extent=[-80,-40; 0,40]);
        annotation (Diagram);
        Water.SinkP sinkLPT(
          redeclare package Medium = FluidMedium,
          p0=5.3982e3,
          h=2.3854e6)      annotation (extent=[4,-66; 16,-54],  rotation=0);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
          annotation (extent=[66,-10; 46,10]);
        Water.SourceP sourceHPT(h=3.47e6, p0=1.28e7) 
          annotation (extent=[-78,68; -66,80], rotation=270);
        Water.SourceP sourceLPT(h=3.109e6, p0=6e5) 
          annotation (extent=[-30,54; -18,66], rotation=270);
        Water.SourceP sourceToMix(p0=2.98e6, h=3.1076e6) 
          annotation (extent=[-42,68; -30,80], rotation=270);
        Components.EffectHE Rh(dh=3.544e6 - 3.108e6, dp=2.98e6 - 2.68e6) 
          annotation (extent=[-48,54; -60,66], rotation=180);
      equation 
        connect(constantSpeed.flange, steamTurbines.Shaft_b) 
                                                           annotation (points=[46,0; 0,
              0],      style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(sinkLPT.flange, steamTurbines.LPT_Out) 
          annotation (points=[4,-60; -12,-60; -12,-40],
                                                      style(thickness=2));
        connect(steamTurbines.LPT_In, sourceLPT.flange) 
          annotation (points=[-24,40; -24,54], style(thickness=2));
        connect(steamTurbines.HPT_In, sourceHPT.flange) 
          annotation (points=[-72,40; -72,68], style(thickness=2));
        connect(sourceToMix.flange, steamTurbines.SteamToMix) 
          annotation (points=[-36,68; -36,40], style(thickness=2));
        connect(steamTurbines.IPT_In, Rh.out1) 
          annotation (points=[-48,40; -48,60], style(thickness=2));
        connect(steamTurbines.HPT_Out, Rh.in1) annotation (points=[-60,40; -60,
              50; -60,60; -60.06,60], style(thickness=2));
      end TestST3LRh_base;
      
      model TestST3LRh_valve 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.ST3LRh_valve 
          steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomFlowRate=81.10 - 67.5,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          steamLPNomFlowRate=89.82 - 81.10,
          HPT_hstart_in=3.47e6,
          HPT_hstart_out=3.1076e6,
          IPT_hstart_in=3.554e6,
          IPT_hstart_out=3.12810e6,
          LPT_hstart_in=3.109e6,
          LPT_hstart_out=2.3854e6,
          valveHP_dpnom=1.6e5,
          valveIP_dpnom=5e4,
          mixLP_hstart=3.109e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          mixLP_V=20,
          mixIP_V=20,
          valveHP_Cv=1165,
          valveIP_Cv=5625,
          valveLP_Cv=14733,
          valveLP_dpnom=2.964e4,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004) 
                       annotation (extent=[-80,-40; 0,40]);
        annotation (Diagram);
        Water.SinkP sinkLPT_p(
          redeclare package Medium = FluidMedium,
          p0=5.3982e3,
          h=2.3854e6)      annotation (extent=[-26,-64; -38,-52],
                                                                rotation=0);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
          annotation (extent=[66,30; 46,50]);
      protected 
        Buses.Actuators actuators annotation (extent=[32,-60; 42,-20], rotation=
             180);
      public 
        Modelica.Blocks.Sources.Constant com_valveHP 
          annotation (extent=[92,-10; 72,10]);
      public 
        Modelica.Blocks.Sources.Constant com_valveLP(k=1) 
          annotation (extent=[92,-90; 72,-70]);
        Water.SourceP sourceHPT_p(h=3.47e6, p0=1.296e7) 
          annotation (extent=[-78,68; -66,80], rotation=270);
        Water.SourceP sourceLPT(h=3.109e6, p0=6.296e5) 
          annotation (extent=[-30,54; -18,66], rotation=270);
        Modelica.Blocks.Sources.Ramp com_valveIP(
          duration=10,
          offset=1,
          startTime=40,
          height=-0.5)  annotation (extent=[92,-50; 72,-30]);
        Water.SourceP sourceToMix(p0=2.98e6, h=3.1076e6) 
          annotation (extent=[-42,68; -30,80], rotation=270);
        Components.EffectHE Rh(dh=3.544e6 - 3.108e6, dp=2.98e6 - 2.73e6) 
          annotation (extent=[-48,54; -60,66], rotation=180);
      equation 
        connect(actuators, steamTurbines.ActuatorsBus)   annotation (points=[37,-40;
              10,-40; 10,-28; 0,-28],             style(color=52, rgbcolor={213,
                255,170}));
        connect(constantSpeed.flange, steamTurbines.Shaft_b)   annotation (
            points=[46,40; 24,40; 24,0; 0,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(sinkLPT_p.flange, steamTurbines.LPT_Out) 
          annotation (points=[-26,-58; -12,-58; -12,-40],
                                                        style(thickness=2));
        connect(steamTurbines.LPT_In, sourceLPT.flange) 
          annotation (points=[-24,40; -24,54], style(thickness=2));
        connect(steamTurbines.HPT_In, sourceHPT_p.flange) 
          annotation (points=[-72,40; -72,68], style(thickness=2));
        connect(com_valveHP.y, actuators.Opening_valveHP) annotation (points=[
              71,0; 54,0; 54,-40; 34,-40; 34,-42], style(color=74, rgbcolor={0,
                0,127}));
        connect(com_valveIP.y, actuators.Opening_valveIP) annotation (points=[
              71,-40; 36,-40], style(color=74, rgbcolor={0,0,127}));
        connect(com_valveLP.y, actuators.Opening_valveLP) annotation (points=[
              71,-80; 54,-80; 54,-40; 38,-40], style(color=74, rgbcolor={0,0,
                127}));
        connect(sourceToMix.flange, steamTurbines.SteamToMix) 
          annotation (points=[-36,68; -36,40], style(thickness=2));
        connect(steamTurbines.IPT_In, Rh.out1) 
          annotation (points=[-48,40; -48,60], style(thickness=2));
        connect(steamTurbines.HPT_Out, Rh.in1) 
          annotation (points=[-60,40; -60,60; -60.06,60], style(thickness=2));
      end TestST3LRh_valve;
      
      model TestST3LRh_bypass 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        Examples.ST3LRh_bypass steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomFlowRate=81.10 - 67.5,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          mixLP_V=50,
          mixIP_V=50,
          steamLPNomFlowRate=89.82 - 81.10,
          HPT_hstart_in=3.47e6,
          HPT_hstart_out=3.1076e6,
          IPT_hstart_in=3.554e6,
          IPT_hstart_out=3.12810e6,
          LPT_hstart_in=3.109e6,
          LPT_hstart_out=2.3854e6,
          valveHP_dpnom=1.6e5,
          valveIP_dpnom=5e4,
          valveLP_dpnom=2.64e4,
          mixLP_hstart=3.109e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          valveHP_Cv=1165,
          valveIP_Cv=5625,
          valveLP_Cv=14733,
          bypassHP_Cv=272,
          bypassIP_Cv=1595,
          bypassLP_Cv=7540,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004) 
                       annotation (extent=[-94,-40; -14,40]);
        annotation (Diagram);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
          annotation (extent=[20,-10; 0,10]);
      protected 
        Buses.Actuators actuators annotation (extent=[46,-80; 86,-68], rotation=
             180);
      public 
        Modelica.Blocks.Sources.Constant com_valveHP(k=1) 
          annotation (extent=[96,30; 76,50]);
      public 
        Modelica.Blocks.Sources.Constant com_valveIP(k=1) 
          annotation (extent=[96,-10; 76,10]);
      public 
        Modelica.Blocks.Sources.Constant com_valveLP(k=1) 
          annotation (extent=[96,-50; 76,-30]);
      public 
        Modelica.Blocks.Sources.Constant com_bypassHP(k=0) 
          annotation (extent=[36,30; 56,50]);
      public 
        Modelica.Blocks.Sources.Constant com_bypassIP(k=0) 
          annotation (extent=[36,-10; 56,10]);
      public 
        Modelica.Blocks.Sources.Constant com_bypassLP(k=0) 
          annotation (extent=[36,-50; 56,-30]);
        Water.SinkP sinkLPT_p(
          redeclare package Medium = FluidMedium,
          p0=5.3982e3,
          h=2.3854e6)      annotation (extent=[-34,-66; -46,-54],
                                                                rotation=0);
        Water.SourceP sourceHPT_p(h=3.47e6, p0=1.296e7) 
          annotation (extent=[-92,68; -80,80], rotation=270);
        Water.SourceP sourceLPT(h=3.109e6, p0=6.296e5) 
          annotation (extent=[-44,54; -32,66], rotation=270);
        Water.SourceP sourceToMix(p0=2.98e6, h=3.1076e6) 
          annotation (extent=[-56,68; -44,80], rotation=270);
        Components.EffectHE Rh(dh=3.544e6 - 3.108e6, dp=2.98e6 - 2.73e6) 
          annotation (extent=[-62,54; -74,66], rotation=180);
      public 
        Modelica.Blocks.Sources.Constant com_valveDrumIP(k=1) 
          annotation (extent=[96,70; 76,90]);
      public 
        Modelica.Blocks.Sources.Constant com_valveDrumLP(k=1) 
          annotation (extent=[36,70; 56,90]);
      equation 
        connect(com_valveHP.y, actuators.Opening_valveHP) 
                                                      annotation (points=[75,40;
              66,40; 66,-74],        style(color=74, rgbcolor={0,0,127}));
        connect(com_valveIP.y, actuators.Opening_valveIP) 
                                                      annotation (points=[75,0; 66,
              0; 66,-74],   style(color=74, rgbcolor={0,0,127}));
        connect(com_valveLP.y, actuators.Opening_valveLP) 
                                                      annotation (points=[75,-40;
              66,-40; 66,-74],              style(color=74, rgbcolor={0,0,127}));
        connect(actuators,steamTurbines. ActuatorsBus) annotation (points=[66,-74;
              18,-74; 18,-28; -14,-28],   style(color=52, rgbcolor={213,255,170}));
        connect(steamTurbines.Shaft_b, constantSpeed.flange) annotation (points=
             [-14,0; 0,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(com_bypassHP.y, actuators.Opening_byPassHP) 
                                                        annotation (points=[57,
              40; 66,40; 66,-74], style(color=74, rgbcolor={0,0,127}));
        connect(com_bypassIP.y, actuators.Opening_byPassIP) 
                                                        annotation (points=[57,
              0; 66,0; 66,-74], style(color=74, rgbcolor={0,0,127}));
        connect(com_bypassLP.y, actuators.Opening_byPassLP) 
                                                        annotation (points=[57,
              -40; 66,-40; 66,-74], style(color=74, rgbcolor={0,0,127}));
        connect(sinkLPT_p.flange, steamTurbines.LPT_Out) 
          annotation (points=[-34,-60; -26,-60; -26,-40], style(thickness=2));
        connect(steamTurbines.LPT_In,sourceLPT. flange) 
          annotation (points=[-38,40; -38,54], style(thickness=2));
        connect(steamTurbines.HPT_In,sourceHPT_p. flange) 
          annotation (points=[-86,40; -86,68], style(thickness=2));
        connect(sourceToMix.flange, steamTurbines.SteamToMix) 
          annotation (points=[-50,68; -50,40], style(thickness=2));
        connect(com_valveDrumLP.y, actuators.Opening_valveDrumLP) annotation (
            points=[57,80; 66,80; 66,-74], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(com_valveDrumIP.y, actuators.Opening_valveDrumIP) annotation (
            points=[75,80; 66,80; 66,-72], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(steamTurbines.IPT_In, Rh.out1) 
          annotation (points=[-62,40; -62,60], style(thickness=2));
        connect(steamTurbines.HPT_Out, Rh.in1) annotation (points=[-74,40; -74,
              50; -74,60; -74.06,60], style(thickness=2));
      end TestST3LRh_bypass;
      
      model TestST3LRh_condenser 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        //other data
        constant Real pi=Modelica.Constants.pi;
        
        annotation (Diagram);
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
          annotation (extent=[30,0; 10,20]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Components.StateReader 
          stateCondOut(                     redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[24,-56; 44,-36], rotation=90);
        ThermoPower.PowerPlants.SteamTurbineGroup.Components.StateReader 
          stateLPTout(                     redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-34,-58; -14,-38],
                                               rotation=270);
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.ST3LRh_base 
          steamTurbines(
          redeclare package FluidMedium = FluidMedium,
          steamHPNomFlowRate=67.6,
          steamHPNomPressure=1.28e7,
          steamIPNomFlowRate=81.10 - 67.5,
          steamIPNomPressure=2.68e6,
          steamLPNomPressure=6e5,
          pcond=5.3982e3,
          mixLP_V=50,
          mixIP_V=50,
          steamLPNomFlowRate=89.82 - 81.10,
          HPT_hstart_in=3.47e6,
          HPT_hstart_out=3.1076e6,
          IPT_hstart_in=3.554e6,
          IPT_hstart_out=3.12810e6,
          LPT_hstart_in=3.109e6,
          LPT_hstart_out=2.3854e6,
          mixLP_hstart=3.109e6,
          mixIP_hstart=3.1076e6,
          HPT_eta_iso_nom=0.833,
          IPT_eta_iso_nom=0.903,
          LPT_eta_iso_nom=0.876,
          HPT_Kt=0.0032078,
          IPT_Kt=0.018883,
          LPT_Kt=0.078004) 
                       annotation (extent=[-92,-30; -12,50]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Examples.CondPlant 
          condenserPlant(
          condNomFlowRate=89.82,
          coolNomFlowRate=22.782,
          condNomPressure=5.3982e3,
          coolNomPressure=3e5,
          condExchSurface=0.02*pi*514*4.88,
          coolExchSurface=(0.02 - (2*0.0016))*pi*514*4.88,
          condVol=4.162 - (0.02^2/4*pi*514*4.88),
          cm=419,
          rhoMetal=7500,
          coolVol=(0.02 - (2*0.0016))^2/4*pi*514*4.88,
          pstart_cond=5.3982e3,
          redeclare package FluidMedium = FluidMedium,
          condenser(gamma_cond=1536, gamma_cool=5006),
          metalVol=(0.02^2/4*pi*514*4.88) - ((0.02 - (2*0.0016))^2/4*pi*514*
              4.88),
          use_T=false,
          SSInit=false,
          Tstart_M_in=FluidMedium.temperature_ph(3e5, 62641),
          Tstart_M_out=FluidMedium.temperature_ph(3e5, 140760),
          hstart_cool_in=62641,
          hstart_cool_out=140760) 
          annotation (extent=[-16,-52; 24,-92],rotation=90);
        Water.SourceP sourceHPT(h=3.47e6, p0=1.28e7,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[-90,76; -78,88], rotation=270);
        Water.SourceP sourceLPT(h=3.109e6, p0=6e5,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[-42,62; -30,74], rotation=270);
        Water.SourceP sourceToMix(p0=2.98e6, h=3.1076e6,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[-54,76; -42,88], rotation=270);
        Components.EffectHE Rh(dh=3.544e6 - 3.108e6, dp=2.98e6 - 2.68e6) 
          annotation (extent=[-72,74; -60,62], rotation=0);
        Water.SinkW sinkW(
          w0=89.8,
          p0=5.3982e3,
          h=1.43495e5,
          redeclare package Medium = FluidMedium) 
                       annotation (extent=[56,-30; 76,-10]);
      equation 
        connect(steamTurbines.Shaft_b, constantSpeed.flange) annotation (points=[-12,10;
              10,10],         style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(stateLPTout.inlet, steamTurbines.LPT_Out) 
          annotation (points=[-24,-42; -24,-30], style(thickness=2));
        connect(condenserPlant.WaterOut,stateCondOut. inlet) 
          annotation (points=[24,-72; 34,-72; 34,-52], style(thickness=2));
        connect(condenserPlant.SteamIn, stateLPTout.outlet) 
          annotation (points=[-16,-72; -24,-72; -24,-54], style(thickness=2));
        connect(steamTurbines.LPT_In,sourceLPT. flange) 
          annotation (points=[-36,50; -36,62], style(thickness=2));
        connect(steamTurbines.HPT_In,sourceHPT. flange) 
          annotation (points=[-84,50; -84,76], style(thickness=2));
        connect(sourceToMix.flange, steamTurbines.SteamToMix) 
          annotation (points=[-48,76; -48,50], style(thickness=2));
        connect(sinkW.flange, stateCondOut.outlet) 
          annotation (points=[56,-20; 34,-20; 34,-40], style(thickness=2));
        connect(steamTurbines.IPT_In, Rh.out1) 
          annotation (points=[-60,50; -60,68], style(thickness=2));
        connect(steamTurbines.HPT_Out, Rh.in1) annotation (points=[-72,50; -72,59;
              -72,68; -72.06,68], style(thickness=2));
      end TestST3LRh_condenser;
      
      model TestCondenserControl 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram);
        Components.StateReader_water stateTapping(
                       redeclare package Medium = FluidMedium) 
          annotation (extent=[-30,-2; -10,18],  rotation=0);
        Control.PID pID(
          PVmax=1,
          PVmin=0.1,
          CSmin=-0.6,
          CSmax=0.6,
          Ti=2000,
          Kp=-3)      annotation (extent=[-20,-80; 0,-60], rotation=0);
        Water.SourceW sourceSteam(
          redeclare package Medium = FluidMedium,
          w0=89.8,
          p0=5389.2,
          h=2.3854e6) annotation (extent=[-76,50; -56,70]);
        Components.StateReader_water stateCondIn(
                                           redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[-10,50; 10,70],  rotation=0);
        Components.StateReader_water stateCondOut(
                                           redeclare package Medium = 
              FluidMedium) 
          annotation (extent=[34,-20; 54,0],   rotation=0);
        Modelica.Blocks.Sources.Ramp const(
          offset=0.85,
          duration=500,
          startTime=8000,
          height=0.1) 
                    annotation (extent=[-60,-66; -48,-54]);
        ThermoPower.PowerPlants.SteamTurbineGroup.Components.CondenserPreP_tap 
          condenserIdeal_tap(                            redeclare package 
            Medium = FluidMedium, p=5398.2) annotation (extent=[0,0; 40,40]);
        Water.SinkW sinkWater(
          redeclare package Medium = FluidMedium,
          p0=5398.2,
          h=1.43495e5,
          w0=89.8) annotation (extent=[70,-20; 90,0]);
        Water.SourceW sourceTap(
          redeclare package Medium = FluidMedium,
          p0=5389.2,
          h=1.43495e5) 
                      annotation (extent=[-60,-2; -40,18]);
      equation 
        connect(stateCondIn.inlet, sourceSteam.flange) 
          annotation (points=[-6,60; -56,60],  style(thickness=2));
        connect(const.y, pID.SP) annotation (points=[-47.4,-60; -34,-60; -34,
              -66; -20,-66], style(color=74, rgbcolor={0,0,127}));
        connect(stateCondOut.inlet, condenserIdeal_tap.waterOut) 
          annotation (points=[38,-10; 20,-10; 20,0], style(thickness=2));
        connect(stateCondIn.outlet, condenserIdeal_tap.steamIn) 
          annotation (points=[6,60; 20,60; 20,40], style(thickness=2));
        connect(sinkWater.flange, stateCondOut.outlet) 
          annotation (points=[70,-10; 50,-10], style(thickness=2));
        connect(stateTapping.outlet, condenserIdeal_tap.tapWater) 
          annotation (points=[-14,8; -5,8; -5,4; 4,4],
                                           style(thickness=2));
        connect(sourceTap.flange, stateTapping.inlet) 
          annotation (points=[-40,8; -26,8], style(thickness=2));
        connect(pID.CS, sourceTap.in_w0) annotation (points=[0.6,-70; 20,-70;
              20,-20; -70,-20; -70,20; -54,20; -54,14], style(color=74,
              rgbcolor={0,0,127}));
        connect(pID.PV, condenserIdeal_tap.ratio_Vv_Vtot) annotation (points=[-20,-74;
              -80,-74; -80,24; -20,24; -20,16; 0,16],          style(color=74,
              rgbcolor={0,0,127}));
      end TestCondenserControl;
      
      model TestSTG_cc "Test of STG with condenser control" 
        
        replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
          Modelica.Media.Interfaces.PartialPureSubstance;
        
        annotation (Diagram, experiment(StopTime=20000, NumberOfIntervals=10000));
        Modelica.Mechanics.Rotational.ConstantSpeed constantSpeed(w_fixed=
              314.16/2) 
          annotation (extent=[26,-26; 6,-6]);
        Water.SourceP sourceHPT(h=3.47e6, p0=1.28e7,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[-88,72; -76,84], rotation=270);
        Water.SourceP sourceLPT(h=3.109e6, p0=6e5,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[-40,58; -28,70], rotation=270);
        Water.SourceP sourceToMix(p0=2.98e6, h=3.1076e6,
          redeclare package Medium = FluidMedium) 
          annotation (extent=[-52,72; -40,84], rotation=270);
        Components.EffectHE Rh(dh=3.544e6 - 3.108e6, dp=2.98e6 - 2.68e6) 
          annotation (extent=[-70,70; -58,58], rotation=0);
        Examples.STG_3LRh_bypass_cc sTG_3LRh(
                                   redeclare package FluidMedium = FluidMedium)
                                   annotation (extent=[-90,-56; -10,24]);
        Water.SinkW sinkWater(
          redeclare package Medium = FluidMedium,
          p0=5398.2,
          h=1.43495e5,
          w0=89.8) annotation (extent=[-26,68; -10,84],
                                                      rotation=90);
      public 
        Modelica.Blocks.Sources.Constant com_valveHP(k=1) 
          annotation (extent=[100,30; 80,50]);
      public 
        Modelica.Blocks.Sources.Constant com_valveIP(k=1) 
          annotation (extent=[100,-10; 80,10]);
      public 
        Modelica.Blocks.Sources.Constant com_valveLP(k=1) 
          annotation (extent=[100,-50; 80,-30]);
      public 
        Modelica.Blocks.Sources.Constant com_bypassHP(k=0) 
          annotation (extent=[40,30; 60,50]);
      public 
        Modelica.Blocks.Sources.Constant com_bypassIP(k=0) 
          annotation (extent=[40,-10; 60,10]);
      public 
        Modelica.Blocks.Sources.Constant com_bypassLP(k=0) 
          annotation (extent=[40,-50; 60,-30]);
      public 
        Modelica.Blocks.Sources.Constant com_valveDrumIP(k=1) 
          annotation (extent=[100,70; 80,90]);
      public 
        Modelica.Blocks.Sources.Constant com_valveDrumLP(k=1) 
          annotation (extent=[40,70; 60,90]);
      protected 
        Buses.Actuators actuators annotation (extent=[50,-80; 90,-68], rotation=
             180);
      equation 
        connect(constantSpeed.flange, sTG_3LRh.Shaft_b) annotation (points=[6,-16;
              -10,-16],     style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(com_valveHP.y,actuators. Opening_valveHP) 
                                                      annotation (points=[79,40;
              70,40; 70,-74],        style(color=74, rgbcolor={0,0,127}));
        connect(com_valveIP.y,actuators. Opening_valveIP) 
                                                      annotation (points=[79,0; 70,
              0; 70,-74],   style(color=74, rgbcolor={0,0,127}));
        connect(com_valveLP.y,actuators. Opening_valveLP) 
                                                      annotation (points=[79,-40;
              70,-40; 70,-74],              style(color=74, rgbcolor={0,0,127}));
        connect(com_bypassHP.y,actuators. Opening_byPassHP) 
                                                        annotation (points=[61,40;
              70,40; 70,-74],     style(color=74, rgbcolor={0,0,127}));
        connect(com_bypassIP.y,actuators. Opening_byPassIP) 
                                                        annotation (points=[61,0; 70,
              0; 70,-74],       style(color=74, rgbcolor={0,0,127}));
        connect(com_bypassLP.y,actuators. Opening_byPassLP) 
                                                        annotation (points=[61,-40;
              70,-40; 70,-74],      style(color=74, rgbcolor={0,0,127}));
        connect(com_valveDrumLP.y, actuators.Opening_valveDrumLP) annotation (
            points=[61,80; 70,80; 70,-74], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(com_valveDrumIP.y, actuators.Opening_valveDrumIP) annotation (
            points=[79,80; 70,80; 70,-74], style(
            color=74,
            rgbcolor={0,0,127},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(actuators, sTG_3LRh.ActuatorsBus) annotation (points=[70,-74; 6,
              -74; 6,-44; -10,-44], style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(sTG_3LRh.WaterOut, sinkWater.flange) 
          annotation (points=[-18,24; -18,68], style(thickness=2));
        connect(sTG_3LRh.From_SH_LP, sourceLPT.flange) 
          annotation (points=[-34,24; -34,58], style(thickness=2));
        connect(sTG_3LRh.From_SH_IP, sourceToMix.flange) 
          annotation (points=[-46,24; -46,72], style(thickness=2));
        connect(sTG_3LRh.From_RH_IP, Rh.out1) 
          annotation (points=[-58,24; -58,64; -58,64], style(thickness=2));
        connect(sTG_3LRh.To_RH_IP, Rh.in1) annotation (points=[-70,24; -70,44;
              -70,64; -70.06,64], style(thickness=2));
        connect(sTG_3LRh.From_SH_HP, sourceHPT.flange) 
          annotation (points=[-82,24; -82,72], style(thickness=2));
      end TestSTG_cc;
      
    end Tests;
    
    package Functions 
      
      function curveEfficiency "curve for efficiency calculation" 
        input Real eta_nom "Nominal efficiency (maximum)";
        input Real k "Ratio uf/wiso";
        input Real x "Degree of reaction";
        output Real eta "Value of efficient correspondent";
      protected 
        Real a;
      algorithm 
        a:=sqrt(1 - x);
        eta:=2*k*((a - k) + sqrt((a - k)^2 + 1 - (a^2)))*eta_nom;
      end curveEfficiency;
      
    end Functions;
  end SteamTurbineGroup;
  
  package ElectricGeneratorGroup 
    package Interfaces 
      partial model SingleShaft 
        "Base Class for alternator group, configuration single-shaft (one generator)" 
        parameter SI.Frequency fn=50 "Nominal frequency of the grid";
        parameter SI.Power Pn "Nominal power installed on the grid";
        parameter Real eta=1 "Conversion efficiency of the electric generator";
        parameter SI.MomentOfInertia J_shaft=0 "Total inertia of the system";
        parameter Real d_shaft=0 "Damping constant of the shaft";
        parameter SI.AngularVelocity omega_nom=2*Modelica.Constants.pi*fn/2 
          "Nominal angular velocity of the shaft";
        
        annotation (Diagram, Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-202,14; -122,-14],
                                               style(
                color=10,
                rgbcolor={95,95,95},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Line(points=[140,160; 140,-160], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[120,160; 120,-160], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[100,160; 100,-160], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,20; 100,20], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,0; 120,0], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,-20; 140,-20], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[96,24; 104,16], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[116,4; 124,-4], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[136,-16; 144,-24], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-34,20; 20,20; 44,34], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-30,0; 20,0; 44,14], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-44,-20; 20,-20; 44,-6], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[-140,60; -20,-60], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Text(
              extent=[-120,40; -40,-40],
              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1),
              string="G")),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft 
          annotation (extent=[-220,-20; -180,20]);
        Buses.Sensors SensorsBus annotation (extent=[180,-120; 220,-80]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-180; 180,-140]);
      end SingleShaft;
      
      partial model DoubleShaft 
        "Base Class for alternator group, configuration double-shaft (two generator)" 
        
        //grid
        parameter SI.Frequency fn=50 "Nominal frequency of the grid";
        parameter SI.Power Pn "Nominal power installed on the grid";
        
        //generators
        parameter Real eta_A=1 
          "Conversion efficiency of the electric generator"                          annotation (Dialog(group = "Generator-Shaft A"));
        parameter Real eta_B=1 
          "Conversion efficiency of the electric generator"                          annotation (Dialog(group = "Generator-Shaft B"));
        
        //other parameter
        parameter SI.MomentOfInertia J_shaft_A=0 
          "Total inertia of the steam turbogenerator"                             annotation (Dialog(group = "Generator-Shaft A"));
        parameter Real d_shaft_A=0 "Damping constant of the shaft" annotation (Dialog(group = "Generator-Shaft A"));
        parameter SI.AngularVelocity omega_nom_A=2*Modelica.Constants.pi*fn/2 
          "Nominal angular velocity of the shaft"                                  annotation (Dialog(group = "Generator-Shaft A"));
        parameter SI.MomentOfInertia J_shaft_B=0 
          "Total inertia of the steam turbogenerator"                             annotation (Dialog(group = "Generator-Shaft B"));
        parameter Real d_shaft_B=0 "Damping constant of the shaft" annotation (Dialog(group = "Generator-Shaft B"));
        parameter SI.AngularVelocity omega_nom_B=2*Modelica.Constants.pi*fn/2 
          "Nominal angular velocity of the shaft"                                  annotation (Dialog(group = "Generator-Shaft B"));
        
        Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft_B 
          annotation (extent=[-220,-120; -180,-80]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft_A 
          annotation (extent=[-222,80; -182,120]);
        annotation (Diagram, Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-204,114; -124,86],
                                               style(
                color=10,
                rgbcolor={95,95,95},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Line(points=[140,160; 140,-160], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[120,160; 120,-160], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[100,160; 100,-160], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[48,120; 98,120],style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[48,100; 118,100],
                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[48,80; 138,80],   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[96,124; 104,116],
                                            style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[116,104; 124,96],
                                            style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[136,84; 144,76],   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-36,120; 18,120; 42,134],
                                                style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-32,100; 18,100; 42,114],
                                              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-46,80; 18,80; 42,94],   style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[-142,160; -22,40], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Text(
              extent=[-122,140; -42,60],
              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1),
              string="G"),
            Rectangle(extent=[-202,-86; -122,-114],
                                               style(
                color=10,
                rgbcolor={95,95,95},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Line(points=[50,-80; 100,-80],
                                         style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,-100; 120,-100],
                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,-120; 140,-120],
                                           style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[-34,-80; 20,-80; 44,-66],
                                                style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-30,-100; 20,-100; 44,-86],
                                              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-44,-120; 20,-120; 44,-106],
                                                  style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[-140,-40; -20,-160],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Text(
              extent=[-120,-60; -40,-140],
              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1),
              string="G"),
            Ellipse(extent=[96,-76; 104,-84],
                                            style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[116,-96; 124,-104],
                                            style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[136,-116; 144,-124],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        Buses.Sensors SensorsBus annotation (extent=[180,-120; 220,-80]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-180; 180,-140]);
      end DoubleShaft;
      
      partial model TripleShaft 
        "Base Class for alternator group, configuration triple-shaft (three generator)" 
        
        //grid
        parameter SI.Frequency fn=50 "Nominal frequency of the grid";
        parameter SI.Power Pn "Nominal power installed on the grid";
        
        //generators
        parameter Real eta_A=1 
          "Conversion efficiency of the electric generator"                          annotation (Dialog(group = "Generator-Shaft A"));
        parameter Real eta_B=1 
          "Conversion efficiency of the electric generator"                          annotation (Dialog(group = "Generator-Shaft B"));
        parameter Real eta_C=1 
          "Conversion efficiency of the electric generator"                          annotation (Dialog(group = "Generator-Shaft C"));
        
        //other parameter
        parameter SI.MomentOfInertia J_shaft_A=0 
          "Total inertia of the steam turbogenerator"                             annotation (Dialog(group = "Generator-Shaft A"));
        parameter Real d_shaft_A=0 "Damping constant of the shaft" annotation (Dialog(group = "Generator-Shaft A"));
        parameter SI.AngularVelocity omega_nom_A=2*Modelica.Constants.pi*fn/2 
          "Nominal angular velocity of the shaft"                                  annotation (Dialog(group = "Generator-Shaft A"));
        parameter SI.MomentOfInertia J_shaft_B=0 
          "Total inertia of the steam turbogenerator"                             annotation (Dialog(group = "Generator-Shaft B"));
        parameter Real d_shaft_B=0 "Damping constant of the shaft" annotation (Dialog(group = "Generator-Shaft B"));
        parameter SI.AngularVelocity omega_nom_B=2*Modelica.Constants.pi*fn/2 
          "Nominal angular velocity of the shaft"                                  annotation (Dialog(group = "Generator-Shaft B"));
        parameter SI.MomentOfInertia J_shaft_C=0 
          "Total inertia of the steam turbogenerator"                             annotation (Dialog(group = "Generator-Shaft C"));
        parameter Real d_shaft_C=0 "Damping constant of the shaft" annotation (Dialog(group = "Generator-Shaft C"));
        parameter SI.AngularVelocity omega_nom_C=2*Modelica.Constants.pi*fn/2 
          "Nominal angular velocity of the shaft"                                  annotation (Dialog(group = "Generator-Shaft C"));
        
        Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft_B 
          annotation (extent=[-220,-20; -180,20]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft_A 
          annotation (extent=[-220,100; -180,140]);
        Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft_C 
          annotation (extent=[-220,-140; -180,-100]);
        annotation (Diagram, Icon(
            Rectangle(extent=[-200,200; 200,-200], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=30,
                rgbfillColor={230,230,230})),
            Rectangle(extent=[-200,134; -120,106],
                                               style(
                color=10,
                rgbcolor={95,95,95},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Line(points=[140,180; 140,-180], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[120,180; 120,-180], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[100,180; 100,-180], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,140; 100,140],
                                         style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,120; 120,120],
                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,100; 140,100], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Ellipse(extent=[96,144; 104,136],
                                            style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[116,124; 124,116],
                                            style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[136,104; 144,96],  style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-34,140; 20,140; 44,154],
                                                style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-30,120; 20,120; 44,134],
                                              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-44,100; 20,100; 44,114],style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[-136,176; -24,64], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Text(
              extent=[-120,160; -40,80],
              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1),
              string="G"),
            Rectangle(extent=[-200,-106; -120,-134],
                                               style(
                color=10,
                rgbcolor={95,95,95},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Line(points=[50,-100; 100,-100],
                                         style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,-120; 120,-120],
                                       style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,-140; 140,-140],
                                           style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[-34,-100; 20,-100; 44,-86],
                                                style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-30,-120; 20,-120; 44,-106],
                                              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-44,-140; 20,-140; 44,-126],
                                                  style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[-136,-64; -24,-176],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Text(
              extent=[-120,-80; -40,-160],
              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1),
              string="G"),
            Ellipse(extent=[96,-96; 104,-104],
                                            style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[116,-116; 124,-124],
                                            style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[136,-136; 144,-144],
                                               style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Rectangle(extent=[-200,14; -120,-14],
                                               style(
                color=10,
                rgbcolor={95,95,95},
                thickness=2,
                gradient=2,
                fillColor=10,
                rgbfillColor={135,135,135})),
            Line(points=[50,20; 100,20], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,0; 120,0], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[50,-20; 140,-20], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillPattern=1)),
            Line(points=[-34,20; 20,20; 44,34], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-30,0; 20,0; 44,14], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Line(points=[-44,-20; 20,-20; 44,-6], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[-136,56; -24,-56], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1)),
            Text(
              extent=[-120,40; -40,-40],
              style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255},
                fillPattern=1),
              string="G"),
            Ellipse(extent=[96,24; 104,16], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[116,4; 124,-4], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1)),
            Ellipse(extent=[136,-16; 144,-24], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=0,
                rgbfillColor={0,0,0},
                fillPattern=1))),
          Coordsys(extent=[-200,-200; 200,200], scale=0.1));
        
        Buses.Sensors SensorsBus annotation (extent=[180,-120; 220,-80]);
        Buses.Actuators ActuatorsBus annotation (extent=[220,-180; 180,-140]);
      end TripleShaft;
    end Interfaces;
    
    package Components 
      model PowerSensor "Measures power flow through the component" 
        Electrical.PowerConnection port_a 
                               annotation (extent=[-110,-10; -90,10]);
        Electrical.PowerConnection port_b 
                               annotation (extent=[90,-12; 110,8]);
      annotation (Diagram, Icon(
            Ellipse(extent=[-70,70; 70,-70],   style(color=0, fillColor=7)),
            Line(points=[0,70; 0,40],   style(color=0)),
            Line(points=[22.9,32.8; 40.2,57.3],   style(color=0)),
            Line(points=[-22.9,32.8; -40.2,57.3],   style(color=0)),
            Line(points=[37.6,13.7; 65.8,23.9],   style(color=0)),
            Line(points=[-37.6,13.7; -65.8,23.9],   style(color=0)),
            Line(points=[0,0; 9.02,28.6],   style(color=0)),
            Polygon(points=[-0.48,31.6; 18,26; 18,57.2; -0.48,31.6],     style(
                color=0,
                fillColor=0,
                fillPattern=1)),
            Ellipse(extent=[-5,5; 5,-5],   style(
                color=0,
                gradient=0,
                fillColor=0,
                fillPattern=1)),
               Text(
              extent=[-29,-11; 30,-70],
              style(color=0),
            string="W"),
            Line(points=[-70,0; -90,0],   style(color=0)),
            Line(points=[100,0; 70,0], style(color=0, rgbcolor={0,0,0})),
            Text(extent=[-148,88; 152,128],   string="%name"),
          Line(points=[0,-70; 0,-84], style(color=0, rgbcolor={0,0,0}))));
        Modelica.Blocks.Interfaces.RealOutput W 
          "Power flowing from port_a to port_b" 
            annotation (extent=[-10,-104; 10,-84], rotation=-90);
      equation 
        port_a.W+port_b.W = 0;
        port_a.f = port_b.f;
        W = port_a.W;
      end PowerSensor;
      
      model FrequencySensor "Measures the frequency at the connector" 
        Electrical.PowerConnection port 
                             annotation (extent=[-110,-10; -90,10]);
      annotation (Diagram, Icon(
            Ellipse(extent=[-70,70; 70,-70],   style(color=0, fillColor=7)),
            Line(points=[0,70; 0,40],   style(color=0)),
            Line(points=[22.9,32.8; 40.2,57.3],   style(color=0)),
            Line(points=[-22.9,32.8; -40.2,57.3],   style(color=0)),
            Line(points=[37.6,13.7; 65.8,23.9],   style(color=0)),
            Line(points=[-37.6,13.7; -65.8,23.9],   style(color=0)),
            Line(points=[0,0; 9.02,28.6],   style(color=0)),
            Polygon(points=[-0.48,31.6; 18,26; 18,57.2; -0.48,31.6],     style(
                color=0,
                fillColor=0,
                fillPattern=1)),
            Ellipse(extent=[-5,5; 5,-5],   style(
                color=0,
                gradient=0,
                fillColor=0,
                fillPattern=1)),
               Text(
              extent=[-29,-11; 30,-70],
              style(color=0),
            string="f"),
            Line(points=[-70,0; -90,0],   style(color=0)),
            Line(points=[100,0; 70,0], style(color=0, rgbcolor={0,0,0})),
            Text(extent=[-148,88; 152,128],   string="%name")));
        Modelica.Blocks.Interfaces.RealOutput f "Frequency at the connector" 
            annotation (extent=[92,-10; 112,10], rotation=0);
      equation 
        port.W = 0;
        f = port.f;
      end FrequencySensor;
      
      model Grid_2in "Ideal grid with finite droop and two inlet" 
        parameter SI.Frequency fn=50 "Nominal frequency";
        parameter SI.Power Pn "Nominal power installed on the network";
        parameter Real droop(unit="pu")=0.05 "Network droop";
        SI.Power Wtot "Total power";
        Electrical.PowerConnection connection_A 
                                   annotation (extent=[-100,26; -72,54]);
        Electrical.PowerConnection connection_B 
                                   annotation (extent=[-100,-54; -72,-26]);
        annotation (Diagram, Icon(
            Line(points=[18,-16; 2,-38], style(color=0, rgbcolor={0,0,0})),
            Line(points=[-72,-40; -36,-20],
                                        style(color=0, rgbcolor={0,0,0})),
            Ellipse(extent=[100,-68; -40,68], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[-40,0; -6,0; 24,36; 54,50], style(color=0, rgbcolor={0,0,
                    0})),
            Line(points=[24,36; 36,-6], style(color=0, rgbcolor={0,0,0})),
            Line(points=[-6,0; 16,-14; 40,-52], style(color=0, rgbcolor={0,0,0})),
            Line(points=[18,-14; 34,-6; 70,-22], style(color=0, rgbcolor={0,0,0})),
            Line(points=[68,18; 36,-4; 36,-4], style(color=0, rgbcolor={0,0,0})),
            Ellipse(extent=[-8,2; -2,-4], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[20,38; 26,32], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[52,54; 58,48], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[14,-12; 20,-18], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[66,22; 72,16], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[32,-2; 38,-8], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[38,-50; 44,-56], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[66,-18; 72,-24], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[-72,40; -36,20],
                                        style(color=0, rgbcolor={0,0,0}))));
      equation 
        connection_A.f = fn + droop*fn*connection_A.W/Pn;
        connection_B.f = fn + droop*fn*connection_B.W/Pn;
        Wtot = connection_A.W + connection_B.W;
        
      end Grid_2in;
      
      model Grid_3in "Ideal grid with finite droop and three inlet" 
        parameter SI.Frequency fn=50 "Nominal frequency";
        parameter SI.Power Pn "Nominal power installed on the network";
        parameter Real droop(unit="pu")=0.05 "Network droop";
        SI.Power Wtot "Total power";
        Electrical.PowerConnection connection_A 
                                   annotation (extent=[-100,66; -72,94]);
        Electrical.PowerConnection connection_B 
                                   annotation (extent=[-100,-14; -72,14]);
        Electrical.PowerConnection connection_C 
                                   annotation (extent=[-100,-94; -72,-66]);
        annotation (Diagram, Icon(
            Line(points=[18,-16; 2,-38], style(color=0, rgbcolor={0,0,0})),
            Line(points=[-72,-80; -20,-48],
                                        style(color=0, rgbcolor={0,0,0})),
            Ellipse(extent=[100,-68; -40,68], style(
                color=0,
                rgbcolor={0,0,0},
                thickness=2,
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[-72,0; -6,0; 24,36; 54,50], style(color=0, rgbcolor={0,0,
                    0})),
            Line(points=[24,36; 36,-6], style(color=0, rgbcolor={0,0,0})),
            Line(points=[-6,0; 16,-14; 40,-52], style(color=0, rgbcolor={0,0,0})),
            Line(points=[18,-14; 34,-6; 70,-22], style(color=0, rgbcolor={0,0,0})),
            Line(points=[68,18; 36,-4; 36,-4], style(color=0, rgbcolor={0,0,0})),
            Ellipse(extent=[-8,2; -2,-4], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[20,38; 26,32], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[52,54; 58,48], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[14,-12; 20,-18], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[66,22; 72,16], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[32,-2; 38,-8], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[38,-50; 44,-56], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Ellipse(extent=[66,-18; 72,-24], style(
                color=0,
                rgbcolor={0,0,0},
                fillColor=7,
                rgbfillColor={255,255,255})),
            Line(points=[-72,80; -26,40],
                                        style(color=0, rgbcolor={0,0,0}))));
      equation 
        connection_A.f = fn + droop*fn*connection_A.W/Pn;
        connection_B.f = fn + droop*fn*connection_B.W/Pn;
        connection_C.f = fn + droop*fn*connection_C.W/Pn;
        Wtot = connection_A.W + connection_B.W + connection_C.W;
        
      end Grid_3in;
      
      package OldElementsSwingEquation 
        model Generator_SE 
          "Electric generator inclusive of approximate swing equation" 
          //Parameter
          parameter Real eta=1 "Conversion efficiency";
          parameter Integer Np=2 "Number of couple of electrical poles";
          parameter SI.Power Pmax "Output maximum power";
          parameter Real J "Moment of inertia of the system-shaft";
          parameter Real r=0.3 "Damping of the system";
          parameter SI.AngularVelocity omega_nom 
            "Nominal angulary velocity of shaft";
          parameter SI.Angle delta_start "Loaded angle start value";
          
          //Variable  
          SI.AngularVelocity omega "Shaft angular velocity";
          SI.Conversions.NonSIunits.AngularVelocity_rpm n "Rotational speed";
          SI.Angle delta(start=delta_start) "Loaded angle";
          SI.AngularVelocity d_delta "Variation of loaded angle";
          SI.AngularVelocity omegaGrid "Angulary velocity in the grid";
          SI.Power Pe "Outlet electric power";
          SI.Power Pm "Inlet mechanical power";
          Real M "Auxiliary variable";
          Real D "Auxiliary variable";
          
          //Connector
          Electrical.PowerConnection powerConnection 
                                            annotation (extent=[58,-14; 86,14]);
          Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft 
            annotation (extent=[-100,-10; -80,10]);
          annotation (Icon(
              Rectangle(extent=[-60,8; -90,-8], style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  gradient=2,
                  fillColor=9,
                  rgbfillColor={175,175,175})),
              Ellipse(extent=[-60,60; 60,-60], style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  fillColor=30,
                  rgbfillColor={230,230,230})),
              Text(
                extent=[-60,60; 60,-20],
                style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  fillColor=30,
                  rgbfillColor={230,230,230},
                  fillPattern=1),
                string="G"),
              Text(
                extent=[-60,-10; 60,-50],
                style(color=58, rgbcolor={0,127,0}),
                string="SE")),Diagram);
          
        equation 
          M=J/(Np^2)*omega_nom*Np;
          D=2*r*sqrt(Pmax*J*omega_nom*Np/(Np^2));
          omega=der(shaft.phi);
          Pm=omega*shaft.tau;
          n = Modelica.SIunits.Conversions.to_rpm(omega) 
            "Rotational speed in rpm";
          omegaGrid = 2*Modelica.Constants.pi*powerConnection.f;
          powerConnection.W = - Pe;
          
          //Definition of loaded angle
          d_delta = omega*Np - omegaGrid;
          der(delta) = d_delta;
          
          //Swing Equation  
          M*der(d_delta) + D*d_delta = Pm - Pe/eta;
          Pe = Pmax*Modelica.Math.sin(delta);
          
        end Generator_SE;
        
        model Generator_SE_com 
          "Electric generator inclusive of complex swing equation" 
          parameter Real eta=1 "Conversion efficiency";
          parameter Integer Np=2 "Number of couple of electrical poles";
          parameter SI.Power Pmax "Output maximum power";
          parameter Real J "Moment of inertia of the system-shaft";
          parameter Real r=0.3 "Damping of the system";
          parameter SI.Angle delta_start "Start value of loaded angle";
          
          SI.AngularVelocity omega "Shaft angular velocity";
          SI.Conversions.NonSIunits.AngularVelocity_rpm n "Rotational speed";
          SI.Angle delta(start=delta_start) "Loaded angle";
          SI.AngularVelocity d_delta "Variation of loaded angle";
          SI.AngularVelocity omegaGrid "Angulary velocity in the grid";
          SI.Power Pe "Outlet electric power";
          SI.Power Pm "Inlet mechanical power";
          Real M "Auxiliary variable";
          Real D "Auxiliary variable";
          
          Electrical.PowerConnection powerConnection 
                                            annotation (extent=[58,-14; 86,14]);
          Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft 
            annotation (extent=[-100,-10; -80,10]);
          annotation (Icon(
              Rectangle(extent=[-60,8; -90,-8], style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  gradient=2,
                  fillColor=9,
                  rgbfillColor={175,175,175})),
              Ellipse(extent=[-60,60; 60,-60], style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  fillColor=30,
                  rgbfillColor={230,230,230})),
              Text(
                extent=[-60,60; 60,-20],
                style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  fillColor=30,
                  rgbfillColor={230,230,230},
                  fillPattern=1),
                string="G"),
              Text(
                extent=[-60,-10; 60,-50],
                string="SE",
                style(color=58, rgbcolor={0,127,0}))),
                              Diagram);
          
        equation 
          M=J/(Np^2)*omega*Np;
          D=2*r*sqrt(Pmax*J*omega*Np/(Np^2));
          omega=der(shaft.phi);
          Pm=omega*shaft.tau;
          n = Modelica.SIunits.Conversions.to_rpm(omega) 
            "Rotational speed in rpm";
          omegaGrid = 2*Modelica.Constants.pi*powerConnection.f;
          powerConnection.W = - Pe;
          
          //Definition of loaded angle  
          d_delta = omega*Np - omegaGrid;
          der(delta) = d_delta;
          
          //Swing Equation    
          M*der(d_delta) + D*d_delta = Pm - Pe;
          Pe = Pmax*Modelica.Math.sin(delta);
          
        end Generator_SE_com;
        
        model Generator_SE_Breaker 
          "Electic generator inclusive of approximate swing equation and breaker for connection grid" 
          //Parameters 
          parameter Real eta=1 "Conversion efficiency";
          parameter Integer Np=2 "Number of couple of electrical poles";
          parameter SI.Power Pmax "Maximum power of generator";
          parameter Real J "Moment of inertia of the system-shaft";
          parameter Real r=0.3 "Damping of the system";
          parameter SI.AngularVelocity omega_nom 
            "Nominal angulary velocity of shaft";
          parameter SI.Angle delta_start "Loaded angle start value";
          parameter SI.AngularVelocity omega_start 
            "Angulaty velocity of shaft start value";
          
          SI.AngularVelocity omega(start=omega_start) "Shaft angular velocity";
          SI.Conversions.NonSIunits.AngularVelocity_rpm n "Rotational speed";
          SI.Angle delta(start=delta_start) "Loaded angle";
          SI.AngularVelocity d_delta "Variation of loaded angle";
          SI.AngularVelocity omegaGrid "Angulary velocity in the grid";
          SI.Power Pe "Outlet electric power";
          SI.Power Pm "Inlet mechanical power";
          Real M "Auxiliary variable";
          Real D "Auxiliary variable";
          
          Electrical.PowerConnection powerConnection 
                                            annotation (extent=[58,-14; 86,14]);
          Modelica.Mechanics.Rotational.Interfaces.Flange_a shaft 
            annotation (extent=[-100,-10; -80,10]);
          annotation (Icon(
              Rectangle(extent=[-60,8; -90,-8], style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  gradient=2,
                  fillColor=9,
                  rgbfillColor={175,175,175})),
              Ellipse(extent=[-60,60; 60,-60], style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  fillColor=30,
                  rgbfillColor={230,230,230})),
              Text(
                extent=[-60,60; 60,-20],
                style(
                  color=0,
                  rgbcolor={0,0,0},
                  thickness=2,
                  fillColor=30,
                  rgbfillColor={230,230,230},
                  fillPattern=1),
                string="G"),
              Text(
                extent=[-60,-10; 60,-50],
                string="SE",
                style(color=58, rgbcolor={0,127,0}))),
                              Diagram);
                 annotation (Diagram);
          Modelica.Blocks.Interfaces.BooleanInput closed 
            annotation (extent=[-10,58; 10,78],  rotation=-90);
          Modelica.Blocks.Interfaces.RealOutput delta_out 
            annotation (extent=[-10,-78; 10,-58],
                                                rotation=270);
        equation 
          M=J/(Np^2)*omega_nom*Np;
          D=2*r*sqrt(Pmax*J*omega_nom*Np/(Np^2));
          omega=der(shaft.phi);
          Pm=omega*shaft.tau;
          n = Modelica.SIunits.Conversions.to_rpm(omega) 
            "Rotational speed in rpm";
          omegaGrid = 2*Modelica.Constants.pi*powerConnection.f;
          powerConnection.W = - Pe;
          
          //Definition loaded angle
          d_delta = omega*Np - omegaGrid;
          der(delta) = d_delta;
          
          //swing equation
          M*der(d_delta) + D*d_delta = Pm - Pe/eta;
          if closed then
            Pe = Pmax*Modelica.Math.sin(delta);
          else
            //Free turbine and not connection a grid
            Pe = 0;
          end if;
          
          //Output signal
          delta_out = delta - integer(delta/(2*Modelica.Constants.pi))*2*Modelica.Constants.pi;
          
        end Generator_SE_Breaker;
        
        model SwingEquation 
          
          parameter SI.Power Pmax "Output maximum power";
          parameter Real J "Moment of inertia of the system-shaft";
          parameter Real r=0.3 "Damping of the system";
          parameter SI.Angle delta_start "Start value of loaded angle";
          parameter SI.AngularVelocity omega_nom 
            "Nominal angulary velocity of shaft";
          
          SI.Angle delta(start=delta_start) "Loaded angle";
          SI.AngularVelocity d_delta "Variation of loaded angle";
          SI.AngularVelocity omegaGrid "Angulary velocity in the grid";
          SI.AngularVelocity omegaGen "Angulary velocity of the generator";
          SI.Power Pe "Outlet electric power";
          SI.Power Pm "Inlet mechanical power";
          Real M "Auxiliary variable";
          Real D "Auxiliary variable";
          
          ThermoPower.Electrical.PowerConnection powerConnection_a 
            annotation (extent=[-94,-14; -66,14]);
          ThermoPower.Electrical.PowerConnection powerConnection_b 
                                            annotation (extent=[66,-14; 94,14]);
          Modelica.Blocks.Interfaces.RealOutput delta_out 
            annotation (extent=[-10,56; 10,76], rotation=90);
          annotation (Diagram, Icon(Rectangle(extent=[-80,60; 80,-60], style(
                  color=0,
                  rgbcolor={0,0,0},
                  fillColor=30,
                  rgbfillColor={230,230,230})), Text(
                extent=[-80,40; 86,-40],
                style(color=0, rgbcolor={0,0,0}),
                string="S.E.")));
          
        equation 
          M=J/(Np^2)*omega_nom*Np;
          D=2*r*sqrt(Pmax*J*omega_nom*Np/(Np^2));
          Pm=powerConnection_a.W;
          omegaGrid = 2*Modelica.Constants.pi*powerConnection_b.f;
          omegaGen = 2*Modelica.Constants.pi*powerConnection_a.f;
          powerConnection_b.W = - Pe;
          
          //Definition of loaded angle  
          d_delta = omega*Np - omegaGrid;
          der(delta) = d_delta;
          
          //Swing Equation    
          M*der(d_delta) + D*d_delta = Pm - Pe/eta;
          Pe = Pmax*Modelica.Math.sin(delta);
          
          //Output signal
          delta_out = delta - integer(delta/(2*Modelica.Constants.pi))*2*Modelica.Constants.pi;
          
        end SwingEquation;
      end OldElementsSwingEquation;
    end Components;
    
    package Examples 
      model SingleShaft_static 
        "Alternator group in configuration single-shaft (one generator)" 
        extends 
          ThermoPower.PowerPlants.ElectricGeneratorGroup.Interfaces.SingleShaft;
        
        Electrical.Grid grid(fn=fn, Pn=Pn) annotation (extent=[100,-20; 140,20]);
        Electrical.Generator generator(eta=eta) 
                 annotation (extent=[-78,-30; -18,30]);
        Components.PowerSensor powerSensor annotation (extent=[12,-8; 28,8]);
        annotation (Diagram);
        Components.FrequencySensor frequencySensor 
          annotation (extent=[10,-68; 26,-52]);
        Modelica.Mechanics.Rotational.Inertia inertia(J=J_shaft, w_start=omega_nom,
          initType=Options.steadyState) 
          annotation (extent=[-120,-10; -100,10]);
        Modelica.Mechanics.Rotational.Damper damper(d=d_shaft) 
          annotation (extent=[-118,-70; -98,-50],rotation=0);
        Modelica.Mechanics.Rotational.Fixed fixed 
          annotation (extent=[-80,-80; -60,-60]);
        Electrical.Breaker breaker annotation (extent=[48,20; 88,-20]);
      equation 
        connect(inertia.flange_a, shaft) annotation (points=[-120,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper.flange_a, shaft) annotation (points=[-118,-60; -140,-60;
              -140,0; -200,0],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper.flange_b, fixed.flange_b) annotation (points=[-98,-60;
              -70,-60; -70,-70], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(generator.powerConnection, powerSensor.port_a) annotation (
            points=[-22.2,5.32907e-016; 0.6,5.32907e-016; 0.6,0; 12,0],style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(frequencySensor.port, generator.powerConnection) annotation (
            points=[10,-60; 0,-60; 0,5.32907e-016; -22.2,5.32907e-016],
                                                                     style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(powerSensor.port_b, breaker.connection1) annotation (points=[28,-0.16;
              34,-0.16; 34,-3.55271e-016; 50.8,-3.55271e-016],      style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(breaker.connection2, grid.connection) annotation (points=[85.2,
              -3.55271e-016; 86,-3.1606e-022; 86,0; 94,0; 94,3.55271e-016;
              102.8,3.55271e-016],
                             style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(ActuatorsBus.breakerClosed, breaker.closed) annotation (points=[200,-160;
              68,-160; 68,-16],        style(color=52, rgbcolor={213,255,170}));
        connect(SensorsBus.power, powerSensor.W) annotation (points=[200,-100;
              100,-100; 100,-40; 20,-40; 20,-7.52],
                              style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.frequency, frequencySensor.f) annotation (points=[200,-100;
              100,-100; 100,-60; 26.16,-60], style(color=84, rgbcolor={255,170,
                213}));
        connect(generator.shaft, inertia.flange_b) annotation (points=[-73.8,
              5.32907e-016; -85.9,5.32907e-016; -85.9,0; -100,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
      end SingleShaft_static;
      
      model DoubleShaft_static 
        "Alternator group in configuration double-shaft (two generator)" 
        extends 
          ThermoPower.PowerPlants.ElectricGeneratorGroup.Interfaces.DoubleShaft;
        Electrical.Generator generator_A(eta=eta_A) 
                                       annotation (extent=[-80,70; -20,130]);
        Modelica.Mechanics.Rotational.Inertia inertia_A(J=J_shaft_A, w_start=
              omega_nom_A) 
          annotation (extent=[-120,90; -100,110]);
        Modelica.Mechanics.Rotational.Damper damper_A(d=d_shaft_A) 
          annotation (extent=[-120,10; -100,30],
                                               rotation=0);
        Modelica.Mechanics.Rotational.Fixed fixed 
          annotation (extent=[-50,-46; -30,-26],rotation=0);
        Electrical.Breaker breaker_A 
                                   annotation (extent=[60,120; 100,80]);
        Electrical.Generator generator_B(eta=eta_B) 
                                        annotation (extent=[-80,-130; -20,-70]);
        Modelica.Mechanics.Rotational.Inertia inertia_B(J=J_shaft_B, w_start=
              omega_nom_B) 
          annotation (extent=[-120,-110; -100,-90]);
        Modelica.Mechanics.Rotational.Damper damper_B(d=d_shaft_B) 
          annotation (extent=[-120,-30; -100,-10],
                                                 rotation=0);
        Electrical.Breaker breaker_B 
                                    annotation (extent=[60,-120; 100,-80]);
        Components.PowerSensor powerSensor_A 
                                            annotation (extent=[10,90; 30,110]);
        Components.FrequencySensor frequencySensor_A 
          annotation (extent=[10,160; 30,180]);
        Components.PowerSensor powerSensor_B 
                                            annotation (extent=[10,-110; 30,-90]);
        Components.FrequencySensor frequencySensor_B 
          annotation (extent=[8,-170; 28,-150]);
        annotation (Diagram);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.Grid_2in grid(
            Pn=Pn, fn=fn) 
                   annotation (extent=[140,0; 180,40]);
      equation 
        connect(inertia_B.flange_a, shaft_B) annotation (points=[-120,-100;
              -200,-100],
                    style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(generator_B.shaft, inertia_B.flange_b) annotation (points=[-75.8,
              -100; -100,-100],                      style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(powerSensor_B.port_a, generator_B.powerConnection) 
                                                                  annotation (
            points=[10,-100; -24.2,-100],
                                       style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(frequencySensor_B.port, generator_B.powerConnection) 
                                                                    annotation (
           points=[8,-160; 0,-160; 0,-100; -24.2,-100],
                                                    style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(breaker_B.connection1, powerSensor_B.port_b) 
                                                           annotation (points=[62.8,
              -100; 35.7,-100; 35.7,-100.2; 30,-100.2],    style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(breaker_A.connection1, powerSensor_A.port_b) 
                                                          annotation (points=[62.8,100;
              35.7,100; 35.7,99.8; 30,99.8],           style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(powerSensor_A.port_a, generator_A.powerConnection) 
                                                                  annotation (
            points=[10,100; -24.2,100],
                                     style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(frequencySensor_A.port, generator_A.powerConnection) 
                                                                    annotation (
           points=[10,170; 0,170; 0,100; -24.2,100],
                                                style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper_B.flange_a, shaft_B) annotation (points=[-120,-20; -140,
              -20; -140,-100; -200,-100],
                                       style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper_B.flange_b, fixed.flange_b) annotation (points=[-100,-20;
              -40,-20; -40,-36],
                               style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper_A.flange_b, fixed.flange_b) annotation (points=[-100,20;
              -40,20; -40,-36],
                              style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper_A.flange_a, shaft_A) annotation (points=[-120,20; -140,
              20; -140,100; -202,100],
                                style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(inertia_A.flange_a, shaft_A) annotation (points=[-120,100; -202,
              100],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(inertia_A.flange_b, generator_A.shaft) annotation (points=[-100,100;
              -75.8,100],    style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(ActuatorsBus.breakerClosed_shaftA, breaker_A.closed) 
          annotation (points=[200,-160; 110,-160; 110,0; 80,0; 80,84],style(
              color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.breakerClosed_shaftB, breaker_B.closed) 
          annotation (points=[200,-160; 110,-160; 110,0; 80,0; 80,-84],style(
              color=52, rgbcolor={213,255,170}));
        connect(SensorsBus.power_shaftA, powerSensor_A.W) annotation (points=[200,-100;
              140,-100; 140,-140; 40,-140; 40,40; 20,40; 20,90.6],
                                                       style(color=84, rgbcolor=
               {255,170,213}));
        connect(SensorsBus.power_shaftB, powerSensor_B.W) annotation (points=[200,-100;
              140,-100; 140,-140; 20,-140; 20,-109.4],    style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.frequency_shaftA, frequencySensor_A.f) annotation (
            points=[200,-100; 140,-100; 140,-140; 40,-140; 40,170; 30.2,170],
                                                      style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.frequency_shaftB, frequencySensor_B.f) annotation (
            points=[200,-100; 140,-100; 140,-140; 60,-140; 60,-160; 28.2,-160],
                                                        style(color=84,
              rgbcolor={255,170,213}));
        connect(grid.connection_B, breaker_B.connection2) annotation (points=[142.8,12;
              120,12; 120,-100; 97.2,-100],    style(pattern=0, thickness=2));
        connect(grid.connection_A, breaker_A.connection2) annotation (points=[142.8,28;
              120,28; 120,100; 97.2,100],      style(pattern=0, thickness=2));
      end DoubleShaft_static;
      
      model TripleShaft_static 
        "Alternator group in configuration triple-shaft (three generator)" 
        extends 
          ThermoPower.PowerPlants.ElectricGeneratorGroup.Interfaces.TripleShaft;
        Electrical.Generator generator_A(eta=eta_A) 
                                       annotation (extent=[-80,90; -20,150]);
        Components.PowerSensor powerSensor_A 
                                           annotation (extent=[20,110; 40,130]);
        Components.FrequencySensor frequencySensor_A 
          annotation (extent=[20,150; 40,170]);
        Modelica.Mechanics.Rotational.Inertia inertia_A(J=J_shaft_A, w_start=
              omega_nom_A) 
          annotation (extent=[-140,110; -120,130]);
        Modelica.Mechanics.Rotational.Damper damper_A(d=d_shaft_A) 
          annotation (extent=[-140,70; -120,90],
                                               rotation=0);
        Electrical.Breaker breaker_A 
                                   annotation (extent=[60,100; 100,140]);
        Electrical.Generator generator_B(eta=eta_B) 
                                        annotation (extent=[-80,-30; -20,30]);
        Components.PowerSensor powerSensor_B 
                                            annotation (extent=[20,-10; 40,10]);
        Components.FrequencySensor frequencySensor_B 
          annotation (extent=[20,30; 40,50]);
        Modelica.Mechanics.Rotational.Inertia inertia_B(J=J_shaft_B, w_start=
              omega_nom_B) 
          annotation (extent=[-140,-10; -120,10]);
        Modelica.Mechanics.Rotational.Damper damper_B(d=d_shaft_B) 
          annotation (extent=[-140,-50; -120,-30],
                                                 rotation=0);
        Modelica.Mechanics.Rotational.Fixed fixed 
          annotation (extent=[-110,-186; -90,-166],
                                                 rotation=0);
        Electrical.Breaker breaker_B 
                                    annotation (extent=[60,-20; 100,20]);
        Electrical.Generator generator_C(eta=eta_C) 
                                        annotation (extent=[-80,-150; -20,-90]);
        Components.PowerSensor powerSensor_C 
                                            annotation (extent=[20,-130; 40,
              -110]);
        Components.FrequencySensor frequencySensor_C 
          annotation (extent=[20,-90; 40,-70]);
        Modelica.Mechanics.Rotational.Inertia inertia_C(J=J_shaft_C, w_start=
              omega_nom_C) 
          annotation (extent=[-140,-130; -120,-110]);
        Modelica.Mechanics.Rotational.Damper damper_C(d=d_shaft_C) 
          annotation (extent=[-140,-170; -120,-150],
                                                 rotation=0);
        Electrical.Breaker breaker_C 
                                    annotation (extent=[60,-140; 100,-100]);
        annotation (Diagram);
        Components.Grid_3in grid_3in(Pn=Pn, fn=fn) 
          annotation (extent=[140,-20; 180,20],
                                              rotation=0);
      equation 
        connect(fixed.flange_b, damper_B.flange_b) annotation (points=[-100,
              -176; -100,-40; -120,-40],
                        style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper_C.flange_b, fixed.flange_b) annotation (points=[-120,
              -160; -100,-160; -100,-176],
                                 style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(fixed.flange_b, damper_A.flange_b) annotation (points=[-100,
              -176; -100,80; -120,80],
                               style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(inertia_C.flange_b, generator_C.shaft) annotation (points=[-120,
              -120; -75.8,-120],
                               style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(generator_C.powerConnection, powerSensor_C.port_a) annotation (
            points=[-24.2,-120; 20,-120],
                                      style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(powerSensor_C.port_b, breaker_C.connection1) annotation (points=[40,
              -120.2; 48,-120.2; 48,-120; 62.8,-120],  style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(breaker_B.connection1, powerSensor_B.port_b) annotation (points=[62.8,
              3.55271e-016; 53.55,3.55271e-016; 53.55,-0.2; 40,-0.2],
            style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(powerSensor_B.port_a, generator_B.powerConnection) annotation (
            points=[20,0; 13.6,0; 13.6,5.32907e-016; -24.2,5.32907e-016],
                                                                        style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(generator_B.shaft, inertia_B.flange_b) annotation (points=[-75.8,
              5.32907e-016; -76,5.32907e-016; -76,0; -120,0],          style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(inertia_B.flange_a, shaft_B) annotation (points=[-140,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(inertia_C.flange_a, shaft_C) annotation (points=[-140,-120;
              -200,-120],
                    style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(inertia_A.flange_a, shaft_A) annotation (points=[-140,120; -200,
              120],             style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(inertia_A.flange_b, generator_A.shaft) annotation (points=[-120,120;
              -75.8,120],              style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(generator_A.powerConnection, powerSensor_A.port_a) annotation (
            points=[-24.2,120; 20,120],
                                    style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(powerSensor_A.port_b, breaker_A.connection1) annotation (points=[40,119.8;
              48,119.8; 48,120; 62.8,120],         style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(frequencySensor_A.port, generator_A.powerConnection) 
          annotation (points=[20,160; 0,160; 0,120; -24.2,120],
                                                            style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(frequencySensor_B.port, generator_B.powerConnection) 
          annotation (points=[20,40; 0,40; 0,0; -6,0; -6,5.32907e-016; -24.2,
              5.32907e-016],
            style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(frequencySensor_C.port, generator_C.powerConnection) 
          annotation (points=[20,-80; 0,-80; 0,-120; -24.2,-120],
                                                                style(
            pattern=0,
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper_C.flange_a, shaft_C) annotation (points=[-140,-160; -160,
              -160; -160,-120; -200,-120],
                                       style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper_B.flange_a, shaft_B) annotation (points=[-140,-40; -160,
              -40; -160,0; -200,0],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(damper_A.flange_a, shaft_A) annotation (points=[-140,80; -160,
              80; -160,120; -200,120],
                                style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2,
            fillColor=7,
            rgbfillColor={255,255,255},
            fillPattern=1));
        connect(ActuatorsBus.breakerClosed_shaftC, breaker_C.closed) 
          annotation (points=[200,-160; 110,-160; 110,-80; 80,-80; 80,-104],
                                                                       style(
              color=52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.breakerClosed_shaftB, breaker_B.closed) 
          annotation (points=[200,-160; 110,-160; 110,40; 80,40; 80,16],
                                                                   style(color=
                52, rgbcolor={213,255,170}));
        connect(ActuatorsBus.breakerClosed_shaftA, breaker_A.closed) 
          annotation (points=[200,-160; 110,-160; 110,150; 80,150; 80,136],
                                                                    style(color=
               52, rgbcolor={213,255,170}));
        connect(SensorsBus.power_shaftC, powerSensor_C.W) annotation (points=[200,-100;
              160,-100; 160,-60; 54,-60; 54,-100; 30,-100; 30,-129.4],
                                                          style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.frequency_shaftC, frequencySensor_C.f) annotation (
            points=[200,-100; 160,-100; 160,-60; 54,-60; 54,-80; 40.2,-80],
                                        style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.power_shaftB, powerSensor_B.W) annotation (points=[200,-100;
              160,-100; 160,-60; 54,-60; 54,-20; 30,-20; 30,-9.4],
                                                         style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.frequency_shaftB, frequencySensor_B.f) annotation (
            points=[200,-100; 160,-100; 160,-60; 54,-60; 54,40; 40.2,40],
                                                      style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.power_shaftA, powerSensor_A.W) annotation (points=[200,-100;
              160,-100; 160,-60; 54,-60; 54,100; 30,100; 30,110.6],
                                                       style(color=84, rgbcolor=
               {255,170,213}));
        connect(SensorsBus.frequency_shaftA, frequencySensor_A.f) annotation (
            points=[200,-100; 160,-100; 160,-60; 54,-60; 54,160; 40.2,160],
                                                      style(color=84, rgbcolor=
                {255,170,213}));
        connect(grid_3in.connection_B, breaker_B.connection2) annotation (
            points=[142.8,3.55271e-016; 96,-3.1606e-022; 96,3.55271e-016; 97.2,
              3.55271e-016],      style(pattern=0, thickness=2));
        connect(grid_3in.connection_C, breaker_C.connection2) annotation (
            points=[142.8,-16; 120,-16; 120,-120; 97.2,-120],
                                                       style(pattern=0,
              thickness=2));
        connect(grid_3in.connection_A, breaker_A.connection2) annotation (
            points=[142.8,16; 120,16; 120,120; 97.2,120],
                                                   style(pattern=0, thickness=2));
      end TripleShaft_static;
      
      model SingleShaft_SE 
        "Alternator group in configuration single-shaft (one generator)" 
        extends 
          ThermoPower.PowerPlants.ElectricGeneratorGroup.Interfaces.SingleShaft;
        parameter SI.Power Pmax "Outlet maximum power";
        parameter SI.Angle delta_start "Loaded angle start value";
        
        Electrical.Grid grid(fn=fn, Pn=Pn) annotation (extent=[60,-20; 100,20]);
        Components.PowerSensor powerSensor annotation (extent=[0,-10; 20,10]);
        annotation (Diagram);
        Components.FrequencySensor frequencySensor 
          annotation (extent=[0,20; 20,40]);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE
          generator_SE(
          eta=eta,
          Pmax=Pmax,
          J=J_shaft,
          delta_start=delta_start,
          omega_nom=omega_nom)    annotation (extent=[-120,-30; -60,30]);
      equation 
        connect(SensorsBus.power, powerSensor.W) annotation (points=[200,-100;
              10,-100; 10,-9.4],
                              style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.frequency, frequencySensor.f) annotation (points=[200,-100;
              34,-100; 34,30; 20.2,30],      style(color=84, rgbcolor={255,170,
                213}));
        connect(generator_SE.shaft, shaft) annotation (points=[-117,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(generator_SE.powerConnection, powerSensor.port_a) annotation (
            points=[-68.4,5.32907e-016; -8.8,5.32907e-016; -8.8,0; 0,0],  style(
              pattern=0, thickness=2));
        connect(powerSensor.port_b, grid.connection) annotation (points=[20,-0.2;
              48,-0.2; 48,3.55271e-016; 62.8,3.55271e-016],         style(
              pattern=0, thickness=2));
        connect(frequencySensor.port, generator_SE.powerConnection) annotation (
           points=[0,30; -20,30; -20,5.32907e-016; -68.4,5.32907e-016],style(
              pattern=0, thickness=2));
      end SingleShaft_SE;
      
      model DoubleShaft_SE 
        "Alternator group in configuration double-shaft (two generator)" 
        extends 
          ThermoPower.PowerPlants.ElectricGeneratorGroup.Interfaces.DoubleShaft;
        parameter SI.Power Pmax_A "Outlet maximum power" annotation (Dialog(group = "Generator-Shaft A"));
        parameter SI.Angle delta_start_A "Loaded angle start value" 
                                         annotation (Dialog(group = "Generator-Shaft A"));
        parameter SI.Power Pmax_B "Outlet maximum power" annotation (Dialog(group = "Generator-Shaft B"));
        parameter SI.Angle delta_start_B "Loaded angle start value" 
                                         annotation (Dialog(group = "Generator-Shaft B"));
        
        Components.PowerSensor powerSensor_A 
                                            annotation (extent=[20,90; 40,110]);
        Components.FrequencySensor frequencySensor_A 
          annotation (extent=[20,130; 40,150]);
        Components.PowerSensor powerSensor_B 
                                            annotation (extent=[20,-110; 40,-90]);
        Components.FrequencySensor frequencySensor_B 
          annotation (extent=[20,-70; 40,-50]);
        annotation (Diagram);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.Grid_2in grid(
            Pn=Pn, fn=fn) 
                   annotation (extent=[140,-20; 178,20]);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE
          generator_SE_A(
          eta=eta_A,
          Pmax=Pmax_A,
          J=J_shaft_A,
          D=d_shaft_A,
          delta_start=delta_start_A,
          omega_nom=omega_nom_A)    annotation (extent=[-100,70; -40,130]);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE
          generator_SE_B(
          eta=eta_B,
          Pmax=Pmax_B,
          J=J_shaft_B,
          D=d_start_B,
          delta_start=delta_start_B,
          omega_nom=omega_nom_B)    annotation (extent=[-100,-130; -40,-70]);
        
      equation 
        connect(SensorsBus.power_shaftA, powerSensor_A.W) annotation (points=[200,-100;
              140,-100; 140,-60; 80,-60; 80,40; 30,40; 30,90.6],
                                                       style(color=84, rgbcolor=
               {255,170,213}));
        connect(SensorsBus.power_shaftB, powerSensor_B.W) annotation (points=[200,-100;
              140,-100; 140,-120; 30,-120; 30,-109.4],    style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.frequency_shaftA, frequencySensor_A.f) annotation (
            points=[200,-100; 140,-100; 140,-60; 80,-60; 80,140; 40.2,140],
                                                      style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.frequency_shaftB, frequencySensor_B.f) annotation (
            points=[200,-100; 140,-100; 140,-60; 40.2,-60],
                                                        style(color=84,
              rgbcolor={255,170,213}));
        connect(powerSensor_B.port_b, grid.connection_B) annotation (points=[40,
              -100.2; 46,-100.2; 46,-100; 100,-100; 100,-8; 142.66,-8],
                                                                style(pattern=0,
              thickness=2));
        connect(grid.connection_A, powerSensor_A.port_b) annotation (points=[142.66,8;
              100,8; 100,99.8; 40,99.8],           style(pattern=0, thickness=2));
        connect(generator_SE_B.powerConnection, powerSensor_B.port_a) 
          annotation (points=[-48.4,-100; 20,-100],
                                                  style(pattern=0, thickness=2));
        connect(frequencySensor_B.port, generator_SE_B.powerConnection) 
          annotation (points=[20,-60; 0,-60; 0,-100; -48.4,-100],
                                                                style(pattern=0,
              thickness=2));
        connect(powerSensor_A.port_a, generator_SE_A.powerConnection) 
          annotation (points=[20,100; -48.4,100],
                                                style(pattern=0, thickness=2));
        connect(frequencySensor_A.port, generator_SE_A.powerConnection) 
          annotation (points=[20,140; 0,140; 0,100; -48.4,100],
                                                            style(pattern=0,
              thickness=2));
        connect(generator_SE_A.shaft, shaft_A) annotation (points=[-97,100;
              -202,100],
                   style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(generator_SE_B.shaft, shaft_B) annotation (points=[-97,-100;
              -200,-100],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
      end DoubleShaft_SE;
      
      model TripleShaft_SE 
        "Alternator group in configuration triple-shaft (three generator)" 
        extends 
          ThermoPower.PowerPlants.ElectricGeneratorGroup.Interfaces.TripleShaft;
        parameter SI.Power Pmax_A "Outlet maximum power" annotation (Dialog(group = "Generator-Shaft A"));
        parameter SI.Angle delta_start_A "Loaded angle start value" 
                                         annotation (Dialog(group = "Generator-Shaft A"));
        parameter SI.Power Pmax_B "Outlet maximum power" annotation (Dialog(group = "Generator-Shaft B"));
        parameter SI.Angle delta_start_B "Loaded angle start value" 
                                         annotation (Dialog(group = "Generator-Shaft B"));
        parameter SI.Power Pmax_C "Outlet maximum power" annotation (Dialog(group = "Generator-Shaft C"));
        parameter SI.Angle delta_start_C "Loaded angle start value" 
                                         annotation (Dialog(group = "Generator-Shaft C"));
        
        Components.PowerSensor powerSensor_A 
                                           annotation (extent=[10,110; 30,130]);
        Components.FrequencySensor frequencySensor_A 
          annotation (extent=[10,150; 30,170]);
        Components.PowerSensor powerSensor_B 
                                            annotation (extent=[10,-10; 30,10]);
        Components.FrequencySensor frequencySensor_B 
          annotation (extent=[10,30; 30,50]);
        Components.PowerSensor powerSensor_C 
                                            annotation (extent=[10,-130; 30,
              -110]);
        Components.FrequencySensor frequencySensor_C 
          annotation (extent=[10,-90; 30,-70]);
        annotation (Diagram);
        Components.Grid_3in grid_3in(Pn=Pn, fn=fn) 
          annotation (extent=[140,-20; 180,20],
                                              rotation=0);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE
          generator_SE_A(
          eta=eta_A,
          Pmax=Pmax_A,
          J=J_shaft_A,
          D=d_shaft_A,
          delta_start=delta_start_A,
          omega_nom=omega_nom_A)    annotation (extent=[-120,90; -60,150]);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE
          generator_SE_B(
          eta=eta_B,
          Pmax=Pmax_B,
          J=J_shaft_B,
          D=d_start_B,
          delta_start=delta_start_B,
          omega_nom=omega_nom_B)    annotation (extent=[-120,-30; -60,30]);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE
          generator_SE_B1(
          eta=eta_C,
          Pmax=Pmax_C,
          J=J_shaft_C,
          D=d_start_C,
          delta_start=delta_start_C,
          omega_nom=omega_nom_C)    annotation (extent=[-120,-150; -60,-90]);
      equation 
        connect(SensorsBus.power_shaftC, powerSensor_C.W) annotation (points=[200,-100;
              120,-100; 120,-140; 20,-140; 20,-129.4],    style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.frequency_shaftC, frequencySensor_C.f) annotation (
            points=[200,-100; 60,-100; 60,-80; 30.2,-80],
                                        style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.power_shaftB, powerSensor_B.W) annotation (points=[200,-100;
              60,-100; 60,-20; 20,-20; 20,-9.4],         style(color=84,
              rgbcolor={255,170,213}));
        connect(SensorsBus.frequency_shaftB, frequencySensor_B.f) annotation (
            points=[200,-100; 60,-100; 60,40; 30.2,40],
                                                      style(color=84, rgbcolor=
                {255,170,213}));
        connect(SensorsBus.power_shaftA, powerSensor_A.W) annotation (points=[200,-100;
              60,-100; 60,100; 20,100; 20,110.6],      style(color=84, rgbcolor=
               {255,170,213}));
        connect(SensorsBus.frequency_shaftA, frequencySensor_A.f) annotation (
            points=[200,-100; 60,-100; 60,160; 30.2,160],
                                                      style(color=84, rgbcolor=
                {255,170,213}));
        connect(generator_SE_B1.powerConnection, powerSensor_C.port_a) 
          annotation (points=[-68.4,-120; 10,-120],
                                                  style(pattern=0, thickness=2));
        connect(frequencySensor_C.port, generator_SE_B1.powerConnection) 
          annotation (points=[10,-80; -20,-80; -20,-120; -68.4,-120],
                                                                  style(pattern=
               0, thickness=2));
        connect(powerSensor_B.port_a, generator_SE_B.powerConnection) 
          annotation (points=[10,0; -6.8,0; -6.8,5.32907e-016; -68.4,
              5.32907e-016], style(pattern=0, thickness=2));
        connect(frequencySensor_B.port, generator_SE_B.powerConnection) 
          annotation (points=[10,40; -20,40; -20,5.32907e-016; -68.4,
              5.32907e-016],
            style(pattern=0, thickness=2));
        connect(powerSensor_A.port_a, generator_SE_A.powerConnection) 
          annotation (points=[10,120; -68.4,120],
                                                style(pattern=0, thickness=2));
        connect(frequencySensor_A.port, generator_SE_A.powerConnection) 
          annotation (points=[10,160; -20,160; -20,120; -68.4,120],
                                                              style(pattern=0,
              thickness=2));
        connect(generator_SE_A.shaft, shaft_A) annotation (points=[-117,120;
              -200,120],
                   style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(generator_SE_B.shaft, shaft_B) annotation (points=[-117,0; -200,
              0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(generator_SE_B1.shaft, shaft_C) annotation (points=[-117,-120;
              -200,-120],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(grid_3in.connection_A, powerSensor_A.port_b) annotation (points=[142.8,16;
              100,16; 100,119.8; 30,119.8],      style(pattern=0, thickness=2));
        connect(grid_3in.connection_B, powerSensor_B.port_b) annotation (points=[142.8,
              3.55271e-016; 51.7,3.55271e-016; 51.7,-0.2; 30,-0.2],
            style(pattern=0, thickness=2));
        connect(grid_3in.connection_C, powerSensor_C.port_b) annotation (points=[142.8,
              -16; 100,-16; 100,-120.2; 30,-120.2],  style(pattern=0, thickness=
               2));
      end TripleShaft_SE;
      
      model GeneratorGroup 
        "Alternator group in configuration single-shaft (one generator)" 
        extends Interfaces.SingleShaft( final Pn = 0, final omega_nom = 0);
        parameter Modelica.SIunits.Power Pmax "Outlet maximum power";
        parameter Real r_electrical=0.2 
          "Electrical damping of generator/shaft system";
        parameter Modelica.SIunits.Angle delta_start = 0 
          "Loaded angle start value";
        
        ThermoPower.Electrical.PowerSensor powerSensor 
                                           annotation (extent=[20,-10; 40,10]);
        annotation (Diagram);
        ThermoPower.Electrical.FrequencySensor frequencySensor 
          annotation (extent=[20,40; 40,60]);
        ThermoPower.Electrical.Generator generator(eta=eta, J=J_shaft) 
                                  annotation (extent=[-100,-30; -40,30]);
        ThermoPower.Electrical.NetworkGrid_Pmax network(
          hasBreaker=true,
          Pmax=Pmax,
          J=J_shaft,
          deltaStart=delta_start,
          fnom=fn,
          r=r_electrical) 
               annotation (extent=[80,-20; 120,20]);
        Modelica.Mechanics.Rotational.Damper damper(d=d_shaft) 
          annotation (extent=[-100,-60; -80,-40]);
        Modelica.Mechanics.Rotational.Fixed fixed 
          annotation (extent=[-50,-86; -30,-66]);
      equation 
        connect(SensorsBus.power, powerSensor.W) annotation (points=[200,-100;
              30,-100; 30,-9.4],
                              style(color=84, rgbcolor={255,170,213}));
        connect(SensorsBus.frequency, frequencySensor.f) annotation (points=[200,-100;
              60,-100; 60,50; 40.2,50],      style(color=84, rgbcolor={255,170,
                213}));
        connect(generator.shaft, shaft)    annotation (points=[-95.8,
              5.32907e-016; -100,5.32907e-016; -100,0; -200,0],
            style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(generator.powerConnection, powerSensor.port_a)    annotation (
            points=[-44.2,5.32907e-016; 20,5.32907e-016; 20,0],           style(
              pattern=0, thickness=2));
        connect(frequencySensor.port, generator.powerConnection)    annotation (
           points=[20,50; -20,50; -20,5.32907e-016; -44.2,5.32907e-016],
                                                                       style(
              pattern=0, thickness=2));
        connect(network.powerConnection, powerSensor.port_b) annotation (points=[80,
              3.55271e-016; 40,3.55271e-016; 40,-0.2],             style(
            pattern=0,
            thickness=2,
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(ActuatorsBus.ConnectedGenerator, network.closed) annotation (
            points=[200,-160; 140,-160; 140,40; 100,40; 100,19.4],
                                                           style(
            color=52,
            rgbcolor={213,255,170},
            fillColor=30,
            rgbfillColor={230,230,230},
            fillPattern=1));
        connect(damper.flange_a, shaft) annotation (points=[-100,-50; -140,-50;
              -140,0; -200,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(fixed.flange_b, damper.flange_b) annotation (points=[-40,-76;
              -40,-50; -80,-50], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(SensorsBus.loadedAngle, network.delta_out) annotation (points=[200,-100;
              100,-100; 100,-18],     style(color=84, rgbcolor={255,170,213}));
      end GeneratorGroup;
    end Examples;
    
    package Tests 
      
      model Test_Generator_SE 
        annotation (Diagram, experiment(StopTime=32, NumberOfIntervals=50000));
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=1.28e7,
          pstart_out=2.98e6,
          wstart=67.6,
          hstartin=3.47e6,
          hstartout=3.1076e6,
          wnom=67.6,
          eta_iso_nom=0.833,
          Kt=0.0032078) 
                      annotation (extent=[-80,-24; -48,8]);
        Water.SinkP sinkP(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[-44,34; -32,46]);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          wnom=67.6,
          hstart=3.47e6,
          pnom=1.296e7,
          dpnom=1.6e5,
          Cv=1165)             annotation (extent=[-70,30; -82,18],rotation=90);
        Water.SourceP sourceP(h=3.47e6, p0=1.296e7) 
          annotation (extent=[-96,34; -84,46]);
      public 
        Modelica.Blocks.Sources.Ramp com_valveHP_a(
          offset=0.2,
          startTime=5,
          height=+0.7,
          duration=3) 
          annotation (extent=[0,76; -12,88]);
      public 
        Modelica.Blocks.Sources.Ramp com_valveHP_b(
          offset=0,
          duration=5,
          height=-0.8,
          startTime=15) 
          annotation (extent=[0,54; -12,66]);
        Modelica.Blocks.Math.Add add 
          annotation (extent=[-56,62; -42,76], rotation=180);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE
          generator_SE(
          Pmax=30e6,
          eta=0.96,
          r=0.2,
          J=15000,
          delta_start=0.5073,
          omega_nom=157.08) 
                     annotation (extent=[-30,-48; 50,32]);
        Electrical.Grid grid(Pn=50e8, droop=0) 
          annotation (extent=[66,-18; 86,2]);
      equation 
        connect(sinkP.flange,steamTurbineStodola. outlet) annotation (points=[-44,40;
              -51.68,40; -51.68,4.8],          style(thickness=2));
        connect(valveHP.outlet,steamTurbineStodola. inlet) annotation (points=[-76,18;
              -76,4.64],                     style(thickness=2));
        connect(sourceP.flange,valveHP. inlet) 
          annotation (points=[-84,40; -76,40; -76,30], style(thickness=2));
        connect(add.y, valveHP.theta) annotation (points=[-56.7,69; -62,69; -62,
              24; -71.2,24],                                                 style(
              color=74, rgbcolor={0,0,127}));
        connect(com_valveHP_b.y, add.u1) annotation (points=[-12.6,60; -30,60;
              -30,64; -40,64; -40.6,64.8],
                           style(color=74, rgbcolor={0,0,127}));
        connect(com_valveHP_a.y, add.u2) annotation (points=[-12.6,82; -30,82;
              -30,74; -40.6,74; -40.6,73.2],
                                     style(color=74, rgbcolor={0,0,127}));
        connect(generator_SE.shaft, steamTurbineStodola.shaft_b) annotation (
            points=[-26,-8; -53.76,-8],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(grid.connection, generator_SE.powerConnection) annotation (
            points=[67.4,-8; 53.1,-8; 53.1,-8; 38.8,-8],
                                         style(pattern=0, thickness=2));
      end Test_Generator_SE;
      
      model Test_Generator_SE_com 
        annotation (Diagram, experiment(StopTime=3000, NumberOfIntervals=30000));
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=1.28e7,
          pstart_out=2.98e6,
          wstart=67.6,
          hstartin=3.47e6,
          hstartout=3.1076e6,
          wnom=67.6,
          eta_iso_nom=0.833,
          Kt=0.0032078) 
                      annotation (extent=[-80,-24; -48,8]);
        Water.SinkP sinkP(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[-44,34; -32,46]);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          wnom=67.6,
          hstart=3.47e6,
          pnom=1.296e7,
          dpnom=1.6e5,
          Cv=1165)             annotation (extent=[-70,30; -82,18],rotation=90);
        Water.SourceP sourceP(h=3.47e6, p0=1.296e7) 
          annotation (extent=[-96,34; -84,46]);
      public 
        Modelica.Blocks.Sources.Ramp com_valveHP_a(
          height=+0.8,
          offset=0.2,
          duration=5,
          startTime=1000) 
          annotation (extent=[0,76; -12,88]);
      public 
        Modelica.Blocks.Sources.Ramp com_valveHP_b(
          height=-0.9,
          offset=0,
          duration=5,
          startTime=2000) 
          annotation (extent=[0,54; -12,66]);
        Modelica.Blocks.Math.Add add 
          annotation (extent=[-56,62; -42,76], rotation=180);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE_com
          generator_SE(
          J=7000,
          delta_start=0.77,
          Pmax=20e6,
          r=0.2)     annotation (extent=[-30,-48; 50,32]);
        Electrical.Grid grid(Pn=50e8, droop=0) 
          annotation (extent=[66,-18; 86,2]);
      equation 
        connect(sinkP.flange,steamTurbineStodola. outlet) annotation (points=[-44,40;
              -51.68,40; -51.68,4.8],          style(thickness=2));
        connect(valveHP.outlet,steamTurbineStodola. inlet) annotation (points=[-76,18;
              -76,4.64],                     style(thickness=2));
        connect(sourceP.flange,valveHP. inlet) 
          annotation (points=[-84,40; -76,40; -76,30], style(thickness=2));
        connect(add.y, valveHP.theta) annotation (points=[-56.7,69; -62,69; -62,
              24; -71.2,24],                                                 style(
              color=74, rgbcolor={0,0,127}));
        connect(com_valveHP_b.y, add.u1) annotation (points=[-12.6,60; -30,60;
              -30,64; -40,64; -40.6,64.8],
                           style(color=74, rgbcolor={0,0,127}));
        connect(com_valveHP_a.y, add.u2) annotation (points=[-12.6,82; -30,82;
              -30,74; -40.6,74; -40.6,73.2],
                                     style(color=74, rgbcolor={0,0,127}));
        connect(generator_SE.shaft, steamTurbineStodola.shaft_b) annotation (
            points=[-26,-8; -53.76,-8],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(grid.connection, generator_SE.powerConnection) annotation (
            points=[67.4,-8; 53.1,-8; 53.1,-8; 38.8,-8],
                                         style(pattern=0, thickness=2));
      end Test_Generator_SE_com;
      
      model Test_Generator_SE_breaker 
        annotation (Diagram, experiment(StopTime=32, NumberOfIntervals=50000));
        Water.SteamTurbineStodola steamTurbineStodola(
          pstart_in=1.28e7,
          pstart_out=2.98e6,
          wstart=67.6,
          hstartin=3.47e6,
          hstartout=3.1076e6,
          wnom=67.6,
          eta_iso_nom=0.833,
          Kt=0.0032078) 
                      annotation (extent=[-80,-24; -48,8]);
        Water.SinkP sinkP(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[-44,34; -32,46]);
        Water.ValveVap valveHP(
          CvData=ThermoPower.Choices.Valve.CvTypes.Cv,
          CheckValve=true,
          wnom=67.6,
          hstart=3.47e6,
          pnom=1.296e7,
          dpnom=1.6e5,
          Cv=1165)             annotation (extent=[-70,30; -82,18],rotation=90);
        Water.SourceP sourceP(h=3.47e6, p0=1.296e7) 
          annotation (extent=[-96,34; -84,46]);
      public 
        Modelica.Blocks.Sources.Ramp com_valveHP_a(
          offset=0.2,
          startTime=5,
          height=+0.7,
          duration=3) 
          annotation (extent=[0,76; -12,88]);
      public 
        Modelica.Blocks.Sources.Ramp com_valveHP_b(
          offset=0,
          duration=5,
          height=-0.8,
          startTime=15) 
          annotation (extent=[0,54; -12,66]);
        Modelica.Blocks.Math.Add add 
          annotation (extent=[-56,62; -42,76], rotation=180);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Components.OldElementsSwingEquation.Generator_SE_Breaker
          generator_SE(
          Pmax=30e6,
          omega_nom=157.08,
          eta=0.96,
          J=15000,
          delta_start=0.5073,
          omega_start=157.08,
          r=0.2)     annotation (extent=[-30,-48; 50,32]);
        Electrical.Grid grid(Pn=50e8, droop=0) 
          annotation (extent=[66,-18; 86,2]);
      public 
        Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=false) 
          annotation (extent=[38,46; 58,66]);
      equation 
        connect(sinkP.flange,steamTurbineStodola. outlet) annotation (points=[-44,40;
              -51.68,40; -51.68,4.8],          style(thickness=2));
        connect(valveHP.outlet,steamTurbineStodola. inlet) annotation (points=[-76,18;
              -76,4.64],                     style(thickness=2));
        connect(sourceP.flange,valveHP. inlet) 
          annotation (points=[-84,40; -76,40; -76,30], style(thickness=2));
        connect(add.y, valveHP.theta) annotation (points=[-56.7,69; -62,69; -62,
              24; -71.2,24],                                                 style(
              color=74, rgbcolor={0,0,127}));
        connect(com_valveHP_b.y, add.u1) annotation (points=[-12.6,60; -30,60;
              -30,64; -40,64; -40.6,64.8],
                           style(color=74, rgbcolor={0,0,127}));
        connect(com_valveHP_a.y, add.u2) annotation (points=[-12.6,82; -30,82;
              -30,74; -40.6,74; -40.6,73.2],
                                     style(color=74, rgbcolor={0,0,127}));
        connect(generator_SE.shaft, steamTurbineStodola.shaft_b) annotation (
            points=[-26,-8; -53.76,-8],style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(grid.connection, generator_SE.powerConnection) annotation (
            points=[67.4,-8; 53.1,-8; 53.1,-8; 38.8,-8],
                                         style(pattern=0, thickness=2));
        connect(booleanConstant.y, generator_SE.closed) annotation (points=[59,56;
              78,56; 78,30; 10,30; 10,19.2],     style(color=5, rgbcolor={255,0,
                255}));
      end Test_Generator_SE_breaker;
      
      model TestSingleShaft 
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Examples.SingleShaft_static
          singleShaft(
          Pn=50e8,
          omega_nom=314.16/2,
          eta=0.9,
          J_shaft=100,
          d_shaft=0)  annotation (extent=[0,-40; 80,40]);
        annotation (Diagram);
        Water.SteamTurbineStodola steamTurbineStodola(
          hstartin=3.47e6,
          pstart_in=128e5,
          pstart_out=29.8e5,
          wstart=67.6,
          hstartout=3.1076e6,
          wnom=67.6,
          eta_iso_nom=0.83387,
          Kt=0.00307) 
                   annotation (extent=[-80,-22; -44,22]);
        Water.SourceW sourceW(
          h=3.47e6,
          w0=67.6,
          p0=128e5) annotation (extent=[-102,50; -82,70]);
        Water.SinkP sinkP(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[-36,50; -16,70]);
      protected 
        Buses.Sensors sensors annotation (extent=[62,44; 82,56],  rotation=180);
        Buses.Actuators actuators 
          annotation (extent=[64,-56; 84,-44],  rotation=0);
      public 
        Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
          annotation (extent=[10,-90; 30,-70]);
      equation 
        connect(steamTurbineStodola.shaft_b, singleShaft.shaft) annotation (
            points=[-50.48,0; 0,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(sourceW.flange, steamTurbineStodola.inlet) annotation (points=[
              -82,60; -75.5,60; -75.5,17.38], style(thickness=2));
        connect(sinkP.flange, steamTurbineStodola.outlet) annotation (points=[
              -36,60; -48.14,60; -48.14,17.6], style(thickness=2));
        connect(sensors, singleShaft.SensorsBus) annotation (points=[72,50; 90,
              50; 90,-20; 80,-20],   style(color=84, rgbcolor={255,170,213}));
        connect(actuators, singleShaft.ActuatorsBus) annotation (points=[74,-50;
              90,-50; 90,-32; 80,-32],       style(color=52, rgbcolor={213,255,
                170}));
        connect(booleanConstant.y, actuators.breakerClosed) annotation (points=[31,-80;
              50,-80; 50,-50; 74,-50],
                                 style(color=5, rgbcolor={255,0,255}));
      end TestSingleShaft;
      
      model TestDoubleShaft 
        annotation (Diagram);
        Water.SteamTurbineStodola Turbine1(
          pstart_in=130e5,
          pstart_out=28.5e5,
          wstart=70.59,
          hstartout=3.11e6,
          wnom=70.59,
          hstartin=3.47e6,
          Kt=0.00307,
          eta_iso_nom=0.83) 
                     annotation (extent=[-76,8; -36,48]);
        Water.SourceW sourceW1(
          h=3.47e6,
          w0=67.6,
          p0=128e5) annotation (extent=[-96,54; -82,68]);
        Water.SinkP sinkP1(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[-30,54; -18,66]);
      protected 
        Buses.Sensors sensors annotation (extent=[62,44; 82,56],  rotation=180);
        Buses.Actuators actuators 
          annotation (extent=[64,-36; 84,-24],  rotation=0);
      public 
        Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
          annotation (extent=[20,-70; 40,-50]);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Examples.DoubleShaft_static
          doubleShaft(
          Pn=50e8,
          J_shaft_A=2000,
          omega_nom_A=314.16/2,
          J_shaft_B=2000,
          omega_nom_B=314.16/2) annotation (extent=[20,-20; 80,40]);
        Water.SteamTurbineStodola Turbine2(
          hstartin=3.55e6,
          eta_iso_nom=0.9,
          Kt=0.01478,
          pstart_in=26.8e5,
          pstart_out=6e5,
          wstart=81.1,
          hstartout=3.128e6,
          wnom=81.1) 
                   annotation (extent=[-76,-50; -36,-10]);
        Water.SourceW sourceW2(
          w0=81.1,
          p0=26.8e5,
          h=3.554e6) annotation (extent=[-96,-6; -82,8]);
        Water.SinkP sinkP2(p0=6e5, h=3.128e6) 
          annotation (extent=[-30,-6; -18,6]);
      equation 
        connect(sourceW1.flange, Turbine1.inlet) 
          annotation (points=[-82,61; -71,61; -71,43.8], style(thickness=2));
        connect(sinkP1.flange, Turbine1.outlet) 
          annotation (points=[-30,60; -40.6,60; -40.6,44], style(thickness=2));
        connect(sourceW2.flange, Turbine2.inlet) 
          annotation (points=[-82,1; -71,1; -71,-14.2], style(thickness=2));
        connect(sinkP2.flange, Turbine2.outlet) 
          annotation (points=[-30,0; -40.6,0; -40.6,-14], style(thickness=2));
        connect(Turbine2.shaft_b, doubleShaft.shaft_B) annotation (points=[-43.2,
              -30; 0,-30; 0,-5; 20,-5],       style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(Turbine1.shaft_b, doubleShaft.shaft_A) annotation (points=[-43.2,28;
              -11.75,28; -11.75,25; 19.7,25],
                                style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(actuators, doubleShaft.ActuatorsBus) annotation (points=[74,-30;
              92,-30; 92,-14; 80,-14],       style(color=52, rgbcolor={213,255,
                170}));
        connect(booleanConstant.y, actuators.breakerClosed_shaftA) annotation (
            points=[41,-60; 60,-60; 60,-30; 74,-30], style(color=5, rgbcolor={
                255,0,255}));
        connect(booleanConstant.y, actuators.breakerClosed_shaftB) annotation (
            points=[41,-60; 52,-60; 52,-30; 74,-30], style(color=5, rgbcolor={
                255,0,255}));
        connect(doubleShaft.SensorsBus, sensors) annotation (points=[80,-5; 92,
              -5; 92,50; 72,50],    style(color=84, rgbcolor={255,170,213}));
      end TestDoubleShaft;
      
      model TestTripleShaft 
        annotation (Diagram);
      protected 
        Buses.Sensors sensors annotation (extent=[62,44; 82,56],  rotation=180);
        Buses.Actuators actuators 
          annotation (extent=[64,-56; 84,-44],  rotation=0);
      public 
        Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
          annotation (extent=[20,-98; 40,-78]);
        ThermoPower.PowerPlants.ElectricGeneratorGroup.Examples.TripleShaft_static
          tripleShaft(
          Pn=50e8,
          J_shaft_A=2000,
          J_shaft_B=2000,
          J_shaft_C=2000,
          omega_nom_A=314.16/2,
          omega_nom_B=314.16/2,
          omega_nom_C=314.16/2) annotation (extent=[0,-40; 80,40]);
        Water.SteamTurbineStodola Turbine1(
          pstart_in=130e5,
          pstart_out=28.5e5,
          wstart=70.59,
          hstartout=3.11e6,
          wnom=70.59,
          hstartin=3.47e6,
          Kt=0.00307,
          eta_iso_nom=0.83) 
                     annotation (extent=[-84,40; -44,80]);
        Water.SourceW sourceW1(
          h=3.47e6,
          w0=67.6,
          p0=128e5) annotation (extent=[-100,80; -86,94]);
        Water.SinkP sinkP1(p0=29.8e5, h=3.1076e6) 
          annotation (extent=[-40,82; -28,94]);
        Water.SteamTurbineStodola Turbine2(
          hstartin=3.55e6,
          eta_iso_nom=0.9,
          Kt=0.01478,
          pstart_in=26.8e5,
          pstart_out=6e5,
          wstart=81.1,
          hstartout=3.128e6,
          wnom=81.1)       annotation (extent=[-84,-20; -44,20]);
        Water.SourceW sourceW2(
          w0=81.1,
          p0=26.8e5,
          h=3.554e6) annotation (extent=[-100,24; -86,38]);
        Water.SinkP sinkP2(p0=6e5, h=3.128e6) 
          annotation (extent=[-40,26; -28,38]);
        Water.SteamTurbineStodola Turbine3(
          pstart_in=6e5,
          pstart_out=5.3982e3,
          wstart=89.82,
          hstartin=3.109e6,
          hstartout=2.3854e6,
          wnom=89.82,
          Kt=0.0769)       annotation (extent=[-84,-78; -44,-38]);
        Water.SourceW sourceW3(
          w0=89.82,
          p0=6e5,
          h=3.109e6) annotation (extent=[-100,-36; -86,-22]);
        Water.SinkP sinkP3(p0=5.3982e3, h=2.3854) 
                           annotation (extent=[-40,-34; -28,-22]);
      equation 
        connect(tripleShaft.SensorsBus, sensors) annotation (points=[80,-20; 92,
              -20; 92,50; 72,50],    style(color=84, rgbcolor={255,170,213}));
        connect(actuators, tripleShaft.ActuatorsBus) annotation (points=[74,-50;
              92,-50; 92,-32; 80,-32],       style(color=52, rgbcolor={213,255,
                170}));
        connect(booleanConstant.y, actuators.breakerClosed_shaftA) annotation (
            points=[41,-88; 60,-88; 60,-50; 74,-50],style(color=5, rgbcolor={
                255,0,255}));
        connect(booleanConstant.y, actuators.breakerClosed_shaftB) annotation (
            points=[41,-88; 54,-88; 54,-50; 74,-50],style(color=5, rgbcolor={
                255,0,255}));
        connect(booleanConstant.y, actuators.breakerClosed_shaftC) annotation (
            points=[41,-88; 48,-88; 48,-50; 74,-50],style(color=5, rgbcolor={
                255,0,255}));
        connect(sourceW1.flange, Turbine1.inlet) 
          annotation (points=[-86,87; -79,87; -79,75.8], style(thickness=2));
        connect(sinkP1.flange, Turbine1.outlet) 
          annotation (points=[-40,88; -48.6,88; -48.6,76], style(thickness=2));
        connect(sourceW2.flange, Turbine2.inlet) 
          annotation (points=[-86,31; -79,31; -79,15.8], style(thickness=2));
        connect(sinkP2.flange, Turbine2.outlet) 
          annotation (points=[-40,32; -48.6,32; -48.6,16], style(thickness=2));
        connect(Turbine1.shaft_b, tripleShaft.shaft_A) annotation (points=[-51.2,60;
              -20,60; -20,24; 0,24],               style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(Turbine2.shaft_b, tripleShaft.shaft_B) annotation (points=[
              -51.2,0; 0,0], style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
        connect(sourceW3.flange, Turbine3.inlet) annotation (points=[-86,-29;
              -79,-29; -79,-42.2], style(thickness=2));
        connect(sinkP3.flange, Turbine3.outlet) annotation (points=[-40,-28;
              -48.6,-28; -48.6,-42], style(thickness=2));
        connect(Turbine3.shaft_b, tripleShaft.shaft_C) annotation (points=[-51.2,
              -58; -20,-58; -20,-24; 0,-24],           style(
            color=0,
            rgbcolor={0,0,0},
            thickness=2));
      end TestTripleShaft;
    end Tests;
  end ElectricGeneratorGroup;
  
  package Control 
    model PID "ISA PID controller with anti-windup" 
      parameter Real Kp "Proportional gain (normalised units)";
      parameter Time Ti "Integral time";
      parameter Time Td = 0 "Derivative time";
      parameter Real Nd = 1 "Derivative action up to Nd / Td rad/s";
      parameter Real Ni = 1 
        "Ni*Ti is the time constant of anti-windup compensation";
      parameter Real b = 1 "Setpoint weight on proportional action";
      parameter Real c = 0 "Setpoint weight on derivative action";
      parameter Real PVmin "Minimum value of process variable for scaling";
      parameter Real PVmax "Maximum value of process variable for scaling";
      parameter Real CSmin "Minimum value of control signal for scaling";
      parameter Real CSmax "Maximum value of control signal for scaling";
      parameter Real PVstart = 0.5 "Start value of PV (scaled)";
      parameter Real CSstart = 0.5 "Start value of CS (scaled)";
      parameter Boolean steadyStateInit = false;
      
      Real P "Proportional action / Kp";
      Real I(start = CSstart/Kp) "Integral action / Kp";
      Real D "Derivative action / Kp";
      Real Dx(start = c*PVstart - PVstart) "State of approximated derivator";
      Real PVs "Process variable scaled in per unit";
      Real SPs "Setpoint variable scaled in per unit";
      Real CSs(start = CSstart) "Control signal scaled in per unit";
      Real CSbs(start = CSstart) 
        "Control signal scaled in per unit before saturation";
      Real track "Tracking signal for anti-windup integral action";
      
      Modelica.Blocks.Interfaces.RealInput PV "Process variable signal" 
                    annotation (extent=[-112,-52; -88,-28]);
      annotation (Diagram, Icon(
          Rectangle(extent=[-100,100; 100,-100], style(
              color=0,
              rgbcolor={0,0,0},
              fillColor=30,
              rgbfillColor={240,240,240})),
          Text(
            extent=[-54,40; 52,-34],
            string="PID",
            style(color=0, rgbcolor={0,0,0})),
          Text(
            extent=[-110,-108; 110,-142],
            style(
              color=3,
              rgbcolor={0,0,255},
              thickness=2),
            string="%name")));
      Modelica.Blocks.Interfaces.RealOutput CS "Control signal" 
        annotation (extent=[94,-12; 118,12]);
      Modelica.Blocks.Interfaces.RealInput SP "Set point signal" 
                    annotation (extent=[-112,28; -88,52]);
      
    equation 
      // Scaling
      SPs=(SP-PVmin)/(PVmax-PVmin);
      PVs=(PV-PVmin)/(PVmax-PVmin);
      CS = CSmin + CSs*(CSmax-CSmin);
      // Controller actions  
      P = b*SPs - PVs;
      if Ti>0 then
        Ti*der(I) = SPs - PVs + track;
      else
        I = 0;
      end if;
      if Td > 0 then
        Td/Nd*der(Dx) + Dx = c*SPs - PVs 
          "State equation of approximated derivator";
        D = Nd*((c*SPs - PVs) - Dx) "Output equation of approximated derivator";
      else
        Dx = 0;
        D = 0;
      end if;
      CSbs = Kp*(P+I+D) "Control signal before saturation";
      CSs = smooth(0, if CSbs > 1 then 1 else if CSbs < 0 then 0 else CSbs) 
        "Saturated control signal";
      track = (CSs-CSbs)/(Kp*Ni);
    initial equation 
      if steadyStateInit then
        if Ti > 0 then
          der(I) = 0;
        end if;
        if Td > 0 then
          D = 0;
        end if;
      end if;
    end PID;
    
    model LevelSetPoint 
      parameter Pressure p1;
      parameter Pressure p2;
      parameter Length y1;
      parameter Length y2;
      Modelica.Blocks.Interfaces.RealInput drumPressure 
        annotation (extent=[-112,-12; -88,12]);
      Modelica.Blocks.Interfaces.RealOutput levelSetPoint 
        annotation (extent=[94,-12; 118,12]);
    equation 
      levelSetPoint = noEvent(
        if drumPressure < p1 then y1 else 
        if drumPressure > p2 then y2 else y1 + (y2-y1)/(p2-p1)*(drumPressure-p1));
      annotation (Diagram, Icon(Rectangle(extent=[-100,100; 100,-100], style(
              color=0,
              rgbcolor={0,0,0},
              fillColor=30,
              rgbfillColor={240,240,240})),
                                      Text(
            extent=[-132,-104; 146,-154],
            style(color=3, rgbcolor={0,0,255}),
            string="%name"),
          Text(
            extent=[-80,40; 80,-40],
            style(
              color=0,
              rgbcolor={0,0,0},
              fillColor=30,
              rgbfillColor={240,240,240},
              fillPattern=1),
            string="SetPoint")));
    end LevelSetPoint;
    
  end Control;
  
  package Buses 
    
    expandable connector Sensors 
     // Empty connector, defined by expansion 
      
      annotation (Icon(Polygon(points=[-100,100; 100,100; 100,0; 100,-100; -100,
                -100; -100,100],
                          style(
                            color=84,
                            rgbcolor={255,170,213},
                            fillColor=78,
                            rgbfillColor={127,0,127},
                            fillPattern=1)),
                       Text(extent=[-60,60; 60,-60],
                          string="S",
                          style(
                            color=7,
                            rgbcolor={255,255,255},
                            fillColor=78,
                            rgbfillColor={127,0,127},
                            fillPattern=1))));
    end Sensors;
    
    expandable connector Actuators 
     // Empty connector, defined by expansion
      annotation (Icon(Polygon(points=[-100,100; 100,100; 100,0; 100,-100; -100,
                -100; -100,100],                                                        style(
              color=52,
              rgbcolor={213,255,170},
              fillColor=62,
              rgbfillColor={0,127,127},
              fillPattern=1)),
                       Text(extent=[-60,60; 60,-60],
                         style(
                          color=7,
                          rgbcolor={255,255,255},
                          fillColor=78,
                          rgbfillColor={127,0,127},
                          fillPattern=1),
                         string="A")));
    end Actuators;
  end Buses;
  
  package Tests 
    
    model TestSteamPlant 
      "Test total plant with parameters initial resetting and without control" 
      replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
        Modelica.Media.Interfaces.PartialMedium;
      replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
        Modelica.Media.Interfaces.PartialPureSubstance;
      ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wa hRSG(
                                   drums(
          fluidHPNomPressure=1.22116e7,
          fluidIPNomPressure=2.63694e6,
          fluidLPNomPressure=6.047e5,
          HPd_hvstart=2.61182e6,
          HPd_hlstart=1.411212e6,
          IPd_hvstart=2.79542e6,
          IPd_hlstart=9.22034e5,
          LPd_hvstart=2.75273e6,
          LPd_hlstart=6.10909e5), HeatExchangersGroup(
          fluidHPNomPressure_Sh=1.22116e7,
          fluidHPNomPressure_Ev=1.22116e7,
          fluidHPNomPressure_Ec=1.22116e7,
          fluidIPNomPressure_Rh=2.63694e6,
          fluidIPNomPressure_Sh=2.63694e6,
          fluidIPNomPressure_Ev=2.63694e6,
          fluidIPNomPressure_Ec=2.63694e6,
          fluidLPNomPressure_Sh=6.0474e5,
          fluidLPNomPressure_Ev=6.0474e5,
          fluidLPNomPressure_Ec=6.0474e5,
          fluidHPNomFlowRate_Sh=62.8,
          fluidHPNomFlowRate_Ec=64.5,
          fluidIPNomFlowRate_Rh=77.36,
          fluidIPNomFlowRate_Sh=14.5,
          fluidIPNomFlowRate_Ec=13.5,
          fluidLPNomFlowRate_Sh=10.95,
          fluidLPNomFlowRate_Ec=89.8,
          Ec2_HP_Tstart_G_In=605.074,
          Ec2_HP_Tstart_G_Out=548.522,
          Ec2_HP_Tstart_M_In=488.443,
          Ec2_HP_Tstart_M_Out=588.719,
          Ec2_HP_Tstart_F_In=476.660,
          Ec2_HP_Tstart_F_Out=585.495,
          Ec1_HP_Tstart_M_In=426.384,
          Ec1_HP_Tstart_M_Out=479.885,
          Ec1_HP_Tstart_F_In=420.129,
          Ec1_HP_Tstart_F_Out=476.660,
          Ec_IP_Tstart_G_In=501.802,
          Ec_IP_Tstart_G_Out=468.900,
          Ec_IP_Tstart_M_In=427.707,
          Ec_IP_Tstart_M_Out=490.160,
          Ec_IP_Tstart_F_In=421.552,
          Ec_IP_Tstart_F_Out=488.422,
          Ec_LP_Tstart_G_In=427.671,
          Ec_LP_Tstart_M_In=336.404,
          Ec_LP_Tstart_M_Out=419.330,
          Ec_LP_Tstart_F_In=331.506,
          Ec_LP_Tstart_F_Out=418.193,
          Ev_HP_Tstart_G_In=732.000,
          Ev_HP_Tstart_G_Out=611.190,
          Ev_HP_Tstart_M_In=594.933,
          Ev_HP_Tstart_M_Out=603.160,
          Ev_HP_hstart_F_In=1.46797e6,
          Ev_HP_hstart_F_Out=1.90129e6,
          Ev_IP_Tstart_G_In=548.522,
          Ev_IP_Tstart_G_Out=503.810,
          Ev_IP_Tstart_M_In=497.865,
          Ev_IP_Tstart_M_Out=501.763,
          Ev_IP_hstart_F_In=9.64527e5,
          Ev_IP_hstart_F_Out=1.36736e6,
          Ev_LP_Tstart_G_In=468.900,
          Ev_LP_Tstart_G_Out=427.671,
          Ev_LP_Tstart_M_In=422.216,
          Ev_LP_Tstart_M_Out=434.622,
          Ev_LP_hstart_F_In=6.26623e5,
          Ev_LP_hstart_F_Out=1.22154e6,
          Sh2_HP_Tstart_G_In=884.650,
          Sh2_HP_Tstart_G_Out=849.290,
          Sh2_HP_Tstart_M_In=801.698,
          Sh2_HP_Tstart_M_Out=861.343,
          Sh2_HP_Tstart_F_In=792.680,
          Sh2_HP_Tstart_F_Out=857.106,
          Sh1_HP_Tstart_G_In=849.290,
          Sh1_HP_Tstart_G_Out=732.000,
          Sh1_HP_Tstart_M_In=624.205,
          Sh1_HP_Tstart_M_Out=803.585,
          Sh1_HP_Tstart_F_In=599.180,
          Sh1_HP_Tstart_F_Out=792.680,
          Rh2_IP_Tstart_M_In=793.962,
          Rh2_IP_Tstart_M_Out=863.890,
          Rh2_IP_Tstart_F_In=787.973,
          Rh2_IP_Tstart_F_Out=861.625,
          Rh1_IP_Tstart_M_In=641.307,
          Rh1_IP_Tstart_M_Out=793.753,
          Rh1_IP_Tstart_F_In=631.882,
          Rh1_IP_Tstart_F_Out=787.973,
          Sh_IP_Tstart_G_In=611.19,
          Sh_IP_Tstart_G_Out=605.074,
          Sh_IP_Tstart_M_In=504.237,
          Sh_IP_Tstart_M_Out=594.703,
          Sh_IP_Tstart_F_In=499.962,
          Sh_IP_Tstart_F_Out=594.001,
          Sh_LP(gamma_G=30, gamma_F=4000),
          Sh_LP_N_F=4,
          Ec_LP_Tstart_G_Out=372.309)) 
                              annotation (extent=[-100,20; 0,120]);
      SteamTurbineGroup.Examples.STG_3LRh sTG_3LRh(steamTurbines(
          steamHPNomPressure=1.2202e7,
          steamIPNomPressure=2.63681e6,
          steamLPNomPressure=6.047e5,
          HPT_hstart_in=3.56678e6,
          HPT_hstart_out=3.16451e6,
          IPT_hstart_in=3.65985e6,
          IPT_hstart_out=3.21285e6,
          LPT_hstart_in=3.16961e6,
          LPT_hstart_out=2.41849e6,
          mixLP_hstart=3.16953e6,
          mixIP_hstart=3.14446e6,
          steamHPNomFlowRate=62.8,
          steamIPNomFlowRate=14.5,
          steamLPNomFlowRate=10.9)) 
        annotation (extent=[-100,-140; 0,-40]);
      annotation (Diagram, Coordsys(extent=[-200,-200; 200,200], scale=0.1));
      Gas.SourceW sourceGas(
        redeclare package Medium = FlueGasMedium,
        w0=585.5,
        T=884.65)          annotation (extent=[-180,50; -160,70]);
      ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_in(
                                             redeclare package Medium = 
            FlueGasMedium) annotation (extent=[-150,50; -130,70], rotation=0);
      Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=362.309) 
                       annotation (extent=[60,50; 80,70]);
      Modelica.Blocks.Sources.Constant feedHP(k=62.5) 
        annotation (extent=[180,140; 160,160]);
      Modelica.Blocks.Sources.Constant feedIP(k=14.5) 
        annotation (extent=[180,100; 160,120]);
      ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_out(
                                              redeclare package Medium = 
            FlueGasMedium) annotation (extent=[30,50; 50,70],   rotation=0);
    protected 
      Buses.Actuators actuators annotation (extent=[120,-20; 100,0]);
    public 
      Modelica.Blocks.Sources.Constant n_pumpLP(k=1450) 
        annotation (extent=[180,60; 160,80]);
      ElectricGeneratorGroup.Examples.GeneratorGroup singleShaft(
        eta=0.9,
        J_shaft=15000,
        d_shaft=25,
        Pmax=150e6,
        delta_start=0.7) 
                    annotation (extent=[40,-140; 140,-40]);
    public 
      Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
        annotation (extent=[180,20; 160,40]);
    equation 
      connect(stateGas_in.inlet, sourceGas.flange) annotation (points=[-146,60;
            -160,60],style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(stateGas_in.outlet, hRSG.GasIn) annotation (points=[-134,60; -100,
            60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(sinkGas.flange, stateGas_out.outlet) annotation (points=[60,60;
            46,60],                 style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[34,60; 0,60],
                 style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(singleShaft.shaft, sTG_3LRh.Shaft_b) annotation (points=[40,-90;
            0,-90], style(
          color=0,
          rgbcolor={0,0,0},
          thickness=2,
          fillColor=30,
          rgbfillColor={230,230,230},
          fillPattern=1));
      connect(feedHP.y, actuators.flowRate_feedHP) annotation (points=[159,150;
            110,150; 110,-10],
                           style(color=74, rgbcolor={0,0,127}));
      connect(feedIP.y, actuators.flowRate_feedIP) annotation (points=[159,110;
            110,110; 110,-10],
                           style(color=74, rgbcolor={0,0,127}));
      connect(n_pumpLP.y, actuators.nPump_feedLP) annotation (points=[159,70;
            110,70; 110,-10], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(booleanConstant.y, actuators.ConnectedGenerator) annotation (
          points=[159,30; 110,30; 110,-10], style(
          color=5,
          rgbcolor={255,0,255},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.SensorsBus, hRSG.SensorsBus) annotation (points=[0,-110;
            20,-110; 20,110; 0,110], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.SensorsBus, singleShaft.SensorsBus) annotation (points=[
            0,-110; 20,-110; 20,-160; 160,-160; 160,-115; 140,-115], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.ActuatorsBus, sTG_3LRh.ActuatorsBus) annotation (points=[0,
            95; 14,95; 14,-125; 0,-125], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.ActuatorsBus, singleShaft.ActuatorsBus) annotation (
          points=[0,-125; 8,-125; 8,-106; 14,-106; 14,-132; 152,-132; 152,-130;
            140,-130], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(actuators, hRSG.ActuatorsBus) annotation (points=[110,-10; 14,-10;
            14,95; 0,95], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.WaterOut, hRSG.WaterIn) annotation (points=[-10,-40; -10,
            20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_LP, hRSG.Sh_LP_Out) annotation (points=[-30,-40;
            -30,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_IP, hRSG.Sh_IP_Out) annotation (points=[-45,-40;
            -45,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_RH_IP, hRSG.Rh_IP_Out) annotation (points=[-60,-40;
            -60,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.To_RH_IP, hRSG.Rh_IP_In) annotation (points=[-75,-40;
            -75,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_HP, hRSG.Sh_HP_Out) annotation (points=[-90,-40;
            -90,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
    end TestSteamPlant;
    
    model TestSteamPlant_valve 
      "Test total plant with parameters initial resetting, level control and inlet valve on the steam turbine group" 
      replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
        Modelica.Media.Interfaces.PartialMedium;
      replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
        Modelica.Media.Interfaces.PartialPureSubstance;
      ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wa hRSG(
                                   drums(
          fluidHPNomPressure=1.22116e7,
          fluidIPNomPressure=2.63694e6,
          fluidLPNomPressure=6.047e5,
          HPd_hvstart=2.61182e6,
          HPd_hlstart=1.411212e6,
          IPd_hvstart=2.79542e6,
          IPd_hlstart=9.22034e5,
          LPd_hvstart=2.75273e6,
          LPd_hlstart=6.10909e5), HeatExchangersGroup(
          fluidHPNomPressure_Sh=1.22116e7,
          fluidHPNomPressure_Ev=1.22116e7,
          fluidHPNomPressure_Ec=1.22116e7,
          fluidIPNomPressure_Rh=2.63694e6,
          fluidIPNomPressure_Sh=2.63694e6,
          fluidIPNomPressure_Ev=2.63694e6,
          fluidIPNomPressure_Ec=2.63694e6,
          fluidLPNomPressure_Sh=6.0474e5,
          fluidLPNomPressure_Ev=6.0474e5,
          fluidLPNomPressure_Ec=6.0474e5,
          fluidHPNomFlowRate_Sh=62.8,
          fluidHPNomFlowRate_Ec=64.5,
          fluidIPNomFlowRate_Rh=77.36,
          fluidIPNomFlowRate_Sh=14.5,
          fluidIPNomFlowRate_Ec=13.5,
          fluidLPNomFlowRate_Sh=10.95,
          fluidLPNomFlowRate_Ec=89.8,
          Ec2_HP_Tstart_G_In=605.074,
          Ec2_HP_Tstart_G_Out=548.522,
          Ec2_HP_Tstart_M_In=488.443,
          Ec2_HP_Tstart_M_Out=588.719,
          Ec2_HP_Tstart_F_In=476.660,
          Ec2_HP_Tstart_F_Out=585.495,
          Ec1_HP_Tstart_M_In=426.384,
          Ec1_HP_Tstart_M_Out=479.885,
          Ec1_HP_Tstart_F_In=420.129,
          Ec1_HP_Tstart_F_Out=476.660,
          Ec_IP_Tstart_G_In=501.802,
          Ec_IP_Tstart_G_Out=468.900,
          Ec_IP_Tstart_M_In=427.707,
          Ec_IP_Tstart_M_Out=490.160,
          Ec_IP_Tstart_F_In=421.552,
          Ec_IP_Tstart_F_Out=488.422,
          Ec_LP_Tstart_G_In=427.671,
          Ec_LP_Tstart_M_In=336.404,
          Ec_LP_Tstart_M_Out=419.330,
          Ec_LP_Tstart_F_In=331.506,
          Ec_LP_Tstart_F_Out=418.193,
          Ev_HP_Tstart_G_In=732.000,
          Ev_HP_Tstart_G_Out=611.190,
          Ev_HP_Tstart_M_In=594.933,
          Ev_HP_Tstart_M_Out=603.160,
          Ev_HP_hstart_F_In=1.46797e6,
          Ev_HP_hstart_F_Out=1.90129e6,
          Ev_IP_Tstart_G_In=548.522,
          Ev_IP_Tstart_G_Out=503.810,
          Ev_IP_Tstart_M_In=497.865,
          Ev_IP_Tstart_M_Out=501.763,
          Ev_IP_hstart_F_In=9.64527e5,
          Ev_IP_hstart_F_Out=1.36736e6,
          Ev_LP_Tstart_G_In=468.900,
          Ev_LP_Tstart_G_Out=427.671,
          Ev_LP_Tstart_M_In=422.216,
          Ev_LP_Tstart_M_Out=434.622,
          Ev_LP_hstart_F_In=6.26623e5,
          Ev_LP_hstart_F_Out=1.22154e6,
          Sh2_HP_Tstart_G_In=884.650,
          Sh2_HP_Tstart_G_Out=849.290,
          Sh2_HP_Tstart_M_In=801.698,
          Sh2_HP_Tstart_M_Out=861.343,
          Sh2_HP_Tstart_F_In=792.680,
          Sh2_HP_Tstart_F_Out=857.106,
          Sh1_HP_Tstart_G_In=849.290,
          Sh1_HP_Tstart_G_Out=732.000,
          Sh1_HP_Tstart_M_In=624.205,
          Sh1_HP_Tstart_M_Out=803.585,
          Sh1_HP_Tstart_F_In=599.180,
          Sh1_HP_Tstart_F_Out=792.680,
          Rh2_IP_Tstart_M_In=793.962,
          Rh2_IP_Tstart_M_Out=863.890,
          Rh2_IP_Tstart_F_In=787.973,
          Rh2_IP_Tstart_F_Out=861.625,
          Rh1_IP_Tstart_M_In=641.307,
          Rh1_IP_Tstart_M_Out=793.753,
          Rh1_IP_Tstart_F_In=631.882,
          Rh1_IP_Tstart_F_Out=787.973,
          Sh_IP_Tstart_G_In=611.19,
          Sh_IP_Tstart_G_Out=605.074,
          Sh_IP_Tstart_M_In=504.237,
          Sh_IP_Tstart_M_Out=594.703,
          Sh_IP_Tstart_F_In=499.962,
          Sh_IP_Tstart_F_Out=594.001,
          Sh_LP(gamma_G=30, gamma_F=4000),
          Sh_LP_N_F=4,
          Ec_LP_Tstart_G_Out=372.309,
          Ev_LP(gamma_G=80, gamma_F=20000),
          redeclare HRSG.Components.StateReader_water stateEcLP_out,
          redeclare HRSG.Components.StateReader_water stateEcIP_out,
          redeclare HRSG.Components.StateReader_water stateEc2HP_out)) 
                              annotation (extent=[-100,20; 0,120]);
      SteamTurbineGroup.Examples.STG_3LRh_valve steamTurbineGroup(steamTurbines(
          steamHPNomPressure=1.2202e7,
          steamIPNomPressure=2.63681e6,
          steamLPNomPressure=6.047e5,
          HPT_hstart_in=3.56678e6,
          HPT_hstart_out=3.16451e6,
          IPT_hstart_in=3.65985e6,
          IPT_hstart_out=3.21285e6,
          LPT_hstart_in=3.16961e6,
          LPT_hstart_out=2.41849e6,
          mixLP_hstart=3.16953e6,
          mixIP_hstart=3.14446e6,
          steamHPNomFlowRate=62.8,
          steamIPNomFlowRate=14.5,
          steamLPNomFlowRate=10.9)) 
        annotation (extent=[-100,-180; 0,-80]);
      annotation (Diagram, Coordsys(extent=[-200,-200; 200,200], scale=0.1));
      Gas.SourceW sourceGas(
        redeclare package Medium = FlueGasMedium,
        w0=585.5,
        T=884.65)          annotation (extent=[-180,50; -160,70]);
      ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_in(
                                             redeclare package Medium = 
            FlueGasMedium) annotation (extent=[-150,50; -130,70], rotation=0);
      Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=362.309) 
                       annotation (extent=[60,50; 80,70]);
      ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_out(
                                              redeclare package Medium = 
            FlueGasMedium) annotation (extent=[30,50; 50,70],   rotation=0);
      ElectricGeneratorGroup.Examples.GeneratorGroup singleShaft(
        eta=0.9,
        J_shaft=15000,
        d_shaft=25,
        Pmax=150e6,
        delta_start=0.8) 
                    annotation (extent=[40,-180; 140,-80]);
    public 
      Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
        annotation (extent=[180,-60; 160,-40]);
    public 
      ThermoPower.PowerPlants.HRSG.Control.levelsControl 
        levelsControlSimplified(
          CSmin_levelLP=500, CSmax_levelLP=2500) 
        annotation (extent=[60,120; 120,180]);
    public 
      Modelica.Blocks.Sources.Ramp valveHP_com(height=0, offset=1) 
        annotation (extent=[180,60; 160,80]);
      Modelica.Blocks.Sources.Ramp valveIP_com(height=0, offset=1) 
        annotation (extent=[180,20; 160,40]);
      Modelica.Blocks.Sources.Ramp valveLP_com(height=0, offset=1) 
        annotation (extent=[180,-20; 160,0]);
    protected 
      Buses.Actuators actuators annotation (extent=[120,-60; 100,-40]);
    equation 
      connect(singleShaft.shaft, steamTurbineGroup.Shaft_b) 
                                                   annotation (points=[40,-130;
            0,-130],style(
          color=0,
          rgbcolor={0,0,0},
          thickness=2,
          fillColor=30,
          rgbfillColor={230,230,230},
          fillPattern=1));
      connect(stateGas_in.inlet, sourceGas.flange) annotation (points=[-146,60;
            -160,60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sinkGas.flange, stateGas_out.outlet) annotation (points=[60,60;
            46,60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(stateGas_in.outlet, hRSG.GasIn) annotation (points=[-134,60; -100,
            60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[34,60; 0,60],
          style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.From_SH_HP, hRSG.Sh_HP_Out) annotation (points=
            [-90,-80; -88,-80; -88,20; -90,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.To_RH_IP, hRSG.Rh_IP_In) annotation (points=[
            -75,-80; -75,-80; -75,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.From_RH_IP, hRSG.Rh_IP_Out) annotation (points=
            [-60,-80; -60,20; -60,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.From_SH_IP, hRSG.Sh_IP_Out) annotation (points=
            [-45,-80; -45,-29; -45,-29; -45,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.From_SH_LP, hRSG.Sh_LP_Out) annotation (points=
            [-30,-80; -30,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.WaterOut, hRSG.WaterIn) annotation (points=[-10,
            -80; -10,20; -10,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.SensorsBus, hRSG.SensorsBus) annotation (points=
           [0,-150; 20,-150; 20,110; 0,110], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.SensorsBus, singleShaft.SensorsBus) annotation (
         points=[0,-150; 20,-150; 20,-190; 160,-190; 160,-155; 140,-155], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.ActuatorsBus, steamTurbineGroup.ActuatorsBus) annotation (
          points=[0,95; 14,95; 14,-165; 0,-165], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(steamTurbineGroup.ActuatorsBus, singleShaft.ActuatorsBus) 
        annotation (points=[0,-165; 14,-165; 14,-198; 168,-198; 168,-170; 140,
            -170], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(actuators, hRSG.ActuatorsBus) annotation (points=[110,-50; 14,-50;
            14,95; 0,95], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.ActuatorsBus, levelsControlSimplified.ActuatorsBus) 
        annotation (points=[0,95; 76,95; 76,96; 140,96; 140,150; 120,150],
          style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(levelsControlSimplified.SensorsBus, hRSG.SensorsBus) annotation (
          points=[60,150; 20,150; 20,110; 0,110], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveHP_com.y, actuators.Opening_valveHP) annotation (points=[159,
            70; 110,70; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveIP_com.y, actuators.Opening_valveIP) annotation (points=[159,
            30; 110,30; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveLP_com.y, actuators.Opening_valveLP) annotation (points=[159,
            -10; 110,-10; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(booleanConstant.y, actuators.ConnectedGenerator) annotation (
          points=[159,-50; 112,-50], style(
          color=5,
          rgbcolor={255,0,255},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
    end TestSteamPlant_valve;
    
    model TestSteamPlant_controls 
      "Test total plant with levels control and ratio control on the condenser " 
      replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
        Modelica.Media.Interfaces.PartialMedium;
      replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
        Modelica.Media.Interfaces.PartialPureSubstance;
      ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wa hRSG(
                                  HeatExchangersGroup(
          fluidHPNomPressure_Sh=1.22116e7,
          fluidHPNomPressure_Ev=1.22116e7,
          fluidHPNomPressure_Ec=1.22116e7,
          fluidIPNomPressure_Rh=2.63694e6,
          fluidIPNomPressure_Sh=2.63694e6,
          fluidIPNomPressure_Ev=2.63694e6,
          fluidIPNomPressure_Ec=2.63694e6,
          fluidLPNomPressure_Sh=6.0474e5,
          fluidLPNomPressure_Ev=6.0474e5,
          fluidLPNomPressure_Ec=6.0474e5,
          fluidHPNomFlowRate_Sh=62.8,
          fluidHPNomFlowRate_Ec=64.5,
          fluidIPNomFlowRate_Rh=77.36,
          fluidIPNomFlowRate_Sh=14.5,
          fluidIPNomFlowRate_Ec=13.5,
          fluidLPNomFlowRate_Sh=10.95,
          fluidLPNomFlowRate_Ec=89.8,
          Ec2_HP_Tstart_G_In=605.074,
          Ec2_HP_Tstart_G_Out=548.522,
          Ec2_HP_Tstart_M_In=488.443,
          Ec2_HP_Tstart_M_Out=588.719,
          Ec2_HP_Tstart_F_In=476.660,
          Ec2_HP_Tstart_F_Out=585.495,
          Ec1_HP_Tstart_M_In=426.384,
          Ec1_HP_Tstart_M_Out=479.885,
          Ec1_HP_Tstart_F_In=420.129,
          Ec1_HP_Tstart_F_Out=476.660,
          Ec_IP_Tstart_G_In=501.802,
          Ec_IP_Tstart_G_Out=468.900,
          Ec_IP_Tstart_M_In=427.707,
          Ec_IP_Tstart_M_Out=490.160,
          Ec_IP_Tstart_F_In=421.552,
          Ec_IP_Tstart_F_Out=488.422,
          Ec_LP_Tstart_G_In=427.671,
          Ec_LP_Tstart_M_In=336.404,
          Ec_LP_Tstart_M_Out=419.330,
          Ec_LP_Tstart_F_In=331.506,
          Ec_LP_Tstart_F_Out=418.193,
          Ev_HP_Tstart_G_In=732.000,
          Ev_HP_Tstart_G_Out=611.190,
          Ev_HP_Tstart_M_In=594.933,
          Ev_HP_Tstart_M_Out=603.160,
          Ev_HP_hstart_F_In=1.46797e6,
          Ev_HP_hstart_F_Out=1.90129e6,
          Ev_IP_Tstart_G_In=548.522,
          Ev_IP_Tstart_G_Out=503.810,
          Ev_IP_Tstart_M_In=497.865,
          Ev_IP_Tstart_M_Out=501.763,
          Ev_IP_hstart_F_In=9.64527e5,
          Ev_IP_hstart_F_Out=1.36736e6,
          Ev_LP_Tstart_G_In=468.900,
          Ev_LP_Tstart_G_Out=427.671,
          Ev_LP_Tstart_M_In=422.216,
          Ev_LP_Tstart_M_Out=434.622,
          Ev_LP_hstart_F_In=6.26623e5,
          Ev_LP_hstart_F_Out=1.22154e6,
          Sh2_HP_Tstart_G_In=884.650,
          Sh2_HP_Tstart_G_Out=849.290,
          Sh2_HP_Tstart_M_In=801.698,
          Sh2_HP_Tstart_M_Out=861.343,
          Sh2_HP_Tstart_F_In=792.680,
          Sh2_HP_Tstart_F_Out=857.106,
          Sh1_HP_Tstart_G_In=849.290,
          Sh1_HP_Tstart_G_Out=732.000,
          Sh1_HP_Tstart_M_In=624.205,
          Sh1_HP_Tstart_M_Out=803.585,
          Sh1_HP_Tstart_F_In=599.180,
          Sh1_HP_Tstart_F_Out=792.680,
          Rh2_IP_Tstart_M_In=793.962,
          Rh2_IP_Tstart_M_Out=863.890,
          Rh2_IP_Tstart_F_In=787.973,
          Rh2_IP_Tstart_F_Out=861.625,
          Rh1_IP_Tstart_M_In=641.307,
          Rh1_IP_Tstart_M_Out=793.753,
          Rh1_IP_Tstart_F_In=631.882,
          Rh1_IP_Tstart_F_Out=787.973,
          Sh_IP_Tstart_G_In=611.19,
          Sh_IP_Tstart_G_Out=605.074,
          Sh_IP_Tstart_M_In=504.237,
          Sh_IP_Tstart_M_Out=594.703,
          Sh_IP_Tstart_F_In=499.962,
          Sh_IP_Tstart_F_Out=594.001,
          Sh_LP(gamma_G=30, gamma_F=4000),
          Sh_LP_N_F=4,
          Ec_LP_Tstart_G_Out=372.309,
          Ec_LP(gamma_G=35, gamma_F=3000),
          Ev_LP(gamma_G=60, gamma_F=20000),
          Sh1HP_Rh1IP(
            gamma_G_A=70,
            gamma_G_B=70,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh2HP_Rh2IP(
            gamma_F_A=4000,
            gamma_F_B=4000,
            gamma_G_A=70,
            gamma_G_B=70),
          redeclare HRSG.Components.StateReader_water stateEcLP_out,
          redeclare HRSG.Components.StateReader_water stateEcIP_out,
          redeclare HRSG.Components.StateReader_water stateEc2HP_out),
                                       drums(
          fluidHPNomPressure=1.22116e7,
          fluidIPNomPressure=2.63694e6,
          fluidLPNomPressure=6.047e5,
          HPd_hvstart=2.61182e6,
          HPd_hlstart=1.411212e6,
          IPd_hvstart=2.79542e6,
          IPd_hlstart=9.22034e5,
          LPd_hvstart=2.75273e6,
          LPd_hlstart=6.10909e5)) 
                              annotation (extent=[-100,20; 0,120]);
      SteamTurbineGroup.Examples.STG_3LRh_cc sTG_3LRh(steamTurbines(
          steamHPNomPressure=1.2202e7,
          steamIPNomPressure=2.63681e6,
          steamLPNomPressure=6.047e5,
          HPT_hstart_in=3.56678e6,
          HPT_hstart_out=3.16451e6,
          IPT_hstart_in=3.65985e6,
          IPT_hstart_out=3.21285e6,
          LPT_hstart_in=3.16961e6,
          LPT_hstart_out=2.41849e6,
          mixLP_hstart=3.16953e6,
          mixIP_hstart=3.14446e6,
          steamHPNomFlowRate=62.8,
          steamIPNomFlowRate=14.5,
          steamLPNomFlowRate=10.9), controlledCondeser(Vlstart=5)) 
        annotation (extent=[-100,-180; 0,-80]);
      annotation (Diagram, experiment(
          StopTime=20000,
          NumberOfIntervals=10000,
          Tolerance=1e-006),
        Coordsys(extent=[-200,-200; 200,200], scale=0.1));
      Gas.SourceW sourceGas(
        redeclare package Medium = FlueGasMedium,
        w0=585.5,
        T=884.65)          annotation (extent=[-160,50; -140,70]);
      ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_in(
                                             redeclare package Medium = 
            FlueGasMedium) annotation (extent=[-130,50; -110,70], rotation=0);
      Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=362.309) 
                       annotation (extent=[60,50; 80,70]);
      ThermoPower.PowerPlants.HRSG.Components.StateReader_gas stateGas_out(
                                              redeclare package Medium = 
            FlueGasMedium) annotation (extent=[30,50; 50,70],   rotation=0);
      ElectricGeneratorGroup.Examples.GeneratorGroup singleShaft(
        eta=0.9,
        J_shaft=15000,
        d_shaft=25,
        Pmax=150e6,
        delta_start=0.7) 
                    annotation (extent=[60,-180; 160,-80]);
    public 
      Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
        annotation (extent=[180,-20; 160,0]);
    protected 
      Buses.Actuators actuators 
        annotation (extent=[120,-60; 140,-40],rotation=0);
    public 
      HRSG.Control.levelsControl levelsControl(
        CSmin_levelHP=30,
        CSmax_levelHP=96,
        CSmin_levelIP=5,
        CSmax_levelIP=25,
        CSmax_levelLP=2400) 
        annotation (extent=[60,120; 120,180]);
      Modelica.Blocks.Sources.Ramp ramp(
        height=-50,
        duration=500,
        offset=585.5,
        startTime=5000) annotation (extent=[-190,100; -170,120]);
    equation 
      connect(actuators, singleShaft.ActuatorsBus)  annotation (points=[130,-50;
            180,-50; 180,-170; 160,-170],  style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=30,
          rgbfillColor={230,230,230},
          fillPattern=1));
      connect(singleShaft.shaft, sTG_3LRh.Shaft_b) annotation (points=[60,-130;
            0,-130],style(
          color=0,
          rgbcolor={0,0,0},
          thickness=2,
          fillColor=30,
          rgbfillColor={230,230,230},
          fillPattern=1));
      connect(sinkGas.flange, stateGas_out.outlet) annotation (points=[60,60;
            46,60],   style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[34,60; 0,60],
                 style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(hRSG.GasIn, stateGas_in.outlet) annotation (points=[-100,60; -114,
            60],                   style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(levelsControl.SensorsBus, hRSG.SensorsBus) annotation (points=[60,150;
            40,150; 40,110; 0,110],    style(color=84, rgbcolor={255,170,213}));
      connect(levelsControl.ActuatorsBus, hRSG.ActuatorsBus) annotation (points=[120,150;
            160,150; 160,95; 0,95],           style(color=52, rgbcolor={213,255,
              170}));
      connect(ramp.y, sourceGas.in_w0) annotation (points=[-169,110; -156,110;
            -156,65],                  style(color=74, rgbcolor={0,0,127}));
      connect(stateGas_in.inlet, sourceGas.flange) annotation (points=[-126,60;
            -140,60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.WaterOut, hRSG.WaterIn) annotation (points=[-10,-80; -10,
            20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_LP, hRSG.Sh_LP_Out) annotation (points=[-30,-80;
            -30,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_RH_IP, hRSG.Rh_IP_Out) annotation (points=[-60,-80;
            -60,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_HP, hRSG.Sh_HP_Out) annotation (points=[-90,-80;
            -90,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(booleanConstant.y, actuators.ConnectedGenerator) annotation (
          points=[159,-10; 130,-10; 130,-50], style(
          color=5,
          rgbcolor={255,0,255},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.ActuatorsBus, sTG_3LRh.ActuatorsBus) annotation (points=[0,
            95; 14,95; 14,-165; 0,-165], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.ActuatorsBus, singleShaft.ActuatorsBus) annotation (
          points=[0,-165; 8,-165; 8,-164; 14,-164; 14,-192; 180,-192; 180,-170;
            160,-170], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(singleShaft.SensorsBus, sTG_3LRh.SensorsBus) annotation (points=[
            160,-155; 172,-155; 172,-186; 20,-186; 20,-150; 0,-150], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.SensorsBus, hRSG.SensorsBus) annotation (points=[0,-150;
            20,-150; 20,110; 0,110], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.To_RH_IP, hRSG.Rh_IP_In) annotation (points=[-75,-80;
            -75,-31; -75,-31; -75,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_IP, hRSG.Sh_IP_Out) annotation (points=[-45,-80;
            -45,-31; -45,-31; -45,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
    end TestSteamPlant_controls;
    
  end Tests;
  
  package Simulators 
    model SteamPlant_Sim1 
      "Test total plant with levels control and ratio control on the condenser, inlet valves" 
      replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
        Modelica.Media.Interfaces.PartialMedium;
      replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
        Modelica.Media.Interfaces.PartialPureSubstance;
      ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wa hRSG(
                                  HeatExchangersGroup(
          fluidHPNomPressure_Sh=1.22116e7,
          fluidHPNomPressure_Ev=1.22116e7,
          fluidHPNomPressure_Ec=1.22116e7,
          fluidIPNomPressure_Rh=2.63694e6,
          fluidIPNomPressure_Sh=2.63694e6,
          fluidIPNomPressure_Ev=2.63694e6,
          fluidIPNomPressure_Ec=2.63694e6,
          fluidLPNomPressure_Sh=6.0474e5,
          fluidLPNomPressure_Ev=6.0474e5,
          fluidLPNomPressure_Ec=6.0474e5,
          fluidHPNomFlowRate_Sh=62.8,
          fluidHPNomFlowRate_Ec=64.5,
          fluidIPNomFlowRate_Rh=77.36,
          fluidIPNomFlowRate_Sh=14.5,
          fluidIPNomFlowRate_Ec=13.5,
          fluidLPNomFlowRate_Sh=10.95,
          fluidLPNomFlowRate_Ec=89.8,
          Ec2_HP_Tstart_G_In=605.074,
          Ec2_HP_Tstart_G_Out=548.522,
          Ec2_HP_Tstart_M_In=488.443,
          Ec2_HP_Tstart_M_Out=588.719,
          Ec2_HP_Tstart_F_In=476.660,
          Ec2_HP_Tstart_F_Out=585.495,
          Ec1_HP_Tstart_M_In=426.384,
          Ec1_HP_Tstart_M_Out=479.885,
          Ec1_HP_Tstart_F_In=420.129,
          Ec1_HP_Tstart_F_Out=476.660,
          Ec_IP_Tstart_G_In=501.802,
          Ec_IP_Tstart_G_Out=468.900,
          Ec_IP_Tstart_M_In=427.707,
          Ec_IP_Tstart_M_Out=490.160,
          Ec_IP_Tstart_F_In=421.552,
          Ec_IP_Tstart_F_Out=488.422,
          Ec_LP_Tstart_G_In=427.671,
          Ec_LP_Tstart_M_In=336.404,
          Ec_LP_Tstart_M_Out=419.330,
          Ec_LP_Tstart_F_In=331.506,
          Ec_LP_Tstart_F_Out=418.193,
          Ev_HP_Tstart_G_In=732.000,
          Ev_HP_Tstart_G_Out=611.190,
          Ev_HP_Tstart_M_In=594.933,
          Ev_HP_Tstart_M_Out=603.160,
          Ev_HP_hstart_F_In=1.46797e6,
          Ev_HP_hstart_F_Out=1.90129e6,
          Ev_IP_Tstart_G_In=548.522,
          Ev_IP_Tstart_G_Out=503.810,
          Ev_IP_Tstart_M_In=497.865,
          Ev_IP_Tstart_M_Out=501.763,
          Ev_IP_hstart_F_In=9.64527e5,
          Ev_IP_hstart_F_Out=1.36736e6,
          Ev_LP_Tstart_G_In=468.900,
          Ev_LP_Tstart_G_Out=427.671,
          Ev_LP_Tstart_M_In=422.216,
          Ev_LP_Tstart_M_Out=434.622,
          Ev_LP_hstart_F_In=6.26623e5,
          Ev_LP_hstart_F_Out=1.22154e6,
          Sh2_HP_Tstart_G_In=884.650,
          Sh2_HP_Tstart_G_Out=849.290,
          Sh2_HP_Tstart_M_In=801.698,
          Sh2_HP_Tstart_M_Out=861.343,
          Sh2_HP_Tstart_F_In=792.680,
          Sh2_HP_Tstart_F_Out=857.106,
          Sh1_HP_Tstart_G_In=849.290,
          Sh1_HP_Tstart_G_Out=732.000,
          Sh1_HP_Tstart_M_In=624.205,
          Sh1_HP_Tstart_M_Out=803.585,
          Sh1_HP_Tstart_F_In=599.180,
          Sh1_HP_Tstart_F_Out=792.680,
          Rh2_IP_Tstart_M_In=793.962,
          Rh2_IP_Tstart_M_Out=863.890,
          Rh2_IP_Tstart_F_In=787.973,
          Rh2_IP_Tstart_F_Out=861.625,
          Rh1_IP_Tstart_M_In=641.307,
          Rh1_IP_Tstart_M_Out=793.753,
          Rh1_IP_Tstart_F_In=631.882,
          Rh1_IP_Tstart_F_Out=787.973,
          Sh_IP_Tstart_G_In=611.19,
          Sh_IP_Tstart_G_Out=605.074,
          Sh_IP_Tstart_M_In=504.237,
          Sh_IP_Tstart_M_Out=594.703,
          Sh_IP_Tstart_F_Out=594.001,
          Sh_LP(gamma_G=30, gamma_F=4000),
          Sh_LP_N_F=4,
          Ec_LP_Tstart_G_Out=372.309,
          Ec_LP(gamma_G=35, gamma_F=3000),
          Ev_LP(gamma_G=60, gamma_F=20000),
          Sh1HP_Rh1IP(
            gamma_G_A=70,
            gamma_G_B=70,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh2HP_Rh2IP(
            gamma_F_A=4000,
            gamma_F_B=4000,
            gamma_G_A=70,
            gamma_G_B=70),
          Sh_IP_Tstart_F_In=499.962),  drums(
          fluidHPNomPressure=1.22116e7,
          fluidIPNomPressure=2.63694e6,
          fluidLPNomPressure=6.047e5,
          HPd_hvstart=2.61182e6,
          HPd_hlstart=1.411212e6,
          IPd_hvstart=2.79542e6,
          IPd_hlstart=9.22034e5,
          LPd_hvstart=2.75273e6,
          LPd_hlstart=6.10909e5)) 
                              annotation (extent=[-100,20; 0,120]);
      SteamTurbineGroup.Examples.STG_3LRh_valve_cc sTG_3LRh(
                                                      steamTurbines(
          steamHPNomPressure=1.2202e7,
          steamIPNomPressure=2.63681e6,
          steamLPNomPressure=6.047e5,
          HPT_hstart_in=3.56678e6,
          HPT_hstart_out=3.16451e6,
          IPT_hstart_in=3.65985e6,
          IPT_hstart_out=3.21285e6,
          LPT_hstart_in=3.16961e6,
          LPT_hstart_out=2.41849e6,
          mixLP_hstart=3.16953e6,
          mixIP_hstart=3.14446e6,
          steamHPNomFlowRate=62.8,
          steamIPNomFlowRate=14.5,
          steamLPNomFlowRate=10.9), controlledCondeser(Vlstart=5,
            setPoint_ratio=0.5)) 
        annotation (extent=[-100,-180; 0,-80]);
      annotation (Diagram, experiment(
          StopTime=15000,
          NumberOfIntervals=10000,
          Tolerance=1e-006),
        Coordsys(extent=[-200,-200; 200,200], scale=0.1));
    public 
      HRSG.Control.levelsControl levelsControl(
        CSmin_levelHP=30,
        CSmax_levelHP=96,
        CSmin_levelIP=5,
        CSmax_levelIP=25,
        CSmax_levelLP=2400) 
        annotation (extent=[60,100; 120,160]);
      ElectricGeneratorGroup.Examples.GeneratorGroup singleShaft(
        eta=0.9,
        J_shaft=15000,
        d_shaft=25,
        Pmax=150e6,
        delta_start=0.7) 
                    annotation (extent=[40,-180; 140,-80]);
      Gas.SourceW sourceGas(
        redeclare package Medium = FlueGasMedium,
        w0=585.5,
        T=884.65)          annotation (extent=[-160,50; -140,70]);
      HRSG.Components.StateReader_gas stateGas_in(
                                             redeclare package Medium = 
            FlueGasMedium) annotation (extent=[-130,50; -110,70], rotation=0);
      Modelica.Blocks.Sources.Ramp ramp(
        height=-50,
        duration=500,
        offset=585.5,
        startTime=5000) annotation (extent=[-190,100; -170,120]);
      Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=362.309) 
                       annotation (extent=[60,50; 80,70]);
      HRSG.Components.StateReader_gas stateGas_out(
                                              redeclare package Medium = 
            FlueGasMedium) annotation (extent=[30,50; 50,70],   rotation=0);
    public 
      Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
        annotation (extent=[180,-60; 160,-40]);
    public 
      Modelica.Blocks.Sources.Ramp valveHP_com(height=0, offset=1) 
        annotation (extent=[180,60; 160,80]);
      Modelica.Blocks.Sources.Ramp valveIP_com(height=0, offset=1) 
        annotation (extent=[180,20; 160,40]);
      Modelica.Blocks.Sources.Ramp valveLP_com(height=0, offset=1) 
        annotation (extent=[180,-20; 160,0]);
    protected 
      Buses.Actuators actuators annotation (extent=[120,-60; 100,-40]);
    equation 
      connect(singleShaft.shaft, sTG_3LRh.Shaft_b) annotation (points=[40,-130;
            0,-130],style(
          color=0,
          rgbcolor={0,0,0},
          thickness=2));
      connect(sTG_3LRh.WaterOut, hRSG.WaterIn) annotation (points=[-10,-80; -10,
            20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_LP, hRSG.Sh_LP_Out) annotation (points=[-30,-80;
            -30,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_RH_IP, hRSG.Rh_IP_Out) annotation (points=[-60,-80;
            -60,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_HP, hRSG.Sh_HP_Out) annotation (points=[-90,-80;
            -90,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(ramp.y,sourceGas. in_w0) annotation (points=[-169,110; -156,110;
            -156,65],                  style(color=74, rgbcolor={0,0,127}));
      connect(stateGas_in.inlet,sourceGas. flange) annotation (points=[-126,60;
            -140,60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sinkGas.flange,stateGas_out. outlet) annotation (points=[60,60;
            46,60],   style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(valveHP_com.y, actuators.Opening_valveHP) annotation (points=[159,
            70; 110,70; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveIP_com.y, actuators.Opening_valveIP) annotation (points=[159,
            30; 110,30; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveLP_com.y, actuators.Opening_valveLP) annotation (points=[159,
            -10; 110,-10; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(booleanConstant.y, actuators.ConnectedGenerator) annotation (
          points=[159,-50; 110,-50], style(
          color=5,
          rgbcolor={255,0,255},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_IP, hRSG.Sh_IP_Out) annotation (points=[-45,-80;
            -45,20],                   style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.To_RH_IP, hRSG.Rh_IP_In) annotation (points=[-75,-80;
            -75,20],                   style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[34,60; 0,60],
          style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.GasIn, stateGas_in.outlet) annotation (points=[-100,60; -114,
            60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(levelsControl.SensorsBus, hRSG.SensorsBus) annotation (points=[60,
            130; 20,130; 20,110; 0,110], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.SensorsBus, sTG_3LRh.SensorsBus) annotation (points=[0,110;
            20,110; 20,-150; 0,-150], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.SensorsBus, singleShaft.SensorsBus) annotation (points=[
            0,-150; 20,-150; 20,-190; 160,-190; 160,-155; 140,-155], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(singleShaft.ActuatorsBus, sTG_3LRh.ActuatorsBus) annotation (
          points=[140,-170; 152,-170; 152,-184; 14,-184; 14,-165; 0,-165],
          style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.ActuatorsBus, hRSG.ActuatorsBus) annotation (points=[0,
            -165; 14,-165; 14,95; 0,95], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(actuators, hRSG.ActuatorsBus) annotation (points=[110,-50; 14,-50;
            14,95; 0,95], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(levelsControl.ActuatorsBus, hRSG.ActuatorsBus) annotation (points=
           [120,130; 140,130; 140,95; 0,95], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
    end SteamPlant_Sim1;
    
    model SteamPlant_Sim2 
      "Test total plant with levels control and ratio control on the condenser, inlet valves" 
      replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
        Modelica.Media.Interfaces.PartialMedium;
      replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
        Modelica.Media.Interfaces.PartialPureSubstance;
      ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wa hRSG(
                                  HeatExchangersGroup(
          fluidHPNomPressure_Sh=1.22116e7,
          fluidHPNomPressure_Ev=1.22116e7,
          fluidHPNomPressure_Ec=1.22116e7,
          fluidIPNomPressure_Rh=2.63694e6,
          fluidIPNomPressure_Sh=2.63694e6,
          fluidIPNomPressure_Ev=2.63694e6,
          fluidIPNomPressure_Ec=2.63694e6,
          fluidLPNomPressure_Sh=6.0474e5,
          fluidLPNomPressure_Ev=6.0474e5,
          fluidLPNomPressure_Ec=6.0474e5,
          fluidHPNomFlowRate_Sh=62.8,
          fluidHPNomFlowRate_Ec=64.5,
          fluidIPNomFlowRate_Rh=77.36,
          fluidIPNomFlowRate_Sh=14.5,
          fluidIPNomFlowRate_Ec=13.5,
          fluidLPNomFlowRate_Sh=10.95,
          fluidLPNomFlowRate_Ec=89.8,
          Ec2_HP_Tstart_G_In=605.074,
          Ec2_HP_Tstart_G_Out=548.522,
          Ec2_HP_Tstart_M_In=488.443,
          Ec2_HP_Tstart_M_Out=588.719,
          Ec2_HP_Tstart_F_In=476.660,
          Ec2_HP_Tstart_F_Out=585.495,
          Ec1_HP_Tstart_M_In=426.384,
          Ec1_HP_Tstart_M_Out=479.885,
          Ec1_HP_Tstart_F_In=420.129,
          Ec1_HP_Tstart_F_Out=476.660,
          Ec_IP_Tstart_G_In=501.802,
          Ec_IP_Tstart_G_Out=468.900,
          Ec_IP_Tstart_M_In=427.707,
          Ec_IP_Tstart_M_Out=490.160,
          Ec_IP_Tstart_F_In=421.552,
          Ec_IP_Tstart_F_Out=488.422,
          Ec_LP_Tstart_G_In=427.671,
          Ec_LP_Tstart_M_In=336.404,
          Ec_LP_Tstart_M_Out=419.330,
          Ec_LP_Tstart_F_In=331.506,
          Ec_LP_Tstart_F_Out=418.193,
          Ev_HP_Tstart_G_In=732.000,
          Ev_HP_Tstart_G_Out=611.190,
          Ev_HP_Tstart_M_In=594.933,
          Ev_HP_Tstart_M_Out=603.160,
          Ev_HP_hstart_F_In=1.46797e6,
          Ev_HP_hstart_F_Out=1.90129e6,
          Ev_IP_Tstart_G_In=548.522,
          Ev_IP_Tstart_G_Out=503.810,
          Ev_IP_Tstart_M_In=497.865,
          Ev_IP_Tstart_M_Out=501.763,
          Ev_IP_hstart_F_In=9.64527e5,
          Ev_IP_hstart_F_Out=1.36736e6,
          Ev_LP_Tstart_G_In=468.900,
          Ev_LP_Tstart_G_Out=427.671,
          Ev_LP_Tstart_M_In=422.216,
          Ev_LP_Tstart_M_Out=434.622,
          Ev_LP_hstart_F_In=6.26623e5,
          Ev_LP_hstart_F_Out=1.22154e6,
          Sh2_HP_Tstart_G_In=884.650,
          Sh2_HP_Tstart_G_Out=849.290,
          Sh2_HP_Tstart_M_In=801.698,
          Sh2_HP_Tstart_M_Out=861.343,
          Sh2_HP_Tstart_F_In=792.680,
          Sh2_HP_Tstart_F_Out=857.106,
          Sh1_HP_Tstart_G_In=849.290,
          Sh1_HP_Tstart_G_Out=732.000,
          Sh1_HP_Tstart_M_In=624.205,
          Sh1_HP_Tstart_M_Out=803.585,
          Sh1_HP_Tstart_F_In=599.180,
          Sh1_HP_Tstart_F_Out=792.680,
          Rh2_IP_Tstart_M_In=793.962,
          Rh2_IP_Tstart_M_Out=863.890,
          Rh2_IP_Tstart_F_In=787.973,
          Rh2_IP_Tstart_F_Out=861.625,
          Rh1_IP_Tstart_M_In=641.307,
          Rh1_IP_Tstart_M_Out=793.753,
          Rh1_IP_Tstart_F_In=631.882,
          Rh1_IP_Tstart_F_Out=787.973,
          Sh_IP_Tstart_G_In=611.19,
          Sh_IP_Tstart_G_Out=605.074,
          Sh_IP_Tstart_M_In=504.237,
          Sh_IP_Tstart_M_Out=594.703,
          Sh_IP_Tstart_F_Out=594.001,
          Sh_LP(gamma_G=30, gamma_F=4000),
          Sh_LP_N_F=4,
          Ec_LP_Tstart_G_Out=372.309,
          Ec_LP(gamma_G=35, gamma_F=3000),
          Ev_LP(gamma_G=60, gamma_F=20000),
          Sh1HP_Rh1IP(
            gamma_G_A=70,
            gamma_G_B=70,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh2HP_Rh2IP(
            gamma_F_A=4000,
            gamma_F_B=4000,
            gamma_G_A=70,
            gamma_G_B=70),
          Sh_IP_Tstart_F_In=499.962),  drums(
          fluidHPNomPressure=1.22116e7,
          fluidIPNomPressure=2.63694e6,
          fluidLPNomPressure=6.047e5,
          HPd_hvstart=2.61182e6,
          HPd_hlstart=1.411212e6,
          IPd_hvstart=2.79542e6,
          IPd_hlstart=9.22034e5,
          LPd_hvstart=2.75273e6,
          LPd_hlstart=6.10909e5)) 
                              annotation (extent=[-100,20; 0,120]);
      SteamTurbineGroup.Examples.STG_3LRh_valve_cc sTG_3LRh(
                                                      steamTurbines(
          steamHPNomPressure=1.2202e7,
          steamIPNomPressure=2.63681e6,
          steamLPNomPressure=6.047e5,
          HPT_hstart_in=3.56678e6,
          HPT_hstart_out=3.16451e6,
          IPT_hstart_in=3.65985e6,
          IPT_hstart_out=3.21285e6,
          LPT_hstart_in=3.16961e6,
          LPT_hstart_out=2.41849e6,
          mixLP_hstart=3.16953e6,
          mixIP_hstart=3.14446e6,
          steamHPNomFlowRate=62.8,
          steamIPNomFlowRate=14.5,
          steamLPNomFlowRate=10.9), controlledCondeser(Vlstart=5,
            setPoint_ratio=0.5)) 
        annotation (extent=[-100,-180; 0,-80]);
      annotation (Diagram, experiment(
          StopTime=15000,
          NumberOfIntervals=10000,
          Tolerance=1e-006),
        Coordsys(extent=[-200,-200; 200,200], scale=0.1));
    public 
      HRSG.Control.levelsControl levelsControl(
        CSmin_levelHP=30,
        CSmax_levelHP=96,
        CSmin_levelIP=5,
        CSmax_levelIP=25,
        CSmax_levelLP=2400) 
        annotation (extent=[60,100; 120,160]);
      ElectricGeneratorGroup.Examples.GeneratorGroup singleShaft(
        eta=0.9,
        J_shaft=15000,
        d_shaft=25,
        Pmax=150e6,
        delta_start=0.7) 
                    annotation (extent=[40,-180; 140,-80]);
      Gas.SourceW sourceGas(
        redeclare package Medium = FlueGasMedium,
        w0=585.5,
        T=884.65)          annotation (extent=[-160,50; -140,70]);
      HRSG.Components.StateReader_gas stateGas_in(
                                             redeclare package Medium = 
            FlueGasMedium) annotation (extent=[-130,50; -110,70], rotation=0);
      Modelica.Blocks.Sources.Ramp ramp(
        duration=500,
        offset=585.5,
        height=0,
        startTime=0)    annotation (extent=[-190,100; -170,120]);
      Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=362.309) 
                       annotation (extent=[60,50; 80,70]);
      HRSG.Components.StateReader_gas stateGas_out(
                                              redeclare package Medium = 
            FlueGasMedium) annotation (extent=[30,50; 50,70],   rotation=0);
    public 
      Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
        annotation (extent=[180,-60; 160,-40]);
    public 
      Modelica.Blocks.Sources.Ramp valveHP_com(          offset=1,
        height=-0.5,
        duration=100,
        startTime=500) 
        annotation (extent=[180,60; 160,80]);
      Modelica.Blocks.Sources.Ramp valveIP_com(height=0, offset=1) 
        annotation (extent=[180,20; 160,40]);
      Modelica.Blocks.Sources.Ramp valveLP_com(height=0, offset=1) 
        annotation (extent=[180,-20; 160,0]);
    protected 
      Buses.Actuators actuators annotation (extent=[120,-60; 100,-40]);
    equation 
      connect(singleShaft.shaft, sTG_3LRh.Shaft_b) annotation (points=[40,-130;
            0,-130],style(
          color=0,
          rgbcolor={0,0,0},
          thickness=2));
      connect(sTG_3LRh.WaterOut, hRSG.WaterIn) annotation (points=[-10,-80; -10,
            20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_LP, hRSG.Sh_LP_Out) annotation (points=[-30,-80;
            -30,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_RH_IP, hRSG.Rh_IP_Out) annotation (points=[-60,-80;
            -60,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_HP, hRSG.Sh_HP_Out) annotation (points=[-90,-80;
            -90,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(ramp.y,sourceGas. in_w0) annotation (points=[-169,110; -156,110;
            -156,65],                  style(color=74, rgbcolor={0,0,127}));
      connect(stateGas_in.inlet,sourceGas. flange) annotation (points=[-126,60;
            -140,60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sinkGas.flange,stateGas_out. outlet) annotation (points=[60,60;
            46,60],   style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(valveHP_com.y, actuators.Opening_valveHP) annotation (points=[159,
            70; 110,70; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveIP_com.y, actuators.Opening_valveIP) annotation (points=[159,
            30; 110,30; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveLP_com.y, actuators.Opening_valveLP) annotation (points=[159,
            -10; 110,-10; 110,-50], style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(booleanConstant.y, actuators.ConnectedGenerator) annotation (
          points=[159,-50; 110,-50], style(
          color=5,
          rgbcolor={255,0,255},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_IP, hRSG.Sh_IP_Out) annotation (points=[-45,-80;
            -45,-31; -45,-31; -45,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.To_RH_IP, hRSG.Rh_IP_In) annotation (points=[-75,-80;
            -75,-32; -75,-32; -75,20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[34,60; 0,60],
          style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.GasIn, stateGas_in.outlet) annotation (points=[-100,60; -114,
            60], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(levelsControl.SensorsBus, hRSG.SensorsBus) annotation (points=[60,
            130; 20,130; 20,110; 0,110], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.SensorsBus, sTG_3LRh.SensorsBus) annotation (points=[0,110;
            20,110; 20,-150; 0,-150], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.SensorsBus, singleShaft.SensorsBus) annotation (points=[
            0,-150; 20,-150; 20,-190; 160,-190; 160,-155; 140,-155], style(
          color=84,
          rgbcolor={255,170,213},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(singleShaft.ActuatorsBus, sTG_3LRh.ActuatorsBus) annotation (
          points=[140,-170; 152,-170; 152,-184; 14,-184; 14,-165; 0,-165],
          style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.ActuatorsBus, hRSG.ActuatorsBus) annotation (points=[0,
            -165; 14,-165; 14,95; 0,95], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(actuators, hRSG.ActuatorsBus) annotation (points=[110,-50; 14,-50;
            14,95; 0,95], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(levelsControl.ActuatorsBus, hRSG.ActuatorsBus) annotation (points=
           [120,130; 140,130; 140,95; 0,95], style(
          color=52,
          rgbcolor={213,255,170},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
    end SteamPlant_Sim2;
    
    model CCPP_Sim3 
      "Test total plant with levels control and ratio control on the condenser, inlet valves" 
      replaceable package FlueGasMedium = ThermoPower.Media.FlueGas extends 
        Modelica.Media.Interfaces.PartialMedium;
      replaceable package FluidMedium = ThermoPower.Water.StandardWater extends 
        Modelica.Media.Interfaces.PartialPureSubstance;
      ThermoPower.PowerPlants.HRSG.Examples.HRSG_3LRh_wa hRSG(
                                  HeatExchangersGroup(
          fluidHPNomPressure_Sh=1.22116e7,
          fluidHPNomPressure_Ev=1.22116e7,
          fluidHPNomPressure_Ec=1.22116e7,
          fluidIPNomPressure_Rh=2.63694e6,
          fluidIPNomPressure_Sh=2.63694e6,
          fluidIPNomPressure_Ev=2.63694e6,
          fluidIPNomPressure_Ec=2.63694e6,
          fluidLPNomPressure_Sh=6.0474e5,
          fluidLPNomPressure_Ev=6.0474e5,
          fluidLPNomPressure_Ec=6.0474e5,
          fluidHPNomFlowRate_Sh=62.8,
          fluidHPNomFlowRate_Ec=64.5,
          fluidIPNomFlowRate_Rh=77.36,
          fluidIPNomFlowRate_Sh=14.5,
          fluidIPNomFlowRate_Ec=13.5,
          fluidLPNomFlowRate_Sh=10.95,
          fluidLPNomFlowRate_Ec=89.8,
          Ec2_HP_Tstart_G_In=605.074,
          Ec2_HP_Tstart_G_Out=548.522,
          Ec2_HP_Tstart_M_In=488.443,
          Ec2_HP_Tstart_M_Out=588.719,
          Ec2_HP_Tstart_F_In=476.660,
          Ec2_HP_Tstart_F_Out=585.495,
          Ec1_HP_Tstart_M_In=426.384,
          Ec1_HP_Tstart_M_Out=479.885,
          Ec1_HP_Tstart_F_In=420.129,
          Ec1_HP_Tstart_F_Out=476.660,
          Ec_IP_Tstart_G_In=501.802,
          Ec_IP_Tstart_G_Out=468.900,
          Ec_IP_Tstart_M_In=427.707,
          Ec_IP_Tstart_M_Out=490.160,
          Ec_IP_Tstart_F_In=421.552,
          Ec_IP_Tstart_F_Out=488.422,
          Ec_LP_Tstart_G_In=427.671,
          Ec_LP_Tstart_M_In=336.404,
          Ec_LP_Tstart_M_Out=419.330,
          Ec_LP_Tstart_F_In=331.506,
          Ec_LP_Tstart_F_Out=418.193,
          Ev_HP_Tstart_G_In=732.000,
          Ev_HP_Tstart_G_Out=611.190,
          Ev_HP_Tstart_M_In=594.933,
          Ev_HP_Tstart_M_Out=603.160,
          Ev_HP_hstart_F_In=1.46797e6,
          Ev_HP_hstart_F_Out=1.90129e6,
          Ev_IP_Tstart_G_In=548.522,
          Ev_IP_Tstart_G_Out=503.810,
          Ev_IP_Tstart_M_In=497.865,
          Ev_IP_Tstart_M_Out=501.763,
          Ev_IP_hstart_F_In=9.64527e5,
          Ev_IP_hstart_F_Out=1.36736e6,
          Ev_LP_Tstart_G_In=468.900,
          Ev_LP_Tstart_G_Out=427.671,
          Ev_LP_Tstart_M_In=422.216,
          Ev_LP_Tstart_M_Out=434.622,
          Ev_LP_hstart_F_In=6.26623e5,
          Ev_LP_hstart_F_Out=1.22154e6,
          Sh2_HP_Tstart_G_In=884.650,
          Sh2_HP_Tstart_G_Out=849.290,
          Sh2_HP_Tstart_M_In=801.698,
          Sh2_HP_Tstart_M_Out=861.343,
          Sh2_HP_Tstart_F_In=792.680,
          Sh2_HP_Tstart_F_Out=857.106,
          Sh1_HP_Tstart_G_In=849.290,
          Sh1_HP_Tstart_G_Out=732.000,
          Sh1_HP_Tstart_M_In=624.205,
          Sh1_HP_Tstart_M_Out=803.585,
          Sh1_HP_Tstart_F_In=599.180,
          Sh1_HP_Tstart_F_Out=792.680,
          Rh2_IP_Tstart_M_In=793.962,
          Rh2_IP_Tstart_M_Out=863.890,
          Rh2_IP_Tstart_F_In=787.973,
          Rh2_IP_Tstart_F_Out=861.625,
          Rh1_IP_Tstart_M_In=641.307,
          Rh1_IP_Tstart_M_Out=793.753,
          Rh1_IP_Tstart_F_In=631.882,
          Rh1_IP_Tstart_F_Out=787.973,
          Sh_IP_Tstart_G_In=611.19,
          Sh_IP_Tstart_G_Out=605.074,
          Sh_IP_Tstart_M_In=504.237,
          Sh_IP_Tstart_M_Out=594.703,
          Sh_IP_Tstart_F_Out=594.001,
          Sh_LP(gamma_G=30, gamma_F=4000),
          Sh_LP_N_F=4,
          Ec_LP_Tstart_G_Out=372.309,
          Ec_LP(gamma_G=35, gamma_F=3000),
          Ev_LP(gamma_G=60, gamma_F=20000),
          Sh1HP_Rh1IP(
            gamma_G_A=70,
            gamma_G_B=70,
            gamma_F_A=4000,
            gamma_F_B=4000),
          Sh2HP_Rh2IP(
            gamma_F_A=4000,
            gamma_F_B=4000,
            gamma_G_A=70,
            gamma_G_B=70),
          Sh_IP_Tstart_F_In=499.962),  drums(
          fluidHPNomPressure=1.22116e7,
          fluidIPNomPressure=2.63694e6,
          fluidLPNomPressure=6.047e5,
          HPd_hvstart=2.61182e6,
          HPd_hlstart=1.411212e6,
          IPd_hvstart=2.79542e6,
          IPd_hlstart=9.22034e5,
          LPd_hvstart=2.75273e6,
          LPd_hlstart=6.10909e5),
        redeclare package FlueGasMedium = FlueGasMedium,
        redeclare package FluidMedium = FluidMedium) 
                              annotation (extent=[-20,-20; 60,60]);
      SteamTurbineGroup.Examples.STG_3LRh_valve_cc sTG_3LRh(
                                                      steamTurbines(
          steamHPNomPressure=1.2202e7,
          steamIPNomPressure=2.63681e6,
          steamLPNomPressure=6.047e5,
          HPT_hstart_in=3.56678e6,
          HPT_hstart_out=3.16451e6,
          IPT_hstart_in=3.65985e6,
          IPT_hstart_out=3.21285e6,
          LPT_hstart_in=3.16961e6,
          LPT_hstart_out=2.41849e6,
          mixLP_hstart=3.16953e6,
          mixIP_hstart=3.14446e6,
          steamHPNomFlowRate=62.8,
          steamIPNomFlowRate=14.5,
          steamLPNomFlowRate=10.9), controlledCondeser(Vlstart=5,
            setPoint_ratio=0.5),
        redeclare package FluidMedium = FluidMedium) 
        annotation (extent=[-20,-160; 60,-80]);
      annotation (Diagram, experiment(
          StopTime=15000,
          NumberOfIntervals=10000,
          Tolerance=1e-006),
        Coordsys(extent=[-200,-200; 200,200], scale=0.1));
    public 
      HRSG.Control.levelsControl levelsControl(
        CSmin_levelHP=30,
        CSmax_levelHP=96,
        CSmin_levelIP=5,
        CSmax_levelIP=25,
        CSmax_levelLP=2400) 
        annotation (extent=[100,60; 160,120]);
      ElectricGeneratorGroup.Examples.GeneratorGroup singleShaft(
        eta=0.9,
        J_shaft=15000,
        d_shaft=25,
        Pmax=150e6,
        delta_start=0.7) 
                    annotation (extent=[100,-160; 180,-80]);
      HRSG.Components.StateReader_gas stateGas_in(
                                             redeclare package Medium = 
            FlueGasMedium) annotation (extent=[-50,2; -30,22],    rotation=0);
      Modelica.Blocks.Sources.Ramp ramp(
        duration=500,
        startTime=5000,
        offset=1,
        height=-0.1)    annotation (extent=[-180,-30; -160,-10]);
      Gas.SinkP sinkGas(redeclare package Medium = FlueGasMedium, T=362.309) 
                       annotation (extent=[120,2; 140,22]);
      HRSG.Components.StateReader_gas stateGas_out(
                                              redeclare package Medium = 
            FlueGasMedium) annotation (extent=[90,2; 110,22],   rotation=0);
    public 
      Modelica.Blocks.Sources.BooleanConstant booleanConstant(k=true) 
        annotation (extent=[-180,40; -160,60]);
    public 
      Modelica.Blocks.Sources.Ramp valveHP_com(height=0, offset=1) 
        annotation (extent=[-180,160; -160,180]);
      Modelica.Blocks.Sources.Ramp valveIP_com(height=0, offset=1) 
        annotation (extent=[-180,120; -160,140]);
      Modelica.Blocks.Sources.Ramp valveLP_com(height=0, offset=1) 
        annotation (extent=[-180,80; -160,100]);
    protected 
      Buses.Actuators actuators annotation (extent=[-60,100; -80,120]);
    public 
      ThermoPower.PowerPlants.GasTurbine.Examples.GasTurbineSimplified 
        gasTurbine(redeclare package FlueGas = FlueGasMedium) 
        annotation (extent=[-140,-60; -60,20]);
    equation 
      connect(singleShaft.shaft, sTG_3LRh.Shaft_b) annotation (points=[100,-120;
            60,-120],
                    style(
          color=0,
          rgbcolor={0,0,0},
          thickness=2));
      connect(sTG_3LRh.WaterOut, hRSG.WaterIn) annotation (points=[52,-80; 52,
            -20],style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_LP, hRSG.Sh_LP_Out) annotation (points=[36,-80;
            36,-20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_RH_IP, hRSG.Rh_IP_Out) annotation (points=[12,-80;
            12,-20], style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_HP, hRSG.Sh_HP_Out) annotation (points=[-12,-80;
            -12,-20],style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sinkGas.flange,stateGas_out. outlet) annotation (points=[120,12;
            106,12],  style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(valveHP_com.y, actuators.Opening_valveHP) annotation (points=[-159,170;
            -70,170; -70,110],    style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveIP_com.y, actuators.Opening_valveIP) annotation (points=[-159,130;
            -70,130; -70,110],    style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(valveLP_com.y, actuators.Opening_valveLP) annotation (points=[-159,90;
            -70,90; -70,110],       style(
          color=74,
          rgbcolor={0,0,127},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(booleanConstant.y, actuators.ConnectedGenerator) annotation (
          points=[-159,50; -70,50; -70,110],
                                     style(
          color=5,
          rgbcolor={255,0,255},
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.From_SH_IP, hRSG.Sh_IP_Out) annotation (points=[24,-80;
            24,-20],                   style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(sTG_3LRh.To_RH_IP, hRSG.Rh_IP_In) annotation (points=[0,-80; 0,
            -20],                      style(
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(stateGas_out.inlet, hRSG.GasOut) annotation (points=[94,12; 60,12],
          style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(hRSG.GasIn, stateGas_in.outlet) annotation (points=[-20,12; -34,
            12], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2,
          fillColor=7,
          rgbfillColor={255,255,255},
          fillPattern=1));
      connect(stateGas_in.inlet, gasTurbine.flueGasOut) annotation (points=[-46,
            12; -60,12], style(
          color=76,
          rgbcolor={159,159,223},
          thickness=2));
      connect(gasTurbine.GTLoad, ramp.y) annotation (points=[-140,-20; -159,-20],
          style(color=74, rgbcolor={0,0,127}));
      connect(hRSG.ActuatorsBus, levelsControl.ActuatorsBus) annotation (points=
           [60,40; 180,40; 180,90; 160,90], style(color=52, rgbcolor={213,255,
              170}));
      connect(hRSG.SensorsBus, levelsControl.SensorsBus) annotation (points=[60,
            52; 80,52; 80,90; 100,90], style(color=84, rgbcolor={255,170,213}));
      connect(actuators, hRSG.ActuatorsBus) annotation (points=[-70,110; 72,110;
            72,40; 60,40], style(color=52, rgbcolor={213,255,170}));
      connect(hRSG.ActuatorsBus, sTG_3LRh.ActuatorsBus) annotation (points=[60,
            40; 72,40; 72,-148; 60,-148], style(color=52, rgbcolor={213,255,170}));
      connect(sTG_3LRh.SensorsBus, hRSG.SensorsBus) annotation (points=[60,-136;
            80,-136; 80,52; 60,52], style(color=84, rgbcolor={255,170,213}));
      connect(sTG_3LRh.SensorsBus, singleShaft.SensorsBus) annotation (points=[
            60,-136; 80,-136; 80,-180; 194,-180; 194,-140; 180,-140], style(
            color=84, rgbcolor={255,170,213}));
      connect(singleShaft.ActuatorsBus, sTG_3LRh.ActuatorsBus) annotation (
          points=[180,-152; 190,-152; 190,-172; 72,-172; 72,-148; 60,-148],
          style(color=52, rgbcolor={213,255,170}));
    end CCPP_Sim3;
  end Simulators;
end PowerPlants;
